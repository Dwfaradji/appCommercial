"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@auth";
exports.ids = ["vendor-chunks/@auth"];
exports.modules = {

/***/ "(rsc)/./node_modules/@auth/core/errors.js":
/*!*******************************************!*\
  !*** ./node_modules/@auth/core/errors.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AdapterError: () => (/* binding */ AdapterError),\n/* harmony export */   AuthError: () => (/* binding */ AuthError),\n/* harmony export */   AuthorizedCallbackError: () => (/* binding */ AuthorizedCallbackError),\n/* harmony export */   CallbackRouteError: () => (/* binding */ CallbackRouteError),\n/* harmony export */   CredentialsSignin: () => (/* binding */ CredentialsSignin),\n/* harmony export */   EmailSignInError: () => (/* binding */ EmailSignInError),\n/* harmony export */   ErrorPageLoop: () => (/* binding */ ErrorPageLoop),\n/* harmony export */   EventError: () => (/* binding */ EventError),\n/* harmony export */   InvalidCallbackUrl: () => (/* binding */ InvalidCallbackUrl),\n/* harmony export */   InvalidCheck: () => (/* binding */ InvalidCheck),\n/* harmony export */   InvalidEndpoints: () => (/* binding */ InvalidEndpoints),\n/* harmony export */   InvalidProvider: () => (/* binding */ InvalidProvider),\n/* harmony export */   JWTSessionError: () => (/* binding */ JWTSessionError),\n/* harmony export */   MissingAdapter: () => (/* binding */ MissingAdapter),\n/* harmony export */   MissingAdapterMethods: () => (/* binding */ MissingAdapterMethods),\n/* harmony export */   MissingAuthorize: () => (/* binding */ MissingAuthorize),\n/* harmony export */   MissingCSRF: () => (/* binding */ MissingCSRF),\n/* harmony export */   MissingSecret: () => (/* binding */ MissingSecret),\n/* harmony export */   OAuthAccountNotLinked: () => (/* binding */ OAuthAccountNotLinked),\n/* harmony export */   OAuthCallbackError: () => (/* binding */ OAuthCallbackError),\n/* harmony export */   OAuthProfileParseError: () => (/* binding */ OAuthProfileParseError),\n/* harmony export */   OAuthSignInError: () => (/* binding */ OAuthSignInError),\n/* harmony export */   SessionTokenError: () => (/* binding */ SessionTokenError),\n/* harmony export */   SignInError: () => (/* binding */ SignInError),\n/* harmony export */   SignOutError: () => (/* binding */ SignOutError),\n/* harmony export */   UnknownAction: () => (/* binding */ UnknownAction),\n/* harmony export */   UnsupportedStrategy: () => (/* binding */ UnsupportedStrategy),\n/* harmony export */   UntrustedHost: () => (/* binding */ UntrustedHost),\n/* harmony export */   Verification: () => (/* binding */ Verification)\n/* harmony export */ });\n/**\n * Base error class for all Auth.js errors.\n * It's optimized to be printed in the server logs in a nicely formatted way\n * via the [`logger.error`](https://authjs.dev/reference/core#logger) option.\n */ class AuthError extends Error {\n    constructor(message, errorOptions){\n        if (message instanceof Error) {\n            super(undefined, {\n                cause: {\n                    err: message,\n                    ...message.cause,\n                    ...errorOptions\n                }\n            });\n        } else if (typeof message === \"string\") {\n            if (errorOptions instanceof Error) {\n                errorOptions = {\n                    err: errorOptions,\n                    ...errorOptions.cause\n                };\n            }\n            super(message, errorOptions);\n        } else {\n            super(undefined, message);\n        }\n        this.name = this.constructor.name;\n        // @ts-expect-error https://github.com/microsoft/TypeScript/issues/3841\n        this.type = this.constructor.type ?? \"AuthError\";\n        // @ts-expect-error https://github.com/microsoft/TypeScript/issues/3841\n        this.kind = this.constructor.kind ?? \"error\";\n        Error.captureStackTrace?.(this, this.constructor);\n        const url = `https://errors.authjs.dev#${this.type.toLowerCase()}`;\n        this.message += `${this.message ? \" .\" : \"\"}Read more at ${url}`;\n    }\n}\nclass SignInError extends AuthError {\n}\nSignInError.kind = \"signIn\";\n/**\n * One of the database [`Adapter` methods](https://auithjs.dev/reference/core/adapters#methods)\n * failed during execution.\n *\n * :::tip\n * If `debug: true` is set, you can check out `[auth][debug]` in the logs to learn more about the failed adapter method execution.\n * @example\n * ```sh\n * [auth][debug]: adapter_getUserByEmail\n * { \"args\": [undefined] }\n * ```\n * :::\n */ class AdapterError extends AuthError {\n}\nAdapterError.type = \"AdapterError\";\n/**\n * Thrown when the execution of the [`signIn` callback](https://authjs.dev/reference/core/types#signin) fails\n * or if it returns `false`.\n */ class AuthorizedCallbackError extends AuthError {\n}\nAuthorizedCallbackError.type = \"AuthorizedCallbackError\";\n/**\n * This error occurs when the user cannot finish login.\n * Depending on the provider type, this could have happened for multiple reasons.\n *\n * :::tip\n * Check out `[auth][details]` in the logs to know which provider failed.\n * @example\n * ```sh\n * [auth][details]: { \"provider\": \"github\" }\n * ```\n * :::\n *\n * For an [OAuth provider](https://authjs.dev/reference/core/providers/oauth), possible causes are:\n * - The user denied access to the application\n * - There was an error parsing the OAuth Profile:\n *   Check out the provider's `profile` or `userinfo.request` method to make sure\n *   it correctly fetches the user's profile.\n * - The `signIn` or `jwt` callback methods threw an uncaught error:\n *   Check the callback method implementations.\n *\n * For an [Email provider](https://authjs.dev/reference/core/providers/email), possible causes are:\n * - The provided email/token combination was invalid/missing:\n *   Check if the provider's `sendVerificationRequest` method correctly sends the email.\n * - The provided email/token combination has expired:\n *   Ask the user to log in again.\n * - There was an error with the database:\n *   Check the database logs.\n *\n * For a [Credentials provider](https://authjs.dev/reference/core/providers/credentials), possible causes are:\n * - The `authorize` method threw an uncaught error:\n *   Check the provider's `authorize` method.\n * - The `signIn` or `jwt` callback methods threw an uncaught error:\n *   Check the callback method implementations.\n *\n * :::tip\n * Check out `[auth][cause]` in the error message for more details.\n * It will show the original stack trace.\n * :::\n */ class CallbackRouteError extends AuthError {\n}\nCallbackRouteError.type = \"CallbackRouteError\";\n/**\n * Thrown when Auth.js is misconfigured and accidentally tried to require authentication on a custom error page.\n * To prevent an infinite loop, Auth.js will instead render its default error page.\n *\n * To fix this, make sure that the `error` page does not require authentication.\n *\n * Learn more at [Guide: Error pages](https://authjs.dev/guides/basics/pages)\n */ class ErrorPageLoop extends AuthError {\n}\nErrorPageLoop.type = \"ErrorPageLoop\";\n/**\n * One of the [`events` methods](https://authjs.dev/reference/core/types#eventcallbacks)\n * failed during execution.\n *\n * Make sure that the `events` methods are implemented correctly and uncaught errors are handled.\n *\n * Learn more at [`events`](https://authjs.dev/reference/core/types#eventcallbacks)\n */ class EventError extends AuthError {\n}\nEventError.type = \"EventError\";\n/**\n * Thrown when Auth.js is unable to verify a `callbackUrl` value.\n * The browser either disabled cookies or the `callbackUrl` is not a valid URL.\n *\n * Somebody might have tried to manipulate the callback URL that Auth.js uses to redirect the user back to the configured `callbackUrl`/page.\n * This could be a malicious hacker trying to redirect the user to a phishing site.\n * To prevent this, Auth.js checks if the callback URL is valid and throws this error if it is not.\n *\n * There is no action required, but it might be an indicator that somebody is trying to attack your application.\n */ class InvalidCallbackUrl extends AuthError {\n}\nInvalidCallbackUrl.type = \"InvalidCallbackUrl\";\n/**\n * The `authorize` callback returned `null` in the [Credentials provider](https://authjs.dev/getting-started/providers/credentials-tutorial).\n * We don't recommend providing information about which part of the credentials were wrong, as it might be abused by malicious hackers.\n */ class CredentialsSignin extends SignInError {\n}\nCredentialsSignin.type = \"CredentialsSignin\";\n/**\n * One of the configured OAuth or OIDC providers is missing the `authorization`, `token` or `userinfo`, or `issuer` configuration.\n * To perform OAuth or OIDC sign in, at least one of these endpoints is required.\n *\n * Learn more at [`OAuth2Config`](https://authjs.dev/reference/core/providers#oauth2configprofile) or [Guide: OAuth Provider](https://authjs.dev/guides/providers/custom-provider)\n */ class InvalidEndpoints extends AuthError {\n}\nInvalidEndpoints.type = \"InvalidEndpoints\";\n/**\n * Thrown when a PKCE, state or nonce OAuth check could not be performed.\n * This could happen if the OAuth provider is configured incorrectly or if the browser is blocking cookies.\n *\n * Learn more at [`checks`](https://authjs.dev/reference/core/providers#checks)\n */ class InvalidCheck extends AuthError {\n}\nInvalidCheck.type = \"InvalidCheck\";\n/**\n * Logged on the server when Auth.js could not decode or encode a JWT-based (`strategy: \"jwt\"`) session.\n *\n * Possible causes are either a misconfigured `secret` or a malformed JWT or `encode/decode` methods.\n *\n * :::note\n * When this error is logged, the session cookie is destroyed.\n * :::\n *\n * Learn more at [`secret`](https://authjs.dev/reference/core#secret), [`jwt.encode`](https://authjs.dev/reference/core/jwt#encode) or [`jwt.decode`](https://authjs.dev/reference/core/jwt#decode) for more information.\n */ class JWTSessionError extends AuthError {\n}\nJWTSessionError.type = \"JWTSessionError\";\n/**\n * Thrown if Auth.js is misonfigured. This could happen if you configured an Email provider but did not set up a database adapter,\n * or tried using a `strategy: \"database\"` session without a database adapter.\n * In both cases, make sure you either remove the configuration or add the missing adapter.\n *\n * Learn more at [Database Adapters](https://authjs.dev/getting-started/adapters), [Email provider](https://authjs.dev/reference/core/providers/email) or [Concept: Database session strategy](https://authjs.dev/concepts/session-strategies#database)\n */ class MissingAdapter extends AuthError {\n}\nMissingAdapter.type = \"MissingAdapter\";\n/**\n * Thrown similarily to [`MissingAdapter`](https://authjs.dev/reference/core/errors#missingadapter), but only some required methods were missing.\n *\n * Make sure you either remove the configuration or add the missing methods to the adapter.\n *\n * Learn more at [Database Adapters](https://authjs.dev/reference/core/adapters)\n */ class MissingAdapterMethods extends AuthError {\n}\nMissingAdapterMethods.type = \"MissingAdapterMethods\";\n/**\n * Thrown when a Credentials provider is missing the `authorize` configuration.\n * To perform credentials sign in, the `authorize` method is required.\n *\n * Learn more at [Credentials provider](https://authjs.dev/reference/core/providers/credentials)\n */ class MissingAuthorize extends AuthError {\n}\nMissingAuthorize.type = \"MissingAuthorize\";\n/**\n * Auth.js requires a secret to be set, but none was not found. This is used to encrypt cookies, JWTs and other sensitive data.\n *\n * :::note\n * If you are using a framework like Next.js, we try to automatically infer the secret from the `AUTH_SECRET` environment variable.\n * Alternatively, you can also explicitly set the [`AuthConfig.secret`](https://authjs.dev/reference/core#secret).\n * :::\n *\n *\n * :::tip\n * You can generate a good secret value:\n *  - On Unix systems: type `openssl rand -hex 32` in the terminal\n *  - Or generate one [online](https://generate-secret.vercel.app/32)\n *\n * :::\n */ class MissingSecret extends AuthError {\n}\nMissingSecret.type = \"MissingSecret\";\n/**\n * Thrown when an Email address is already associated with an account\n * but the user is trying an OAuth account that is not linked to it.\n *\n * For security reasons, Auth.js does not automatically link OAuth accounts to existing accounts if the user is not signed in.\n *\n * :::tip\n * If you trust the OAuth provider to have verified the user's email address,\n * you can enable automatic account linking by setting [`allowDangerousEmailAccountLinking: true`](https://authjs.dev/reference/core/providers#allowdangerousemailaccountlinking)\n * in the provider configuration.\n * :::\n */ class OAuthAccountNotLinked extends SignInError {\n}\nOAuthAccountNotLinked.type = \"OAuthAccountNotLinked\";\n/**\n * Thrown when an OAuth provider returns an error during the sign in process.\n * This could happen for example if the user denied access to the application or there was a configuration error.\n *\n * For a full list of possible reasons, check out the specification [Authorization Code Grant: Error Response](https://www.rfc-editor.org/rfc/rfc6749#section-4.1.2.1)\n */ class OAuthCallbackError extends SignInError {\n}\nOAuthCallbackError.type = \"OAuthCallbackError\";\n/**\n * This error occurs during an OAuth sign in attempt when the provdier's\n * response could not be parsed. This could for example happen if the provider's API\n * changed, or the [`OAuth2Config.profile`](https://authjs.dev/reference/core/providers/oauth#profile) method is not implemented correctly.\n */ class OAuthProfileParseError extends AuthError {\n}\nOAuthProfileParseError.type = \"OAuthProfileParseError\";\n/**\n * Logged on the server when Auth.js could not retrieve a session from the database (`strategy: \"database\"`).\n *\n * The database adapter might be misconfigured or the database is not reachable.\n *\n * Learn more at [Concept: Database session strategy](https://authjs.dev/concepts/session-strategies#database)\n */ class SessionTokenError extends AuthError {\n}\nSessionTokenError.type = \"SessionTokenError\";\n/**\n * Happens when login by [OAuth](https://authjs.dev/getting-started/providers/oauth-tutorial) could not be started.\n *\n * Possible causes are:\n * - The Authorization Server is not compliant with the [OAuth 2.0](https://www.ietf.org/rfc/rfc6749.html) or the [OIDC](https://openid.net/specs/openid-connect-core-1_0.html) specification.\n *   Check the details in the error message.\n *\n * :::tip\n * Check out `[auth][details]` in the logs to know which provider failed.\n * @example\n * ```sh\n * [auth][details]: { \"provider\": \"github\" }\n * ```\n * :::\n */ class OAuthSignInError extends SignInError {\n}\nOAuthSignInError.type = \"OAuthSignInError\";\n/**\n * Happens when the login by an [Email provider](https://authjs.dev/getting-started/providers/email-tutorial) could not be started.\n *\n * Possible causes are:\n * - The email sent from the client is invalid, could not be normalized by [`EmailConfig.normalizeIdentifier`](https://authjs.dev/reference/core/providers/email#normalizeidentifier)\n * - The provided email/token combination has expired:\n *   Ask the user to log in again.\n * - There was an error with the database:\n *   Check the database logs.\n */ class EmailSignInError extends SignInError {\n}\nEmailSignInError.type = \"EmailSignInError\";\n/**\n * Represents an error that occurs during the sign-out process. This error\n * is logged when there are issues in terminating a user's session, either\n * by failing to delete the session from the database (in database session\n * strategies) or encountering issues during other parts of the sign-out\n * process, such as emitting sign-out events or clearing session cookies.\n *\n * The session cookie(s) are emptied even if this error is logged.\n *\n */ class SignOutError extends AuthError {\n}\nSignOutError.type = \"SignOutError\";\n/**\n * Auth.js was requested to handle an operation that it does not support.\n *\n * See [`AuthAction`](https://authjs.dev/reference/core/types#authaction) for the supported actions.\n */ class UnknownAction extends AuthError {\n}\nUnknownAction.type = \"UnknownAction\";\n/**\n * Thrown when a Credentials provider is present but the JWT strategy (`strategy: \"jwt\"`) is not enabled.\n *\n * Learn more at [`strategy`](https://authjs.dev/reference/core#strategy) or [Credentials provider](https://authjs.dev/reference/core/providers/credentials)\n */ class UnsupportedStrategy extends AuthError {\n}\nUnsupportedStrategy.type = \"UnsupportedStrategy\";\n/** Thrown when the callback endpoint was incorrectly called without a provider. */ class InvalidProvider extends AuthError {\n}\nInvalidProvider.type = \"InvalidProvider\";\n/**\n * Thrown when the `trustHost` option was not set to `true`.\n *\n * Auth.js requires the `trustHost` option to be set to `true` since it's relying on the request headers' `host` value.\n *\n * :::note\n * Official Auth.js libraries might attempt to automatically set the `trustHost` option to `true` if the request is coming from a trusted host on a trusted platform.\n * :::\n *\n * Learn more at [`trustHost`](https://authjs.dev/reference/core#trusthost) or [Guide: Deployment](https://authjs.dev/getting-started/deployment)\n */ class UntrustedHost extends AuthError {\n}\nUntrustedHost.type = \"UntrustedHost\";\n/**\n * The user's email/token combination was invalid.\n * This could be because the email/token combination was not found in the database,\n * or because the token has expired. Ask the user to log in again.\n */ class Verification extends AuthError {\n}\nVerification.type = \"Verification\";\n/**\n * Error for missing CSRF tokens in client-side actions (`signIn`, `signOut`, `useSession#update`).\n * Thrown when actions lack the double submit cookie, essential for CSRF protection.\n *\n * CSRF ([Cross-Site Request Forgery](https://owasp.org/www-community/attacks/csrf))\n * is an attack leveraging authenticated user credentials for unauthorized actions.\n *\n * Double submit cookie pattern, a CSRF defense, requires matching values in a cookie\n * and request parameter. More on this at [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/Security/CSRF).\n */ class MissingCSRF extends SignInError {\n}\nMissingCSRF.type = \"MissingCSRF\";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@auth/core/errors.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@auth/core/index.js":
/*!******************************************!*\
  !*** ./node_modules/@auth/core/index.js ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Auth: () => (/* binding */ Auth),\n/* harmony export */   raw: () => (/* reexport safe */ _lib_index_js__WEBPACK_IMPORTED_MODULE_2__.raw),\n/* harmony export */   skipCSRFCheck: () => (/* reexport safe */ _lib_index_js__WEBPACK_IMPORTED_MODULE_2__.skipCSRFCheck)\n/* harmony export */ });\n/* harmony import */ var _lib_utils_assert_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/utils/assert.js */ \"(rsc)/./node_modules/@auth/core/lib/utils/assert.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./errors.js */ \"(rsc)/./node_modules/@auth/core/errors.js\");\n/* harmony import */ var _lib_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/index.js */ \"(rsc)/./node_modules/@auth/core/lib/index.js\");\n/* harmony import */ var _lib_pages_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/pages/index.js */ \"(rsc)/./node_modules/@auth/core/lib/pages/index.js\");\n/* harmony import */ var _lib_utils_logger_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/utils/logger.js */ \"(rsc)/./node_modules/@auth/core/lib/utils/logger.js\");\n/* harmony import */ var _lib_utils_web_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lib/utils/web.js */ \"(rsc)/./node_modules/@auth/core/lib/utils/web.js\");\n/**\n *\n * :::warning Experimental\n * `@auth/core` is under active development.\n * :::\n *\n * This is the main entry point to the Auth.js library.\n *\n * Based on the {@link https://developer.mozilla.org/en-US/docs/Web/API/Request Request}\n * and {@link https://developer.mozilla.org/en-US/docs/Web/API/Response Response} Web standard APIs.\n * Primarily used to implement [framework](https://authjs.dev/concepts/frameworks)-specific packages,\n * but it can also be used directly.\n *\n * ## Installation\n *\n * ```bash npm2yarn\n * npm install @auth/core\n * ```\n *\n * ## Usage\n *\n * ```ts\n * import { Auth } from \"@auth/core\"\n *\n * const request = new Request(\"https://example.com\")\n * const response = await Auth(request, {...})\n *\n * console.log(response instanceof Response) // true\n * ```\n *\n * ## Resources\n *\n * - [Getting started](https://authjs.dev/getting-started/introduction)\n * - [Most common use case guides](https://authjs.dev/guides)\n *\n * @module @auth/core\n */ \n\n\n\n\n\n\n/**\n * Core functionality provided by Auth.js.\n *\n * Receives a standard {@link Request} and returns a {@link Response}.\n *\n * @example\n * ```ts\n * import Auth from \"@auth/core\"\n *\n * const request = new Request(\"https://example.com\")\n * const response = await AuthHandler(request, {\n *   providers: [...],\n *   secret: \"...\",\n *   trustHost: true,\n * })\n *```\n * @see [Documentation](https://authjs.dev)\n */ async function Auth(request, config) {\n    (0,_lib_utils_logger_js__WEBPACK_IMPORTED_MODULE_4__.setLogger)(config.logger, config.debug);\n    const internalRequest = await (0,_lib_utils_web_js__WEBPACK_IMPORTED_MODULE_5__.toInternalRequest)(request);\n    if (internalRequest instanceof Error) {\n        _lib_utils_logger_js__WEBPACK_IMPORTED_MODULE_4__.logger.error(internalRequest);\n        return Response.json(`Error: This action with HTTP ${request.method} is not supported.`, {\n            status: 400\n        });\n    }\n    const assertionResult = (0,_lib_utils_assert_js__WEBPACK_IMPORTED_MODULE_0__.assertConfig)(internalRequest, config);\n    if (Array.isArray(assertionResult)) {\n        assertionResult.forEach(_lib_utils_logger_js__WEBPACK_IMPORTED_MODULE_4__.logger.warn);\n    } else if (assertionResult instanceof Error) {\n        // Bail out early if there's an error in the user config\n        _lib_utils_logger_js__WEBPACK_IMPORTED_MODULE_4__.logger.error(assertionResult);\n        const htmlPages = [\n            \"signin\",\n            \"signout\",\n            \"error\",\n            \"verify-request\"\n        ];\n        if (!htmlPages.includes(internalRequest.action) || internalRequest.method !== \"GET\") {\n            return new Response(JSON.stringify({\n                message: \"There was a problem with the server configuration. Check the server logs for more information.\",\n                code: assertionResult.name\n            }), {\n                status: 500,\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n        }\n        const { pages, theme } = config;\n        const authOnErrorPage = pages?.error && internalRequest.url.searchParams.get(\"callbackUrl\")?.startsWith(pages.error);\n        if (!pages?.error || authOnErrorPage) {\n            if (authOnErrorPage) {\n                _lib_utils_logger_js__WEBPACK_IMPORTED_MODULE_4__.logger.error(new _errors_js__WEBPACK_IMPORTED_MODULE_1__.ErrorPageLoop(`The error page ${pages?.error} should not require authentication`));\n            }\n            const render = (0,_lib_pages_index_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({\n                theme\n            });\n            const page = render.error(\"Configuration\");\n            return (0,_lib_utils_web_js__WEBPACK_IMPORTED_MODULE_5__.toResponse)(page);\n        }\n        return Response.redirect(`${pages.error}?error=Configuration`);\n    }\n    const isRedirect = request.headers?.has(\"X-Auth-Return-Redirect\");\n    const isRaw = config.raw === _lib_index_js__WEBPACK_IMPORTED_MODULE_2__.raw;\n    let response;\n    try {\n        const rawResponse = await (0,_lib_index_js__WEBPACK_IMPORTED_MODULE_2__.AuthInternal)(internalRequest, config);\n        if (isRaw) return rawResponse;\n        response = await (0,_lib_utils_web_js__WEBPACK_IMPORTED_MODULE_5__.toResponse)(rawResponse);\n    } catch (e) {\n        const error = e;\n        _lib_utils_logger_js__WEBPACK_IMPORTED_MODULE_4__.logger.error(error);\n        const isAuthError = error instanceof _errors_js__WEBPACK_IMPORTED_MODULE_1__.AuthError;\n        if (isAuthError && isRaw && !isRedirect) throw error;\n        // If the CSRF check failed for POST/session, return a 400 status code.\n        // We should not redirect to a page as this is an API route\n        if (request.method === \"POST\" && internalRequest.action === \"session\") return Response.json(null, {\n            status: 400\n        });\n        const type = isAuthError ? error.type : \"Configuration\";\n        const page = isAuthError && error.kind || \"error\";\n        const params = new URLSearchParams({\n            error: type\n        });\n        const path = config.pages?.[page] ?? `${internalRequest.url.pathname}/${page.toLowerCase()}`;\n        const url = `${internalRequest.url.origin}${path}?${params}`;\n        if (isRedirect) return Response.json({\n            url\n        });\n        return Response.redirect(url);\n    }\n    const redirect = response.headers.get(\"Location\");\n    if (!isRedirect || !redirect) return response;\n    return Response.json({\n        url: redirect\n    }, {\n        headers: response.headers\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@auth/core/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@auth/core/jwt.js":
/*!****************************************!*\
  !*** ./node_modules/@auth/core/jwt.js ***!
  \****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   getToken: () => (/* binding */ getToken)\n/* harmony export */ });\n/* harmony import */ var _panva_hkdf__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @panva/hkdf */ \"(rsc)/./node_modules/@panva/hkdf/dist/node/esm/index.js\");\n/* harmony import */ var jose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jose */ \"(rsc)/./node_modules/jose/dist/node/esm/index.js\");\n/* harmony import */ var _lib_utils_cookie_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/utils/cookie.js */ \"(rsc)/./node_modules/@auth/core/lib/utils/cookie.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./errors.js */ \"(rsc)/./node_modules/@auth/core/errors.js\");\n/* harmony import */ var cookie__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! cookie */ \"(rsc)/./node_modules/cookie/index.js\");\n/**\n *\n *\n * This module contains functions and types\n * to encode and decode {@link https://authjs.dev/concepts/session-strategies#jwt JWT}s\n * issued and used by Auth.js.\n *\n * The JWT issued by Auth.js is _encrypted by default_, using the _A256GCM_ algorithm ({@link https://www.rfc-editor.org/rfc/rfc7516 JWE}).\n * It uses the `AUTH_SECRET` environment variable to derive a sufficient encryption key.\n *\n * :::info Note\n * Auth.js JWTs are meant to be used by the same app that issued them.\n * If you need JWT authentication for your third-party API, you should rely on your Identity Provider instead.\n * :::\n *\n * ## Installation\n *\n * ```bash npm2yarn\n * npm install @auth/core\n * ```\n *\n * You can then import this submodule from `@auth/core/jwt`.\n *\n * ## Usage\n *\n * :::warning Warning\n * This module *will* be refactored/changed. We do not recommend relying on it right now.\n * :::\n *\n *\n * ## Resources\n *\n * - [What is a JWT session strategy](https://authjs.dev/concepts/session-strategies#jwt)\n * - [RFC7519 - JSON Web Token (JWT)](https://www.rfc-editor.org/rfc/rfc7519)\n *\n * @module jwt\n */ \n\n\n\n\nconst DEFAULT_MAX_AGE = 30 * 24 * 60 * 60; // 30 days\nconst now = ()=>Date.now() / 1000 | 0;\n/** Issues a JWT. By default, the JWT is encrypted using \"A256GCM\". */ async function encode(params) {\n    const { token = {}, secret, maxAge = DEFAULT_MAX_AGE, salt } = params;\n    const encryptionSecret = await getDerivedEncryptionKey(secret, salt);\n    // @ts-expect-error `jose` allows any object as payload.\n    return await new jose__WEBPACK_IMPORTED_MODULE_1__.EncryptJWT(token).setProtectedHeader({\n        alg: \"dir\",\n        enc: \"A256GCM\"\n    }).setIssuedAt().setExpirationTime(now() + maxAge).setJti(crypto.randomUUID()).encrypt(encryptionSecret);\n}\n/** Decodes a Auth.js issued JWT. */ async function decode(params) {\n    const { token, secret, salt } = params;\n    if (!token) return null;\n    const encryptionSecret = await getDerivedEncryptionKey(secret, salt);\n    const { payload } = await (0,jose__WEBPACK_IMPORTED_MODULE_1__.jwtDecrypt)(token, encryptionSecret, {\n        clockTolerance: 15\n    });\n    return payload;\n}\nasync function getToken(params) {\n    const { secureCookie, cookieName = secureCookie ? \"__Secure-auth.session-token\" : \"auth.session-token\", decode: _decode = decode, salt = cookieName, secret, logger = console, raw, req } = params;\n    if (!req) throw new Error(\"Must pass `req` to JWT getToken()\");\n    if (!secret) throw new _errors_js__WEBPACK_IMPORTED_MODULE_3__.MissingSecret(\"Must pass `secret` if not set to JWT getToken()\");\n    const headers = req.headers instanceof Headers ? req.headers : new Headers(req.headers);\n    const sessionStore = new _lib_utils_cookie_js__WEBPACK_IMPORTED_MODULE_2__.SessionStore({\n        name: cookieName,\n        options: {\n            secure: secureCookie\n        }\n    }, (0,cookie__WEBPACK_IMPORTED_MODULE_4__.parse)(headers.get(\"cookie\") ?? \"\"), logger);\n    let token = sessionStore.value;\n    const authorizationHeader = headers.get(\"authorization\");\n    if (!token && authorizationHeader?.split(\" \")[0] === \"Bearer\") {\n        const urlEncodedToken = authorizationHeader.split(\" \")[1];\n        token = decodeURIComponent(urlEncodedToken);\n    }\n    if (!token) return null;\n    if (raw) return token;\n    try {\n        return await _decode({\n            token,\n            secret,\n            salt\n        });\n    } catch  {\n        return null;\n    }\n}\nasync function getDerivedEncryptionKey(keyMaterial, salt) {\n    return await (0,_panva_hkdf__WEBPACK_IMPORTED_MODULE_0__.hkdf)(\"sha256\", keyMaterial, salt, `Auth.js Generated Encryption Key (${salt})`, 32);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@auth/core/jwt.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@auth/core/lib/actions/callback/handle-login.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@auth/core/lib/actions/callback/handle-login.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handleLoginOrRegister: () => (/* binding */ handleLoginOrRegister)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../errors.js */ \"(rsc)/./node_modules/@auth/core/errors.js\");\n/* harmony import */ var _utils_date_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/date.js */ \"(rsc)/./node_modules/@auth/core/lib/utils/date.js\");\n\n\n/**\n * This function handles the complex flow of signing users in, and either creating,\n * linking (or not linking) accounts depending on if the user is currently logged\n * in, if they have account already and the authentication mechanism they are using.\n *\n * It prevents insecure behaviour, such as linking OAuth accounts unless a user is\n * signed in and authenticated with an existing valid account.\n *\n * All verification (e.g. OAuth flows or email address verification flows) are\n * done prior to this handler being called to avoid additional complexity in this\n * handler.\n */ async function handleLoginOrRegister(sessionToken, _profile, _account, options) {\n    // Input validation\n    if (!_account?.providerAccountId || !_account.type) throw new Error(\"Missing or invalid provider account\");\n    if (![\n        \"email\",\n        \"oauth\",\n        \"oidc\"\n    ].includes(_account.type)) throw new Error(\"Provider not supported\");\n    const { adapter, jwt, events, session: { strategy: sessionStrategy, generateSessionToken } } = options;\n    // If no adapter is configured then we don't have a database and cannot\n    // persist data; in this mode we just return a dummy session object.\n    if (!adapter) {\n        return {\n            user: _profile,\n            account: _account\n        };\n    }\n    const profile = _profile;\n    let account = _account;\n    const { createUser, updateUser, getUser, getUserByAccount, getUserByEmail, linkAccount, createSession, getSessionAndUser, deleteSession } = adapter;\n    let session = null;\n    let user = null;\n    let isNewUser = false;\n    const useJwtSession = sessionStrategy === \"jwt\";\n    if (sessionToken) {\n        if (useJwtSession) {\n            try {\n                const salt = options.cookies.sessionToken.name;\n                session = await jwt.decode({\n                    ...jwt,\n                    token: sessionToken,\n                    salt\n                });\n                if (session && \"sub\" in session && session.sub) {\n                    user = await getUser(session.sub);\n                }\n            } catch  {\n            // If session can't be verified, treat as no session\n            }\n        } else {\n            const userAndSession = await getSessionAndUser(sessionToken);\n            if (userAndSession) {\n                session = userAndSession.session;\n                user = userAndSession.user;\n            }\n        }\n    }\n    if (account.type === \"email\") {\n        // If signing in with an email, check if an account with the same email address exists already\n        const userByEmail = await getUserByEmail(profile.email);\n        if (userByEmail) {\n            // If they are not already signed in as the same user, this flow will\n            // sign them out of the current session and sign them in as the new user\n            if (user?.id !== userByEmail.id && !useJwtSession && sessionToken) {\n                // Delete existing session if they are currently signed in as another user.\n                // This will switch user accounts for the session in cases where the user was\n                // already logged in with a different account.\n                await deleteSession(sessionToken);\n            }\n            // Update emailVerified property on the user object\n            user = await updateUser({\n                id: userByEmail.id,\n                emailVerified: new Date()\n            });\n            await events.updateUser?.({\n                user\n            });\n        } else {\n            const { id: _, ...newUser } = {\n                ...profile,\n                emailVerified: new Date()\n            };\n            // Create user account if there isn't one for the email address already\n            user = await createUser(newUser);\n            await events.createUser?.({\n                user\n            });\n            isNewUser = true;\n        }\n        // Create new session\n        session = useJwtSession ? {} : await createSession({\n            sessionToken: generateSessionToken(),\n            userId: user.id,\n            expires: (0,_utils_date_js__WEBPACK_IMPORTED_MODULE_1__.fromDate)(options.session.maxAge)\n        });\n        return {\n            session,\n            user,\n            isNewUser\n        };\n    }\n    // If signing in with OAuth account, check to see if the account exists already\n    const userByAccount = await getUserByAccount({\n        providerAccountId: account.providerAccountId,\n        provider: account.provider\n    });\n    if (userByAccount) {\n        if (user) {\n            // If the user is already signed in with this account, we don't need to do anything\n            if (userByAccount.id === user.id) {\n                return {\n                    session,\n                    user,\n                    isNewUser\n                };\n            }\n            // If the user is currently signed in, but the new account they are signing in\n            // with is already associated with another user, then we cannot link them\n            // and need to return an error.\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.OAuthAccountNotLinked(\"The account is already associated with another user\", {\n                provider: account.provider\n            });\n        }\n        // If there is no active session, but the account being signed in with is already\n        // associated with a valid user then create session to sign the user in.\n        session = useJwtSession ? {} : await createSession({\n            sessionToken: generateSessionToken(),\n            userId: userByAccount.id,\n            expires: (0,_utils_date_js__WEBPACK_IMPORTED_MODULE_1__.fromDate)(options.session.maxAge)\n        });\n        return {\n            session,\n            user: userByAccount,\n            isNewUser\n        };\n    } else {\n        const { provider: p } = options;\n        const { type, provider, providerAccountId, userId, ...tokenSet } = account;\n        const defaults = {\n            providerAccountId,\n            provider,\n            type,\n            userId\n        };\n        account = Object.assign(p.account(tokenSet) ?? {}, defaults);\n        if (user) {\n            // If the user is already signed in and the OAuth account isn't already associated\n            // with another user account then we can go ahead and link the accounts safely.\n            await linkAccount({\n                ...account,\n                userId: user.id\n            });\n            await events.linkAccount?.({\n                user,\n                account,\n                profile\n            });\n            // As they are already signed in, we don't need to do anything after linking them\n            return {\n                session,\n                user,\n                isNewUser\n            };\n        }\n        // If the user is not signed in and it looks like a new OAuth account then we\n        // check there also isn't an user account already associated with the same\n        // email address as the one in the OAuth profile.\n        //\n        // This step is often overlooked in OAuth implementations, but covers the following cases:\n        //\n        // 1. It makes it harder for someone to accidentally create two accounts.\n        //    e.g. by signin in with email, then again with an oauth account connected to the same email.\n        // 2. It makes it harder to hijack a user account using a 3rd party OAuth account.\n        //    e.g. by creating an oauth account then changing the email address associated with it.\n        //\n        // It's quite common for services to automatically link accounts in this case, but it's\n        // better practice to require the user to sign in *then* link accounts to be sure\n        // someone is not exploiting a problem with a third party OAuth service.\n        //\n        // OAuth providers should require email address verification to prevent this, but in\n        // practice that is not always the case; this helps protect against that.\n        const userByEmail = profile.email ? await getUserByEmail(profile.email) : null;\n        if (userByEmail) {\n            const provider = options.provider;\n            if (provider?.allowDangerousEmailAccountLinking) {\n                // If you trust the oauth provider to correctly verify email addresses, you can opt-in to\n                // account linking even when the user is not signed-in.\n                user = userByEmail;\n            } else {\n                // We end up here when we don't have an account with the same [provider].id *BUT*\n                // we do already have an account with the same email address as the one in the\n                // OAuth profile the user has just tried to sign in with.\n                //\n                // We don't want to have two accounts with the same email address, and we don't\n                // want to link them in case it's not safe to do so, so instead we prompt the user\n                // to sign in via email to verify their identity and then link the accounts.\n                throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.OAuthAccountNotLinked(\"Another account already exists with the same e-mail address\", {\n                    provider: account.provider\n                });\n            }\n        } else {\n            // If the current user is not logged in and the profile isn't linked to any user\n            // accounts (by email or provider account id)...\n            //\n            // If no account matching the same [provider].id or .email exists, we can\n            // create a new account for the user, link it to the OAuth account and\n            // create a new session for them so they are signed in with it.\n            const { id: _, ...newUser } = {\n                ...profile,\n                emailVerified: null\n            };\n            user = await createUser(newUser);\n        }\n        await events.createUser?.({\n            user\n        });\n        await linkAccount({\n            ...account,\n            userId: user.id\n        });\n        await events.linkAccount?.({\n            user,\n            account,\n            profile\n        });\n        session = useJwtSession ? {} : await createSession({\n            sessionToken: generateSessionToken(),\n            userId: user.id,\n            expires: (0,_utils_date_js__WEBPACK_IMPORTED_MODULE_1__.fromDate)(options.session.maxAge)\n        });\n        return {\n            session,\n            user,\n            isNewUser: true\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@auth/core/lib/actions/callback/handle-login.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@auth/core/lib/actions/callback/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/@auth/core/lib/actions/callback/index.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   callback: () => (/* binding */ callback)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../errors.js */ \"(rsc)/./node_modules/@auth/core/errors.js\");\n/* harmony import */ var _handle_login_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./handle-login.js */ \"(rsc)/./node_modules/@auth/core/lib/actions/callback/handle-login.js\");\n/* harmony import */ var _oauth_callback_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./oauth/callback.js */ \"(rsc)/./node_modules/@auth/core/lib/actions/callback/oauth/callback.js\");\n/* harmony import */ var _oauth_checks_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./oauth/checks.js */ \"(rsc)/./node_modules/@auth/core/lib/actions/callback/oauth/checks.js\");\n/* harmony import */ var _utils_web_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/web.js */ \"(rsc)/./node_modules/@auth/core/lib/utils/web.js\");\n// TODO: Make this file smaller\n\n\n\n\n\n/** Handle callbacks from login services */ async function callback(request, options, sessionStore, cookies) {\n    if (!options.provider) throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.InvalidProvider(\"Callback route called without provider\");\n    const { query, body, method, headers } = request;\n    const { provider, adapter, url, callbackUrl, pages, jwt, events, callbacks, session: { strategy: sessionStrategy, maxAge: sessionMaxAge }, logger } = options;\n    const useJwtSession = sessionStrategy === \"jwt\";\n    try {\n        if (provider.type === \"oauth\" || provider.type === \"oidc\") {\n            const { proxyRedirect, randomState } = (0,_oauth_checks_js__WEBPACK_IMPORTED_MODULE_3__.handleState)(query, provider, options.isOnRedirectProxy);\n            if (proxyRedirect) {\n                logger.debug(\"proxy redirect\", {\n                    proxyRedirect,\n                    randomState\n                });\n                return {\n                    redirect: proxyRedirect\n                };\n            }\n            const authorizationResult = await (0,_oauth_callback_js__WEBPACK_IMPORTED_MODULE_2__.handleOAuth)(query, request.cookies, options, randomState);\n            if (authorizationResult.cookies.length) {\n                cookies.push(...authorizationResult.cookies);\n            }\n            logger.debug(\"authorization result\", authorizationResult);\n            const { user: userFromProvider, account, profile: OAuthProfile } = authorizationResult;\n            // If we don't have a profile object then either something went wrong\n            // or the user cancelled signing in. We don't know which, so we just\n            // direct the user to the signin page for now. We could do something\n            // else in future.\n            // TODO: Handle user cancelling signin\n            if (!userFromProvider || !account || !OAuthProfile) {\n                return {\n                    redirect: `${url}/signin`,\n                    cookies\n                };\n            }\n            // Check if user is allowed to sign in\n            // Attempt to get Profile from OAuth provider details before invoking\n            // signIn callback - but if no user object is returned, that is fine\n            // (that just means it's a new user signing in for the first time).\n            let userByAccount;\n            if (adapter) {\n                const { getUserByAccount } = adapter;\n                userByAccount = await getUserByAccount({\n                    providerAccountId: account.providerAccountId,\n                    provider: provider.id\n                });\n            }\n            await handleAuthorized({\n                user: userByAccount ?? userFromProvider,\n                account,\n                profile: OAuthProfile\n            }, options.callbacks.signIn);\n            const { user, session, isNewUser } = await (0,_handle_login_js__WEBPACK_IMPORTED_MODULE_1__.handleLoginOrRegister)(sessionStore.value, userFromProvider, account, options);\n            if (useJwtSession) {\n                const defaultToken = {\n                    name: user.name,\n                    email: user.email,\n                    picture: user.image,\n                    sub: user.id?.toString()\n                };\n                const token = await callbacks.jwt({\n                    token: defaultToken,\n                    user,\n                    account,\n                    profile: OAuthProfile,\n                    isNewUser,\n                    trigger: isNewUser ? \"signUp\" : \"signIn\"\n                });\n                // Clear cookies if token is null\n                if (token === null) {\n                    cookies.push(...sessionStore.clean());\n                } else {\n                    const salt = options.cookies.sessionToken.name;\n                    // Encode token\n                    const newToken = await jwt.encode({\n                        ...jwt,\n                        token,\n                        salt\n                    });\n                    // Set cookie expiry date\n                    const cookieExpires = new Date();\n                    cookieExpires.setTime(cookieExpires.getTime() + sessionMaxAge * 1000);\n                    const sessionCookies = sessionStore.chunk(newToken, {\n                        expires: cookieExpires\n                    });\n                    cookies.push(...sessionCookies);\n                }\n            } else {\n                // Save Session Token in cookie\n                cookies.push({\n                    name: options.cookies.sessionToken.name,\n                    value: session.sessionToken,\n                    options: {\n                        ...options.cookies.sessionToken.options,\n                        expires: session.expires\n                    }\n                });\n            }\n            await events.signIn?.({\n                user,\n                account,\n                profile: OAuthProfile,\n                isNewUser\n            });\n            // Handle first logins on new accounts\n            // e.g. option to send users to a new account landing page on initial login\n            // Note that the callback URL is preserved, so the journey can still be resumed\n            if (isNewUser && pages.newUser) {\n                return {\n                    redirect: `${pages.newUser}${pages.newUser.includes(\"?\") ? \"&\" : \"?\"}${new URLSearchParams({\n                        callbackUrl\n                    })}`,\n                    cookies\n                };\n            }\n            return {\n                redirect: callbackUrl,\n                cookies\n            };\n        } else if (provider.type === \"email\") {\n            const token = query?.token;\n            const identifier = query?.email;\n            if (!token || !identifier) {\n                const e = new TypeError(\"Missing token or email. The sign-in URL was manually opened without token/identifier or the link was not sent correctly in the email.\", {\n                    cause: {\n                        hasToken: !!token,\n                        hasEmail: !!identifier\n                    }\n                });\n                e.name = \"Configuration\";\n                throw e;\n            }\n            const secret = provider.secret ?? options.secret;\n            // @ts-expect-error -- Verified in `assertConfig`.\n            const invite = await adapter.useVerificationToken({\n                identifier,\n                token: await (0,_utils_web_js__WEBPACK_IMPORTED_MODULE_4__.createHash)(`${token}${secret}`)\n            });\n            const hasInvite = !!invite;\n            const expired = invite ? invite.expires.valueOf() < Date.now() : undefined;\n            const invalidInvite = !hasInvite || expired;\n            if (invalidInvite) throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.Verification({\n                hasInvite,\n                expired\n            });\n            const user = await adapter.getUserByEmail(identifier) ?? {\n                id: identifier,\n                email: identifier,\n                emailVerified: null\n            };\n            const account = {\n                providerAccountId: user.email,\n                userId: user.id,\n                type: \"email\",\n                provider: provider.id\n            };\n            await handleAuthorized({\n                user,\n                account\n            }, options.callbacks.signIn);\n            // Sign user in\n            const { user: loggedInUser, session, isNewUser } = await (0,_handle_login_js__WEBPACK_IMPORTED_MODULE_1__.handleLoginOrRegister)(sessionStore.value, user, account, options);\n            if (useJwtSession) {\n                const defaultToken = {\n                    name: loggedInUser.name,\n                    email: loggedInUser.email,\n                    picture: loggedInUser.image,\n                    sub: loggedInUser.id?.toString()\n                };\n                const token = await callbacks.jwt({\n                    token: defaultToken,\n                    user: loggedInUser,\n                    account,\n                    isNewUser,\n                    trigger: isNewUser ? \"signUp\" : \"signIn\"\n                });\n                // Clear cookies if token is null\n                if (token === null) {\n                    cookies.push(...sessionStore.clean());\n                } else {\n                    const salt = options.cookies.sessionToken.name;\n                    // Encode token\n                    const newToken = await jwt.encode({\n                        ...jwt,\n                        token,\n                        salt\n                    });\n                    // Set cookie expiry date\n                    const cookieExpires = new Date();\n                    cookieExpires.setTime(cookieExpires.getTime() + sessionMaxAge * 1000);\n                    const sessionCookies = sessionStore.chunk(newToken, {\n                        expires: cookieExpires\n                    });\n                    cookies.push(...sessionCookies);\n                }\n            } else {\n                // Save Session Token in cookie\n                cookies.push({\n                    name: options.cookies.sessionToken.name,\n                    value: session.sessionToken,\n                    options: {\n                        ...options.cookies.sessionToken.options,\n                        expires: session.expires\n                    }\n                });\n            }\n            await events.signIn?.({\n                user: loggedInUser,\n                account,\n                isNewUser\n            });\n            // Handle first logins on new accounts\n            // e.g. option to send users to a new account landing page on initial login\n            // Note that the callback URL is preserved, so the journey can still be resumed\n            if (isNewUser && pages.newUser) {\n                return {\n                    redirect: `${pages.newUser}${pages.newUser.includes(\"?\") ? \"&\" : \"?\"}${new URLSearchParams({\n                        callbackUrl\n                    })}`,\n                    cookies\n                };\n            }\n            // Callback URL is already verified at this point, so safe to use if specified\n            return {\n                redirect: callbackUrl,\n                cookies\n            };\n        } else if (provider.type === \"credentials\" && method === \"POST\") {\n            const credentials = body ?? {};\n            // TODO: Forward the original request as is, instead of reconstructing it\n            Object.entries(query ?? {}).forEach(([k, v])=>url.searchParams.set(k, v));\n            const user = await provider.authorize(credentials, // prettier-ignore\n            new Request(url, {\n                headers,\n                method,\n                body: JSON.stringify(body)\n            }));\n            if (!user) throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.CredentialsSignin();\n            const account = {\n                providerAccountId: user.id,\n                type: \"credentials\",\n                provider: provider.id\n            };\n            await handleAuthorized({\n                user,\n                account,\n                credentials\n            }, options.callbacks.signIn);\n            const defaultToken = {\n                name: user.name,\n                email: user.email,\n                picture: user.image,\n                sub: user.id?.toString()\n            };\n            const token = await callbacks.jwt({\n                token: defaultToken,\n                user,\n                account,\n                isNewUser: false,\n                trigger: \"signIn\"\n            });\n            // Clear cookies if token is null\n            if (token === null) {\n                cookies.push(...sessionStore.clean());\n            } else {\n                const salt = options.cookies.sessionToken.name;\n                // Encode token\n                const newToken = await jwt.encode({\n                    ...jwt,\n                    token,\n                    salt\n                });\n                // Set cookie expiry date\n                const cookieExpires = new Date();\n                cookieExpires.setTime(cookieExpires.getTime() + sessionMaxAge * 1000);\n                const sessionCookies = sessionStore.chunk(newToken, {\n                    expires: cookieExpires\n                });\n                cookies.push(...sessionCookies);\n            }\n            await events.signIn?.({\n                user,\n                account\n            });\n            return {\n                redirect: callbackUrl,\n                cookies\n            };\n        }\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.InvalidProvider(`Callback for provider type (${provider.type}) is not supported`);\n    } catch (e) {\n        if (e instanceof _errors_js__WEBPACK_IMPORTED_MODULE_0__.AuthError) throw e;\n        const error = new _errors_js__WEBPACK_IMPORTED_MODULE_0__.CallbackRouteError(e, {\n            provider: provider.id\n        });\n        logger.debug(\"callback route error details\", {\n            method,\n            query,\n            body\n        });\n        throw error;\n    }\n}\nasync function handleAuthorized(params, signIn) {\n    try {\n        const authorized = await signIn(params);\n        if (!authorized) throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.AuthorizedCallbackError(\"AccessDenied\");\n    } catch (e) {\n        if (e instanceof _errors_js__WEBPACK_IMPORTED_MODULE_0__.AuthError) throw e;\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.AuthorizedCallbackError(e);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@auth/core/lib/actions/callback/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@auth/core/lib/actions/callback/oauth/callback.js":
/*!************************************************************************!*\
  !*** ./node_modules/@auth/core/lib/actions/callback/oauth/callback.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handleOAuth: () => (/* binding */ handleOAuth)\n/* harmony export */ });\n/* harmony import */ var _checks_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./checks.js */ \"(rsc)/./node_modules/@auth/core/lib/actions/callback/oauth/checks.js\");\n/* harmony import */ var oauth4webapi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! oauth4webapi */ \"(rsc)/./node_modules/oauth4webapi/build/index.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../errors.js */ \"(rsc)/./node_modules/@auth/core/errors.js\");\n\n\n\n/**\n * Handles the following OAuth steps.\n * https://www.rfc-editor.org/rfc/rfc6749#section-4.1.1\n * https://www.rfc-editor.org/rfc/rfc6749#section-4.1.3\n * https://openid.net/specs/openid-connect-core-1_0.html#UserInfoRequest\n *\n * @note Although requesting userinfo is not required by the OAuth2.0 spec,\n * we fetch it anyway. This is because we always want a user profile.\n */ async function handleOAuth(query, cookies, options, randomState) {\n    const { logger, provider } = options;\n    let as;\n    const { token, userinfo } = provider;\n    // Falls back to authjs.dev if the user only passed params\n    if ((!token?.url || token.url.host === \"authjs.dev\") && (!userinfo?.url || userinfo.url.host === \"authjs.dev\")) {\n        // We assume that issuer is always defined as this has been asserted earlier\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const issuer = new URL(provider.issuer);\n        const discoveryResponse = await oauth4webapi__WEBPACK_IMPORTED_MODULE_2__.discoveryRequest(issuer);\n        const discoveredAs = await oauth4webapi__WEBPACK_IMPORTED_MODULE_2__.processDiscoveryResponse(issuer, discoveryResponse);\n        if (!discoveredAs.token_endpoint) throw new TypeError(\"TODO: Authorization server did not provide a token endpoint.\");\n        if (!discoveredAs.userinfo_endpoint) throw new TypeError(\"TODO: Authorization server did not provide a userinfo endpoint.\");\n        as = discoveredAs;\n    } else {\n        as = {\n            issuer: provider.issuer ?? \"https://authjs.dev\",\n            token_endpoint: token?.url.toString(),\n            userinfo_endpoint: userinfo?.url.toString()\n        };\n    }\n    const client = {\n        client_id: provider.clientId,\n        client_secret: provider.clientSecret,\n        ...provider.client\n    };\n    const resCookies = [];\n    const state = await _checks_js__WEBPACK_IMPORTED_MODULE_0__.state.use(cookies, resCookies, options, randomState);\n    const codeGrantParams = oauth4webapi__WEBPACK_IMPORTED_MODULE_2__.validateAuthResponse(as, client, new URLSearchParams(query), provider.checks.includes(\"state\") ? state : oauth4webapi__WEBPACK_IMPORTED_MODULE_2__.skipStateCheck);\n    /** https://www.rfc-editor.org/rfc/rfc6749#section-4.1.2.1 */ if (oauth4webapi__WEBPACK_IMPORTED_MODULE_2__.isOAuth2Error(codeGrantParams)) {\n        const cause = {\n            providerId: provider.id,\n            ...codeGrantParams\n        };\n        logger.debug(\"OAuthCallbackError\", cause);\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.OAuthCallbackError(\"OAuth Provider returned an error\", cause);\n    }\n    const codeVerifier = await _checks_js__WEBPACK_IMPORTED_MODULE_0__.pkce.use(cookies, resCookies, options);\n    let redirect_uri = provider.callbackUrl;\n    if (!options.isOnRedirectProxy && provider.redirectProxyUrl) {\n        redirect_uri = provider.redirectProxyUrl;\n    }\n    let codeGrantResponse = await oauth4webapi__WEBPACK_IMPORTED_MODULE_2__.authorizationCodeGrantRequest(as, client, codeGrantParams, redirect_uri, codeVerifier ?? \"auth\" // TODO: review fallback code verifier\n    );\n    if (provider.token?.conform) {\n        codeGrantResponse = await provider.token.conform(codeGrantResponse.clone()) ?? codeGrantResponse;\n    }\n    let challenges;\n    if (challenges = oauth4webapi__WEBPACK_IMPORTED_MODULE_2__.parseWwwAuthenticateChallenges(codeGrantResponse)) {\n        for (const challenge of challenges){\n            console.log(\"challenge\", challenge);\n        }\n        throw new Error(\"TODO: Handle www-authenticate challenges as needed\");\n    }\n    let profile = {};\n    let tokens;\n    if (provider.type === \"oidc\") {\n        const nonce = await _checks_js__WEBPACK_IMPORTED_MODULE_0__.nonce.use(cookies, resCookies, options);\n        const result = await oauth4webapi__WEBPACK_IMPORTED_MODULE_2__.processAuthorizationCodeOpenIDResponse(as, client, codeGrantResponse, nonce ?? oauth4webapi__WEBPACK_IMPORTED_MODULE_2__.expectNoNonce);\n        if (oauth4webapi__WEBPACK_IMPORTED_MODULE_2__.isOAuth2Error(result)) {\n            console.log(\"error\", result);\n            throw new Error(\"TODO: Handle OIDC response body error\");\n        }\n        profile = oauth4webapi__WEBPACK_IMPORTED_MODULE_2__.getValidatedIdTokenClaims(result);\n        tokens = result;\n    } else {\n        tokens = await oauth4webapi__WEBPACK_IMPORTED_MODULE_2__.processAuthorizationCodeOAuth2Response(as, client, codeGrantResponse);\n        if (oauth4webapi__WEBPACK_IMPORTED_MODULE_2__.isOAuth2Error(tokens)) {\n            console.log(\"error\", tokens);\n            throw new Error(\"TODO: Handle OAuth 2.0 response body error\");\n        }\n        if (userinfo?.request) {\n            const _profile = await userinfo.request({\n                tokens,\n                provider\n            });\n            if (_profile instanceof Object) profile = _profile;\n        } else if (userinfo?.url) {\n            const userinfoResponse = await oauth4webapi__WEBPACK_IMPORTED_MODULE_2__.userInfoRequest(as, client, tokens.access_token);\n            profile = await userinfoResponse.json();\n        } else {\n            throw new TypeError(\"No userinfo endpoint configured\");\n        }\n    }\n    if (tokens.expires_in) {\n        tokens.expires_at = Math.floor(Date.now() / 1000) + Number(tokens.expires_in);\n    }\n    const profileResult = await getUserAndAccount(profile, provider, tokens, logger);\n    return {\n        ...profileResult,\n        profile,\n        cookies: resCookies\n    };\n}\n/** Returns the user and account that is going to be created in the database. */ async function getUserAndAccount(OAuthProfile, provider, tokens, logger) {\n    try {\n        const user = await provider.profile(OAuthProfile, tokens);\n        user.email = user.email?.toLowerCase();\n        if (!user.id) {\n            throw new TypeError(`User id is missing in ${provider.name} OAuth profile response`);\n        }\n        return {\n            user,\n            account: {\n                ...tokens,\n                provider: provider.id,\n                type: provider.type,\n                providerAccountId: user.id.toString()\n            }\n        };\n    } catch (e) {\n        // If we didn't get a response either there was a problem with the provider\n        // response *or* the user cancelled the action with the provider.\n        //\n        // Unfortunately, we can't tell which - at least not in a way that works for\n        // all providers, so we return an empty object; the user should then be\n        // redirected back to the sign up page. We log the error to help developers\n        // who might be trying to debug this when configuring a new provider.\n        logger.debug(\"getProfile error details\", OAuthProfile);\n        logger.error(new _errors_js__WEBPACK_IMPORTED_MODULE_1__.OAuthProfileParseError(e, {\n            provider: provider.id\n        }));\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@auth/core/lib/actions/callback/oauth/callback.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@auth/core/lib/actions/callback/oauth/checks.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@auth/core/lib/actions/callback/oauth/checks.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeState: () => (/* binding */ decodeState),\n/* harmony export */   handleState: () => (/* binding */ handleState),\n/* harmony export */   nonce: () => (/* binding */ nonce),\n/* harmony export */   pkce: () => (/* binding */ pkce),\n/* harmony export */   signCookie: () => (/* binding */ signCookie),\n/* harmony export */   state: () => (/* binding */ state)\n/* harmony export */ });\n/* harmony import */ var jose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jose */ \"(rsc)/./node_modules/jose/dist/node/esm/index.js\");\n/* harmony import */ var oauth4webapi__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! oauth4webapi */ \"(rsc)/./node_modules/oauth4webapi/build/index.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../errors.js */ \"(rsc)/./node_modules/@auth/core/errors.js\");\n/* harmony import */ var _jwt_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../jwt.js */ \"(rsc)/./node_modules/@auth/core/jwt.js\");\n\n\n\n\n/** Returns a signed cookie. */ async function signCookie(type, value, maxAge, options, data) {\n    const { cookies, logger } = options;\n    logger.debug(`CREATE_${type.toUpperCase()}`, {\n        value,\n        maxAge\n    });\n    const expires = new Date();\n    expires.setTime(expires.getTime() + maxAge * 1000);\n    const token = {\n        value\n    };\n    if (type === \"state\" && data) token.data = data;\n    const name = cookies[type].name;\n    return {\n        name,\n        value: await (0,_jwt_js__WEBPACK_IMPORTED_MODULE_2__.encode)({\n            ...options.jwt,\n            maxAge,\n            token,\n            salt: name\n        }),\n        options: {\n            ...cookies[type].options,\n            expires\n        }\n    };\n}\nconst PKCE_MAX_AGE = 60 * 15; // 15 minutes in seconds\nconst pkce = {\n    async create (options) {\n        const code_verifier = oauth4webapi__WEBPACK_IMPORTED_MODULE_3__.generateRandomCodeVerifier();\n        const value = await oauth4webapi__WEBPACK_IMPORTED_MODULE_3__.calculatePKCECodeChallenge(code_verifier);\n        const maxAge = PKCE_MAX_AGE;\n        const cookie = await signCookie(\"pkceCodeVerifier\", code_verifier, maxAge, options);\n        return {\n            cookie,\n            value\n        };\n    },\n    /**\n     * Returns code_verifier if the provider is configured to use PKCE,\n     * and clears the container cookie afterwards.\n     * An error is thrown if the code_verifier is missing or invalid.\n     * @see https://www.rfc-editor.org/rfc/rfc7636\n     * @see https://danielfett.de/2020/05/16/pkce-vs-nonce-equivalent-or-not/#pkce\n     */ async use (cookies, resCookies, options) {\n        const { provider } = options;\n        if (!provider?.checks?.includes(\"pkce\")) return;\n        const codeVerifier = cookies?.[options.cookies.pkceCodeVerifier.name];\n        if (!codeVerifier) throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.InvalidCheck(\"PKCE code_verifier cookie was missing.\");\n        const value = await (0,_jwt_js__WEBPACK_IMPORTED_MODULE_2__.decode)({\n            ...options.jwt,\n            token: codeVerifier,\n            salt: options.cookies.pkceCodeVerifier.name\n        });\n        if (!value?.value) throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.InvalidCheck(\"PKCE code_verifier value could not be parsed.\");\n        // Clear the pkce code verifier cookie after use\n        resCookies.push({\n            name: options.cookies.pkceCodeVerifier.name,\n            value: \"\",\n            options: {\n                ...options.cookies.pkceCodeVerifier.options,\n                maxAge: 0\n            }\n        });\n        return value.value;\n    }\n};\nconst STATE_MAX_AGE = 60 * 15; // 15 minutes in seconds\nfunction decodeState(value) {\n    try {\n        const decoder = new TextDecoder();\n        return JSON.parse(decoder.decode(jose__WEBPACK_IMPORTED_MODULE_0__.base64url.decode(value)));\n    } catch  {}\n}\nconst state = {\n    async create (options, data) {\n        const { provider } = options;\n        if (!provider.checks.includes(\"state\")) {\n            if (data) {\n                throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.InvalidCheck(\"State data was provided but the provider is not configured to use state.\");\n            }\n            return;\n        }\n        const encodedState = jose__WEBPACK_IMPORTED_MODULE_0__.base64url.encode(JSON.stringify({\n            ...data,\n            random: oauth4webapi__WEBPACK_IMPORTED_MODULE_3__.generateRandomState()\n        }));\n        const maxAge = STATE_MAX_AGE;\n        const cookie = await signCookie(\"state\", encodedState, maxAge, options, data);\n        return {\n            cookie,\n            value: encodedState\n        };\n    },\n    /**\n     * Returns state if the provider is configured to use state,\n     * and clears the container cookie afterwards.\n     * An error is thrown if the state is missing or invalid.\n     * @see https://www.rfc-editor.org/rfc/rfc6749#section-10.12\n     * @see https://www.rfc-editor.org/rfc/rfc6749#section-4.1.1\n     */ async use (cookies, resCookies, options, paramRandom) {\n        const { provider } = options;\n        if (!provider.checks.includes(\"state\")) return;\n        const state = cookies?.[options.cookies.state.name];\n        if (!state) throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.InvalidCheck(\"State cookie was missing.\");\n        // IDEA: Let the user do something with the returned state\n        const encodedState = await (0,_jwt_js__WEBPACK_IMPORTED_MODULE_2__.decode)({\n            ...options.jwt,\n            token: state,\n            salt: options.cookies.state.name\n        });\n        if (!encodedState?.value) throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.InvalidCheck(\"State (cookie) value could not be parsed.\");\n        const decodedState = decodeState(encodedState.value);\n        if (!decodedState) throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.InvalidCheck(\"State (encoded) value could not be parsed.\");\n        if (decodedState.random !== paramRandom) throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.InvalidCheck(`Random state values did not match. Expected: ${decodedState.random}. Got: ${paramRandom}`);\n        // Clear the state cookie after use\n        resCookies.push({\n            name: options.cookies.state.name,\n            value: \"\",\n            options: {\n                ...options.cookies.state.options,\n                maxAge: 0\n            }\n        });\n        return encodedState.value;\n    }\n};\nconst NONCE_MAX_AGE = 60 * 15; // 15 minutes in seconds\nconst nonce = {\n    async create (options) {\n        if (!options.provider.checks.includes(\"nonce\")) return;\n        const value = oauth4webapi__WEBPACK_IMPORTED_MODULE_3__.generateRandomNonce();\n        const maxAge = NONCE_MAX_AGE;\n        const cookie = await signCookie(\"nonce\", value, maxAge, options);\n        return {\n            cookie,\n            value\n        };\n    },\n    /**\n     * Returns nonce if the provider is configured to use nonce,\n     * and clears the container cookie afterwards.\n     * An error is thrown if the nonce is missing or invalid.\n     * @see https://openid.net/specs/openid-connect-core-1_0.html#NonceNotes\n     * @see https://danielfett.de/2020/05/16/pkce-vs-nonce-equivalent-or-not/#nonce\n     */ async use (cookies, resCookies, options) {\n        const { provider } = options;\n        if (!provider?.checks?.includes(\"nonce\")) return;\n        const nonce = cookies?.[options.cookies.nonce.name];\n        if (!nonce) throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.InvalidCheck(\"Nonce cookie was missing.\");\n        const value = await (0,_jwt_js__WEBPACK_IMPORTED_MODULE_2__.decode)({\n            ...options.jwt,\n            token: nonce,\n            salt: options.cookies.nonce.name\n        });\n        if (!value?.value) throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.InvalidCheck(\"Nonce value could not be parsed.\");\n        // Clear the nonce cookie after use\n        resCookies.push({\n            name: options.cookies.nonce.name,\n            value: \"\",\n            options: {\n                ...options.cookies.nonce.options,\n                maxAge: 0\n            }\n        });\n        return value.value;\n    }\n};\n/**\n * When the authorization flow contains a state, we check if it's a redirect proxy\n * and if so, we return the random state and the original redirect URL.\n */ function handleState(query, provider, isOnRedirectProxy) {\n    let randomState;\n    let proxyRedirect;\n    if (provider.redirectProxyUrl && !query?.state) {\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.InvalidCheck(\"Missing state in query, but required for redirect proxy\");\n    }\n    const state = decodeState(query?.state);\n    randomState = state?.random;\n    if (isOnRedirectProxy) {\n        if (!state?.origin) return {\n            randomState\n        };\n        proxyRedirect = `${state.origin}?${new URLSearchParams(query)}`;\n    }\n    return {\n        randomState,\n        proxyRedirect\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@auth/core/lib/actions/callback/oauth/checks.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@auth/core/lib/actions/callback/oauth/csrf-token.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@auth/core/lib/actions/callback/oauth/csrf-token.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createCSRFToken: () => (/* binding */ createCSRFToken),\n/* harmony export */   validateCSRF: () => (/* binding */ validateCSRF)\n/* harmony export */ });\n/* harmony import */ var _utils_web_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/web.js */ \"(rsc)/./node_modules/@auth/core/lib/utils/web.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../errors.js */ \"(rsc)/./node_modules/@auth/core/errors.js\");\n\n\n/**\n * Ensure CSRF Token cookie is set for any subsequent requests.\n * Used as part of the strategy for mitigation for CSRF tokens.\n *\n * Creates a cookie like 'next-auth.csrf-token' with the value 'token|hash',\n * where 'token' is the CSRF token and 'hash' is a hash made of the token and\n * the secret, and the two values are joined by a pipe '|'. By storing the\n * value and the hash of the value (with the secret used as a salt) we can\n * verify the cookie was set by the server and not by a malicious attacker.\n *\n * For more details, see the following OWASP links:\n * https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html#double-submit-cookie\n * https://owasp.org/www-chapter-london/assets/slides/David_Johansson-Double_Defeat_of_Double-Submit_Cookie.pdf\n */ async function createCSRFToken({ options, cookieValue, isPost, bodyValue }) {\n    if (cookieValue) {\n        const [csrfToken, csrfTokenHash] = cookieValue.split(\"|\");\n        const expectedCsrfTokenHash = await (0,_utils_web_js__WEBPACK_IMPORTED_MODULE_0__.createHash)(`${csrfToken}${options.secret}`);\n        if (csrfTokenHash === expectedCsrfTokenHash) {\n            // If hash matches then we trust the CSRF token value\n            // If this is a POST request and the CSRF Token in the POST request matches\n            // the cookie we have already verified is the one we have set, then the token is verified!\n            const csrfTokenVerified = isPost && csrfToken === bodyValue;\n            return {\n                csrfTokenVerified,\n                csrfToken\n            };\n        }\n    }\n    // New CSRF token\n    const csrfToken = (0,_utils_web_js__WEBPACK_IMPORTED_MODULE_0__.randomString)(32);\n    const csrfTokenHash = await (0,_utils_web_js__WEBPACK_IMPORTED_MODULE_0__.createHash)(`${csrfToken}${options.secret}`);\n    const cookie = `${csrfToken}|${csrfTokenHash}`;\n    return {\n        cookie,\n        csrfToken\n    };\n}\nfunction validateCSRF(action, verified) {\n    if (verified) return;\n    throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.MissingCSRF(`CSRF token was missing during an action ${action}.`);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF1dGgvY29yZS9saWIvYWN0aW9ucy9jYWxsYmFjay9vYXV0aC9jc3JmLXRva2VuLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBaUU7QUFDYjtBQUNwRDs7Ozs7Ozs7Ozs7OztDQWFDLEdBQ00sZUFBZUcsZ0JBQWdCLEVBQUVDLE9BQU8sRUFBRUMsV0FBVyxFQUFFQyxNQUFNLEVBQUVDLFNBQVMsRUFBRztJQUM5RSxJQUFJRixhQUFhO1FBQ2IsTUFBTSxDQUFDRyxXQUFXQyxjQUFjLEdBQUdKLFlBQVlLLEtBQUssQ0FBQztRQUNyRCxNQUFNQyx3QkFBd0IsTUFBTVgseURBQVVBLENBQUMsQ0FBQyxFQUFFUSxVQUFVLEVBQUVKLFFBQVFRLE1BQU0sQ0FBQyxDQUFDO1FBQzlFLElBQUlILGtCQUFrQkUsdUJBQXVCO1lBQ3pDLHFEQUFxRDtZQUNyRCwyRUFBMkU7WUFDM0UsMEZBQTBGO1lBQzFGLE1BQU1FLG9CQUFvQlAsVUFBVUUsY0FBY0Q7WUFDbEQsT0FBTztnQkFBRU07Z0JBQW1CTDtZQUFVO1FBQzFDO0lBQ0o7SUFDQSxpQkFBaUI7SUFDakIsTUFBTUEsWUFBWVAsMkRBQVlBLENBQUM7SUFDL0IsTUFBTVEsZ0JBQWdCLE1BQU1ULHlEQUFVQSxDQUFDLENBQUMsRUFBRVEsVUFBVSxFQUFFSixRQUFRUSxNQUFNLENBQUMsQ0FBQztJQUN0RSxNQUFNRSxTQUFTLENBQUMsRUFBRU4sVUFBVSxDQUFDLEVBQUVDLGNBQWMsQ0FBQztJQUM5QyxPQUFPO1FBQUVLO1FBQVFOO0lBQVU7QUFDL0I7QUFDTyxTQUFTTyxhQUFhQyxNQUFNLEVBQUVDLFFBQVE7SUFDekMsSUFBSUEsVUFDQTtJQUNKLE1BQU0sSUFBSWYsbURBQVdBLENBQUMsQ0FBQyx3Q0FBd0MsRUFBRWMsT0FBTyxDQUFDLENBQUM7QUFDOUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGF1dGgvY29yZS9saWIvYWN0aW9ucy9jYWxsYmFjay9vYXV0aC9jc3JmLXRva2VuLmpzPzAzMWMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlSGFzaCwgcmFuZG9tU3RyaW5nIH0gZnJvbSBcIi4uLy4uLy4uL3V0aWxzL3dlYi5qc1wiO1xuaW1wb3J0IHsgTWlzc2luZ0NTUkYgfSBmcm9tIFwiLi4vLi4vLi4vLi4vZXJyb3JzLmpzXCI7XG4vKipcbiAqIEVuc3VyZSBDU1JGIFRva2VuIGNvb2tpZSBpcyBzZXQgZm9yIGFueSBzdWJzZXF1ZW50IHJlcXVlc3RzLlxuICogVXNlZCBhcyBwYXJ0IG9mIHRoZSBzdHJhdGVneSBmb3IgbWl0aWdhdGlvbiBmb3IgQ1NSRiB0b2tlbnMuXG4gKlxuICogQ3JlYXRlcyBhIGNvb2tpZSBsaWtlICduZXh0LWF1dGguY3NyZi10b2tlbicgd2l0aCB0aGUgdmFsdWUgJ3Rva2VufGhhc2gnLFxuICogd2hlcmUgJ3Rva2VuJyBpcyB0aGUgQ1NSRiB0b2tlbiBhbmQgJ2hhc2gnIGlzIGEgaGFzaCBtYWRlIG9mIHRoZSB0b2tlbiBhbmRcbiAqIHRoZSBzZWNyZXQsIGFuZCB0aGUgdHdvIHZhbHVlcyBhcmUgam9pbmVkIGJ5IGEgcGlwZSAnfCcuIEJ5IHN0b3JpbmcgdGhlXG4gKiB2YWx1ZSBhbmQgdGhlIGhhc2ggb2YgdGhlIHZhbHVlICh3aXRoIHRoZSBzZWNyZXQgdXNlZCBhcyBhIHNhbHQpIHdlIGNhblxuICogdmVyaWZ5IHRoZSBjb29raWUgd2FzIHNldCBieSB0aGUgc2VydmVyIGFuZCBub3QgYnkgYSBtYWxpY2lvdXMgYXR0YWNrZXIuXG4gKlxuICogRm9yIG1vcmUgZGV0YWlscywgc2VlIHRoZSBmb2xsb3dpbmcgT1dBU1AgbGlua3M6XG4gKiBodHRwczovL2NoZWF0c2hlZXRzZXJpZXMub3dhc3Aub3JnL2NoZWF0c2hlZXRzL0Nyb3NzLVNpdGVfUmVxdWVzdF9Gb3JnZXJ5X1ByZXZlbnRpb25fQ2hlYXRfU2hlZXQuaHRtbCNkb3VibGUtc3VibWl0LWNvb2tpZVxuICogaHR0cHM6Ly9vd2FzcC5vcmcvd3d3LWNoYXB0ZXItbG9uZG9uL2Fzc2V0cy9zbGlkZXMvRGF2aWRfSm9oYW5zc29uLURvdWJsZV9EZWZlYXRfb2ZfRG91YmxlLVN1Ym1pdF9Db29raWUucGRmXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjcmVhdGVDU1JGVG9rZW4oeyBvcHRpb25zLCBjb29raWVWYWx1ZSwgaXNQb3N0LCBib2R5VmFsdWUsIH0pIHtcbiAgICBpZiAoY29va2llVmFsdWUpIHtcbiAgICAgICAgY29uc3QgW2NzcmZUb2tlbiwgY3NyZlRva2VuSGFzaF0gPSBjb29raWVWYWx1ZS5zcGxpdChcInxcIik7XG4gICAgICAgIGNvbnN0IGV4cGVjdGVkQ3NyZlRva2VuSGFzaCA9IGF3YWl0IGNyZWF0ZUhhc2goYCR7Y3NyZlRva2VufSR7b3B0aW9ucy5zZWNyZXR9YCk7XG4gICAgICAgIGlmIChjc3JmVG9rZW5IYXNoID09PSBleHBlY3RlZENzcmZUb2tlbkhhc2gpIHtcbiAgICAgICAgICAgIC8vIElmIGhhc2ggbWF0Y2hlcyB0aGVuIHdlIHRydXN0IHRoZSBDU1JGIHRva2VuIHZhbHVlXG4gICAgICAgICAgICAvLyBJZiB0aGlzIGlzIGEgUE9TVCByZXF1ZXN0IGFuZCB0aGUgQ1NSRiBUb2tlbiBpbiB0aGUgUE9TVCByZXF1ZXN0IG1hdGNoZXNcbiAgICAgICAgICAgIC8vIHRoZSBjb29raWUgd2UgaGF2ZSBhbHJlYWR5IHZlcmlmaWVkIGlzIHRoZSBvbmUgd2UgaGF2ZSBzZXQsIHRoZW4gdGhlIHRva2VuIGlzIHZlcmlmaWVkIVxuICAgICAgICAgICAgY29uc3QgY3NyZlRva2VuVmVyaWZpZWQgPSBpc1Bvc3QgJiYgY3NyZlRva2VuID09PSBib2R5VmFsdWU7XG4gICAgICAgICAgICByZXR1cm4geyBjc3JmVG9rZW5WZXJpZmllZCwgY3NyZlRva2VuIH07XG4gICAgICAgIH1cbiAgICB9XG4gICAgLy8gTmV3IENTUkYgdG9rZW5cbiAgICBjb25zdCBjc3JmVG9rZW4gPSByYW5kb21TdHJpbmcoMzIpO1xuICAgIGNvbnN0IGNzcmZUb2tlbkhhc2ggPSBhd2FpdCBjcmVhdGVIYXNoKGAke2NzcmZUb2tlbn0ke29wdGlvbnMuc2VjcmV0fWApO1xuICAgIGNvbnN0IGNvb2tpZSA9IGAke2NzcmZUb2tlbn18JHtjc3JmVG9rZW5IYXNofWA7XG4gICAgcmV0dXJuIHsgY29va2llLCBjc3JmVG9rZW4gfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiB2YWxpZGF0ZUNTUkYoYWN0aW9uLCB2ZXJpZmllZCkge1xuICAgIGlmICh2ZXJpZmllZClcbiAgICAgICAgcmV0dXJuO1xuICAgIHRocm93IG5ldyBNaXNzaW5nQ1NSRihgQ1NSRiB0b2tlbiB3YXMgbWlzc2luZyBkdXJpbmcgYW4gYWN0aW9uICR7YWN0aW9ufS5gKTtcbn1cbiJdLCJuYW1lcyI6WyJjcmVhdGVIYXNoIiwicmFuZG9tU3RyaW5nIiwiTWlzc2luZ0NTUkYiLCJjcmVhdGVDU1JGVG9rZW4iLCJvcHRpb25zIiwiY29va2llVmFsdWUiLCJpc1Bvc3QiLCJib2R5VmFsdWUiLCJjc3JmVG9rZW4iLCJjc3JmVG9rZW5IYXNoIiwic3BsaXQiLCJleHBlY3RlZENzcmZUb2tlbkhhc2giLCJzZWNyZXQiLCJjc3JmVG9rZW5WZXJpZmllZCIsImNvb2tpZSIsInZhbGlkYXRlQ1NSRiIsImFjdGlvbiIsInZlcmlmaWVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@auth/core/lib/actions/callback/oauth/csrf-token.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@auth/core/lib/actions/index.js":
/*!******************************************************!*\
  !*** ./node_modules/@auth/core/lib/actions/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   callback: () => (/* reexport safe */ _callback_index_js__WEBPACK_IMPORTED_MODULE_0__.callback),\n/* harmony export */   session: () => (/* reexport safe */ _session_js__WEBPACK_IMPORTED_MODULE_1__.session),\n/* harmony export */   signIn: () => (/* reexport safe */ _signin_index_js__WEBPACK_IMPORTED_MODULE_2__.signIn),\n/* harmony export */   signOut: () => (/* reexport safe */ _signout_js__WEBPACK_IMPORTED_MODULE_3__.signOut)\n/* harmony export */ });\n/* harmony import */ var _callback_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./callback/index.js */ \"(rsc)/./node_modules/@auth/core/lib/actions/callback/index.js\");\n/* harmony import */ var _session_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./session.js */ \"(rsc)/./node_modules/@auth/core/lib/actions/session.js\");\n/* harmony import */ var _signin_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./signin/index.js */ \"(rsc)/./node_modules/@auth/core/lib/actions/signin/index.js\");\n/* harmony import */ var _signout_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./signout.js */ \"(rsc)/./node_modules/@auth/core/lib/actions/signout.js\");\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF1dGgvY29yZS9saWIvYWN0aW9ucy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUErQztBQUNSO0FBQ0k7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi9hY3Rpb25zL2luZGV4LmpzPzRiYTIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgY2FsbGJhY2sgfSBmcm9tIFwiLi9jYWxsYmFjay9pbmRleC5qc1wiO1xuZXhwb3J0IHsgc2Vzc2lvbiB9IGZyb20gXCIuL3Nlc3Npb24uanNcIjtcbmV4cG9ydCB7IHNpZ25JbiB9IGZyb20gXCIuL3NpZ25pbi9pbmRleC5qc1wiO1xuZXhwb3J0IHsgc2lnbk91dCB9IGZyb20gXCIuL3NpZ25vdXQuanNcIjtcbiJdLCJuYW1lcyI6WyJjYWxsYmFjayIsInNlc3Npb24iLCJzaWduSW4iLCJzaWduT3V0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@auth/core/lib/actions/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@auth/core/lib/actions/session.js":
/*!********************************************************!*\
  !*** ./node_modules/@auth/core/lib/actions/session.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   session: () => (/* binding */ session)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors.js */ \"(rsc)/./node_modules/@auth/core/errors.js\");\n/* harmony import */ var _utils_date_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/date.js */ \"(rsc)/./node_modules/@auth/core/lib/utils/date.js\");\n\n\n/** Return a session object filtered via `callbacks.session` */ async function session(options, sessionStore, cookies, isUpdate, newSession) {\n    const { adapter, jwt, events, callbacks, logger, session: { strategy: sessionStrategy, maxAge: sessionMaxAge } } = options;\n    const response = {\n        body: null,\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        cookies\n    };\n    const sessionToken = sessionStore.value;\n    if (!sessionToken) return response;\n    if (sessionStrategy === \"jwt\") {\n        try {\n            const salt = options.cookies.sessionToken.name;\n            const payload = await jwt.decode({\n                ...jwt,\n                token: sessionToken,\n                salt\n            });\n            if (!payload) throw new Error(\"Invalid JWT\");\n            // @ts-expect-error\n            const token = await callbacks.jwt({\n                token: payload,\n                ...isUpdate && {\n                    trigger: \"update\"\n                },\n                session: newSession\n            });\n            const newExpires = (0,_utils_date_js__WEBPACK_IMPORTED_MODULE_1__.fromDate)(sessionMaxAge);\n            if (token !== null) {\n                // By default, only exposes a limited subset of information to the client\n                // as needed for presentation purposes (e.g. \"you are logged in as...\").\n                const session = {\n                    user: {\n                        name: token.name,\n                        email: token.email,\n                        image: token.picture\n                    },\n                    expires: newExpires.toISOString()\n                };\n                // @ts-expect-error\n                const newSession = await callbacks.session({\n                    session,\n                    token\n                });\n                // Return session payload as response\n                response.body = newSession;\n                // Refresh JWT expiry by re-signing it, with an updated expiry date\n                const newToken = await jwt.encode({\n                    ...jwt,\n                    token,\n                    salt\n                });\n                // Set cookie, to also update expiry date on cookie\n                const sessionCookies = sessionStore.chunk(newToken, {\n                    expires: newExpires\n                });\n                response.cookies?.push(...sessionCookies);\n                await events.session?.({\n                    session: newSession,\n                    token\n                });\n            } else {\n                response.cookies?.push(...sessionStore.clean());\n            }\n        } catch (e) {\n            logger.error(new _errors_js__WEBPACK_IMPORTED_MODULE_0__.JWTSessionError(e));\n            // If the JWT is not verifiable remove the broken session cookie(s).\n            response.cookies?.push(...sessionStore.clean());\n        }\n        return response;\n    }\n    // Retrieve session from database\n    try {\n        const { getSessionAndUser, deleteSession, updateSession } = adapter;\n        let userAndSession = await getSessionAndUser(sessionToken);\n        // If session has expired, clean up the database\n        if (userAndSession && userAndSession.session.expires.valueOf() < Date.now()) {\n            await deleteSession(sessionToken);\n            userAndSession = null;\n        }\n        if (userAndSession) {\n            const { user, session } = userAndSession;\n            const sessionUpdateAge = options.session.updateAge;\n            // Calculate last updated date to throttle write updates to database\n            // Formula: ({expiry date} - sessionMaxAge) + sessionUpdateAge\n            //     e.g. ({expiry date} - 30 days) + 1 hour\n            const sessionIsDueToBeUpdatedDate = session.expires.valueOf() - sessionMaxAge * 1000 + sessionUpdateAge * 1000;\n            const newExpires = (0,_utils_date_js__WEBPACK_IMPORTED_MODULE_1__.fromDate)(sessionMaxAge);\n            // Trigger update of session expiry date and write to database, only\n            // if the session was last updated more than {sessionUpdateAge} ago\n            if (sessionIsDueToBeUpdatedDate <= Date.now()) {\n                await updateSession({\n                    sessionToken: sessionToken,\n                    expires: newExpires\n                });\n            }\n            // Pass Session through to the session callback\n            const sessionPayload = await callbacks.session({\n                // By default, only exposes a limited subset of information to the client\n                // as needed for presentation purposes (e.g. \"you are logged in as...\").\n                session: {\n                    // @ts-expect-error missing `id`.\n                    user: {\n                        name: user.name,\n                        email: user.email,\n                        image: user.image\n                    },\n                    expires: session.expires.toISOString()\n                },\n                user,\n                newSession,\n                ...isUpdate ? {\n                    trigger: \"update\"\n                } : {}\n            });\n            // Return session payload as response\n            response.body = sessionPayload;\n            // Set cookie again to update expiry\n            response.cookies?.push({\n                name: options.cookies.sessionToken.name,\n                value: sessionToken,\n                options: {\n                    ...options.cookies.sessionToken.options,\n                    expires: newExpires\n                }\n            });\n            // @ts-expect-error\n            await events.session?.({\n                session: sessionPayload\n            });\n        } else if (sessionToken) {\n            // If `sessionToken` was found set but it's not valid for a session then\n            // remove the sessionToken cookie from browser.\n            response.cookies?.push(...sessionStore.clean());\n        }\n    } catch (e) {\n        logger.error(new _errors_js__WEBPACK_IMPORTED_MODULE_0__.SessionTokenError(e));\n    }\n    return response;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@auth/core/lib/actions/session.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@auth/core/lib/actions/signin/authorization-url.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@auth/core/lib/actions/signin/authorization-url.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAuthorizationUrl: () => (/* binding */ getAuthorizationUrl)\n/* harmony export */ });\n/* harmony import */ var _callback_oauth_checks_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../callback/oauth/checks.js */ \"(rsc)/./node_modules/@auth/core/lib/actions/callback/oauth/checks.js\");\n/* harmony import */ var oauth4webapi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! oauth4webapi */ \"(rsc)/./node_modules/oauth4webapi/build/index.js\");\n\n\n/**\n * Generates an authorization/request token URL.\n *\n * [OAuth 2](https://www.oauth.com/oauth2-servers/authorization/the-authorization-request/)\n */ async function getAuthorizationUrl(query, options) {\n    const { logger, provider } = options;\n    let url = provider.authorization?.url;\n    let as;\n    // Falls back to authjs.dev if the user only passed params\n    if (!url || url.host === \"authjs.dev\") {\n        // If url is undefined, we assume that issuer is always defined\n        // We check this in assert.ts\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const issuer = new URL(provider.issuer);\n        const discoveryResponse = await oauth4webapi__WEBPACK_IMPORTED_MODULE_1__.discoveryRequest(issuer);\n        const as = await oauth4webapi__WEBPACK_IMPORTED_MODULE_1__.processDiscoveryResponse(issuer, discoveryResponse);\n        if (!as.authorization_endpoint) {\n            throw new TypeError(\"Authorization server did not provide an authorization endpoint.\");\n        }\n        url = new URL(as.authorization_endpoint);\n    }\n    const authParams = url.searchParams;\n    let redirect_uri = provider.callbackUrl;\n    let data;\n    if (!options.isOnRedirectProxy && provider.redirectProxyUrl) {\n        redirect_uri = provider.redirectProxyUrl;\n        data = {\n            origin: provider.callbackUrl\n        };\n        logger.debug(\"using redirect proxy\", {\n            redirect_uri,\n            data\n        });\n    }\n    const params = Object.assign({\n        response_type: \"code\",\n        // clientId can technically be undefined, should we check this in assert.ts or rely on the Authorization Server to do it?\n        client_id: provider.clientId,\n        redirect_uri,\n        // @ts-expect-error TODO:\n        ...provider.authorization?.params\n    }, Object.fromEntries(provider.authorization?.url.searchParams ?? []), query);\n    for(const k in params)authParams.set(k, params[k]);\n    const cookies = [];\n    const state = await _callback_oauth_checks_js__WEBPACK_IMPORTED_MODULE_0__.state.create(options, data);\n    if (state) {\n        authParams.set(\"state\", state.value);\n        cookies.push(state.cookie);\n    }\n    if (provider.checks?.includes(\"pkce\")) {\n        if (as && !as.code_challenge_methods_supported?.includes(\"S256\")) {\n            // We assume S256 PKCE support, if the server does not advertise that,\n            // a random `nonce` must be used for CSRF protection.\n            if (provider.type === \"oidc\") provider.checks = [\n                \"nonce\"\n            ];\n        } else {\n            const { value, cookie } = await _callback_oauth_checks_js__WEBPACK_IMPORTED_MODULE_0__.pkce.create(options);\n            authParams.set(\"code_challenge\", value);\n            authParams.set(\"code_challenge_method\", \"S256\");\n            cookies.push(cookie);\n        }\n    }\n    const nonce = await _callback_oauth_checks_js__WEBPACK_IMPORTED_MODULE_0__.nonce.create(options);\n    if (nonce) {\n        authParams.set(\"nonce\", nonce.value);\n        cookies.push(nonce.cookie);\n    }\n    // TODO: This does not work in normalizeOAuth because authorization endpoint can come from discovery\n    // Need to make normalizeOAuth async\n    if (provider.type === \"oidc\" && !url.searchParams.has(\"scope\")) {\n        url.searchParams.set(\"scope\", \"openid profile email\");\n    }\n    logger.debug(\"authorization url is ready\", {\n        url,\n        cookies,\n        provider\n    });\n    return {\n        redirect: url.toString(),\n        cookies\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@auth/core/lib/actions/signin/authorization-url.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@auth/core/lib/actions/signin/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@auth/core/lib/actions/signin/index.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   signIn: () => (/* binding */ signIn)\n/* harmony export */ });\n/* harmony import */ var _authorization_url_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./authorization-url.js */ \"(rsc)/./node_modules/@auth/core/lib/actions/signin/authorization-url.js\");\n/* harmony import */ var _send_token_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./send-token.js */ \"(rsc)/./node_modules/@auth/core/lib/actions/signin/send-token.js\");\n\n\nasync function signIn(request, cookies, options) {\n    const signInUrl = `${options.url}/signin`;\n    if (!options.provider) return {\n        redirect: signInUrl,\n        cookies\n    };\n    switch(options.provider.type){\n        case \"oauth\":\n        case \"oidc\":\n            {\n                const { redirect, cookies: authCookies } = await (0,_authorization_url_js__WEBPACK_IMPORTED_MODULE_0__.getAuthorizationUrl)(request.query, options);\n                if (authCookies) cookies.push(...authCookies);\n                return {\n                    redirect,\n                    cookies\n                };\n            }\n        case \"email\":\n            {\n                return await (0,_send_token_js__WEBPACK_IMPORTED_MODULE_1__.sendToken)(request, options);\n            }\n        default:\n            return {\n                redirect: signInUrl,\n                cookies\n            };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF1dGgvY29yZS9saWIvYWN0aW9ucy9zaWduaW4vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTZEO0FBQ2pCO0FBQ3JDLGVBQWVFLE9BQU9DLE9BQU8sRUFBRUMsT0FBTyxFQUFFQyxPQUFPO0lBQ2xELE1BQU1DLFlBQVksQ0FBQyxFQUFFRCxRQUFRRSxHQUFHLENBQUMsT0FBTyxDQUFDO0lBQ3pDLElBQUksQ0FBQ0YsUUFBUUcsUUFBUSxFQUNqQixPQUFPO1FBQUVDLFVBQVVIO1FBQVdGO0lBQVE7SUFDMUMsT0FBUUMsUUFBUUcsUUFBUSxDQUFDRSxJQUFJO1FBQ3pCLEtBQUs7UUFDTCxLQUFLO1lBQVE7Z0JBQ1QsTUFBTSxFQUFFRCxRQUFRLEVBQUVMLFNBQVNPLFdBQVcsRUFBRSxHQUFHLE1BQU1YLDBFQUFtQkEsQ0FBQ0csUUFBUVMsS0FBSyxFQUFFUDtnQkFDcEYsSUFBSU0sYUFDQVAsUUFBUVMsSUFBSSxJQUFJRjtnQkFDcEIsT0FBTztvQkFBRUY7b0JBQVVMO2dCQUFRO1lBQy9CO1FBQ0EsS0FBSztZQUFTO2dCQUNWLE9BQU8sTUFBTUgseURBQVNBLENBQUNFLFNBQVNFO1lBQ3BDO1FBQ0E7WUFDSSxPQUFPO2dCQUFFSSxVQUFVSDtnQkFBV0Y7WUFBUTtJQUM5QztBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BhdXRoL2NvcmUvbGliL2FjdGlvbnMvc2lnbmluL2luZGV4LmpzP2EwNmEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0QXV0aG9yaXphdGlvblVybCB9IGZyb20gXCIuL2F1dGhvcml6YXRpb24tdXJsLmpzXCI7XG5pbXBvcnQgeyBzZW5kVG9rZW4gfSBmcm9tIFwiLi9zZW5kLXRva2VuLmpzXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gc2lnbkluKHJlcXVlc3QsIGNvb2tpZXMsIG9wdGlvbnMpIHtcbiAgICBjb25zdCBzaWduSW5VcmwgPSBgJHtvcHRpb25zLnVybH0vc2lnbmluYDtcbiAgICBpZiAoIW9wdGlvbnMucHJvdmlkZXIpXG4gICAgICAgIHJldHVybiB7IHJlZGlyZWN0OiBzaWduSW5VcmwsIGNvb2tpZXMgfTtcbiAgICBzd2l0Y2ggKG9wdGlvbnMucHJvdmlkZXIudHlwZSkge1xuICAgICAgICBjYXNlIFwib2F1dGhcIjpcbiAgICAgICAgY2FzZSBcIm9pZGNcIjoge1xuICAgICAgICAgICAgY29uc3QgeyByZWRpcmVjdCwgY29va2llczogYXV0aENvb2tpZXMgfSA9IGF3YWl0IGdldEF1dGhvcml6YXRpb25VcmwocmVxdWVzdC5xdWVyeSwgb3B0aW9ucyk7XG4gICAgICAgICAgICBpZiAoYXV0aENvb2tpZXMpXG4gICAgICAgICAgICAgICAgY29va2llcy5wdXNoKC4uLmF1dGhDb29raWVzKTtcbiAgICAgICAgICAgIHJldHVybiB7IHJlZGlyZWN0LCBjb29raWVzIH07XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSBcImVtYWlsXCI6IHtcbiAgICAgICAgICAgIHJldHVybiBhd2FpdCBzZW5kVG9rZW4ocmVxdWVzdCwgb3B0aW9ucyk7XG4gICAgICAgIH1cbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiB7IHJlZGlyZWN0OiBzaWduSW5VcmwsIGNvb2tpZXMgfTtcbiAgICB9XG59XG4iXSwibmFtZXMiOlsiZ2V0QXV0aG9yaXphdGlvblVybCIsInNlbmRUb2tlbiIsInNpZ25JbiIsInJlcXVlc3QiLCJjb29raWVzIiwib3B0aW9ucyIsInNpZ25JblVybCIsInVybCIsInByb3ZpZGVyIiwicmVkaXJlY3QiLCJ0eXBlIiwiYXV0aENvb2tpZXMiLCJxdWVyeSIsInB1c2giXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@auth/core/lib/actions/signin/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@auth/core/lib/actions/signin/send-token.js":
/*!******************************************************************!*\
  !*** ./node_modules/@auth/core/lib/actions/signin/send-token.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sendToken: () => (/* binding */ sendToken)\n/* harmony export */ });\n/* harmony import */ var _utils_web_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/web.js */ \"(rsc)/./node_modules/@auth/core/lib/utils/web.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../errors.js */ \"(rsc)/./node_modules/@auth/core/errors.js\");\n\n\n/**\n * Starts an e-mail login flow, by generating a token,\n * and sending it to the user's e-mail (with the help of a DB adapter).\n * At the end, it returns a redirect to the `verify-request` page.\n */ async function sendToken(request, options) {\n    const { body } = request;\n    const { provider, url, callbacks, adapter } = options;\n    const normalizer = provider.normalizeIdentifier ?? defaultNormalizer;\n    const email = normalizer(body?.email);\n    const defaultUser = {\n        id: email,\n        email,\n        emailVerified: null\n    };\n    const user = await adapter.getUserByEmail(email) ?? defaultUser;\n    const account = {\n        providerAccountId: email,\n        userId: user.id,\n        type: \"email\",\n        provider: provider.id\n    };\n    let authorized;\n    try {\n        const params = {\n            user,\n            account,\n            email: {\n                verificationRequest: true\n            }\n        };\n        authorized = await callbacks.signIn(params);\n    } catch (e) {\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.AuthorizedCallbackError(e);\n    }\n    if (!authorized) throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.AuthorizedCallbackError(\"AccessDenied\");\n    const { callbackUrl, theme } = options;\n    const token = await provider.generateVerificationToken?.() ?? (0,_utils_web_js__WEBPACK_IMPORTED_MODULE_0__.randomString)(32);\n    const ONE_DAY_IN_SECONDS = 86400;\n    const expires = new Date(Date.now() + (provider.maxAge ?? ONE_DAY_IN_SECONDS) * 1000);\n    const secret = provider.secret ?? options.secret;\n    const sendRequest = provider.sendVerificationRequest({\n        identifier: email,\n        token,\n        expires,\n        url: `${url}/callback/${provider.id}?${new URLSearchParams({\n            callbackUrl,\n            token,\n            email\n        })}`,\n        provider,\n        theme,\n        request: (0,_utils_web_js__WEBPACK_IMPORTED_MODULE_0__.toRequest)(request)\n    });\n    const createToken = adapter.createVerificationToken?.({\n        identifier: email,\n        token: await (0,_utils_web_js__WEBPACK_IMPORTED_MODULE_0__.createHash)(`${token}${secret}`),\n        expires\n    });\n    await Promise.all([\n        sendRequest,\n        createToken\n    ]);\n    return {\n        redirect: `${url}/verify-request?${new URLSearchParams({\n            provider: provider.id,\n            type: provider.type\n        })}`\n    };\n}\nfunction defaultNormalizer(email) {\n    if (!email) throw new Error(\"Missing email from request body.\");\n    // Get the first two elements only,\n    // separated by `@` from user input.\n    let [local, domain] = email.toLowerCase().trim().split(\"@\");\n    // The part before \"@\" can contain a \",\"\n    // but we remove it on the domain part\n    domain = domain.split(\",\")[0];\n    return `${local}@${domain}`;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF1dGgvY29yZS9saWIvYWN0aW9ucy9zaWduaW4vc2VuZC10b2tlbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBeUU7QUFDWjtBQUM3RDs7OztDQUlDLEdBQ00sZUFBZUksVUFBVUMsT0FBTyxFQUFFQyxPQUFPO0lBQzVDLE1BQU0sRUFBRUMsSUFBSSxFQUFFLEdBQUdGO0lBQ2pCLE1BQU0sRUFBRUcsUUFBUSxFQUFFQyxHQUFHLEVBQUVDLFNBQVMsRUFBRUMsT0FBTyxFQUFFLEdBQUdMO0lBQzlDLE1BQU1NLGFBQWFKLFNBQVNLLG1CQUFtQixJQUFJQztJQUNuRCxNQUFNQyxRQUFRSCxXQUFXTCxNQUFNUTtJQUMvQixNQUFNQyxjQUFjO1FBQUVDLElBQUlGO1FBQU9BO1FBQU9HLGVBQWU7SUFBSztJQUM1RCxNQUFNQyxPQUFRLE1BQU9SLFFBQVFTLGNBQWMsQ0FBQ0wsVUFDeENDO0lBQ0osTUFBTUssVUFBVTtRQUNaQyxtQkFBbUJQO1FBQ25CUSxRQUFRSixLQUFLRixFQUFFO1FBQ2ZPLE1BQU07UUFDTmhCLFVBQVVBLFNBQVNTLEVBQUU7SUFDekI7SUFDQSxJQUFJUTtJQUNKLElBQUk7UUFDQSxNQUFNQyxTQUFTO1lBQUVQO1lBQU1FO1lBQVNOLE9BQU87Z0JBQUVZLHFCQUFxQjtZQUFLO1FBQUU7UUFDckVGLGFBQWEsTUFBTWYsVUFBVWtCLE1BQU0sQ0FBQ0Y7SUFDeEMsRUFDQSxPQUFPRyxHQUFHO1FBQ04sTUFBTSxJQUFJMUIsK0RBQXVCQSxDQUFDMEI7SUFDdEM7SUFDQSxJQUFJLENBQUNKLFlBQ0QsTUFBTSxJQUFJdEIsK0RBQXVCQSxDQUFDO0lBQ3RDLE1BQU0sRUFBRTJCLFdBQVcsRUFBRUMsS0FBSyxFQUFFLEdBQUd6QjtJQUMvQixNQUFNMEIsUUFBUSxNQUFPeEIsU0FBU3lCLHlCQUF5QixRQUFTaEMsMkRBQVlBLENBQUM7SUFDN0UsTUFBTWlDLHFCQUFxQjtJQUMzQixNQUFNQyxVQUFVLElBQUlDLEtBQUtBLEtBQUtDLEdBQUcsS0FBSyxDQUFDN0IsU0FBUzhCLE1BQU0sSUFBSUosa0JBQWlCLElBQUs7SUFDaEYsTUFBTUssU0FBUy9CLFNBQVMrQixNQUFNLElBQUlqQyxRQUFRaUMsTUFBTTtJQUNoRCxNQUFNQyxjQUFjaEMsU0FBU2lDLHVCQUF1QixDQUFDO1FBQ2pEQyxZQUFZM0I7UUFDWmlCO1FBQ0FHO1FBQ0ExQixLQUFLLENBQUMsRUFBRUEsSUFBSSxVQUFVLEVBQUVELFNBQVNTLEVBQUUsQ0FBQyxDQUFDLEVBQUUsSUFBSTBCLGdCQUFnQjtZQUN2RGI7WUFDQUU7WUFDQWpCO1FBQ0osR0FBRyxDQUFDO1FBQ0pQO1FBQ0F1QjtRQUNBMUIsU0FBU0gsd0RBQVNBLENBQUNHO0lBQ3ZCO0lBQ0EsTUFBTXVDLGNBQWNqQyxRQUFRa0MsdUJBQXVCLEdBQUc7UUFDbERILFlBQVkzQjtRQUNaaUIsT0FBTyxNQUFNaEMseURBQVVBLENBQUMsQ0FBQyxFQUFFZ0MsTUFBTSxFQUFFTyxPQUFPLENBQUM7UUFDM0NKO0lBQ0o7SUFDQSxNQUFNVyxRQUFRQyxHQUFHLENBQUM7UUFBQ1A7UUFBYUk7S0FBWTtJQUM1QyxPQUFPO1FBQ0hJLFVBQVUsQ0FBQyxFQUFFdkMsSUFBSSxnQkFBZ0IsRUFBRSxJQUFJa0MsZ0JBQWdCO1lBQ25EbkMsVUFBVUEsU0FBU1MsRUFBRTtZQUNyQk8sTUFBTWhCLFNBQVNnQixJQUFJO1FBQ3ZCLEdBQUcsQ0FBQztJQUNSO0FBQ0o7QUFDQSxTQUFTVixrQkFBa0JDLEtBQUs7SUFDNUIsSUFBSSxDQUFDQSxPQUNELE1BQU0sSUFBSWtDLE1BQU07SUFDcEIsbUNBQW1DO0lBQ25DLG9DQUFvQztJQUNwQyxJQUFJLENBQUNDLE9BQU9DLE9BQU8sR0FBR3BDLE1BQU1xQyxXQUFXLEdBQUdDLElBQUksR0FBR0MsS0FBSyxDQUFDO0lBQ3ZELHdDQUF3QztJQUN4QyxzQ0FBc0M7SUFDdENILFNBQVNBLE9BQU9HLEtBQUssQ0FBQyxJQUFJLENBQUMsRUFBRTtJQUM3QixPQUFPLENBQUMsRUFBRUosTUFBTSxDQUFDLEVBQUVDLE9BQU8sQ0FBQztBQUMvQiIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi9hY3Rpb25zL3NpZ25pbi9zZW5kLXRva2VuLmpzPzY5NzQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlSGFzaCwgcmFuZG9tU3RyaW5nLCB0b1JlcXVlc3QgfSBmcm9tIFwiLi4vLi4vdXRpbHMvd2ViLmpzXCI7XG5pbXBvcnQgeyBBdXRob3JpemVkQ2FsbGJhY2tFcnJvciB9IGZyb20gXCIuLi8uLi8uLi9lcnJvcnMuanNcIjtcbi8qKlxuICogU3RhcnRzIGFuIGUtbWFpbCBsb2dpbiBmbG93LCBieSBnZW5lcmF0aW5nIGEgdG9rZW4sXG4gKiBhbmQgc2VuZGluZyBpdCB0byB0aGUgdXNlcidzIGUtbWFpbCAod2l0aCB0aGUgaGVscCBvZiBhIERCIGFkYXB0ZXIpLlxuICogQXQgdGhlIGVuZCwgaXQgcmV0dXJucyBhIHJlZGlyZWN0IHRvIHRoZSBgdmVyaWZ5LXJlcXVlc3RgIHBhZ2UuXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzZW5kVG9rZW4ocmVxdWVzdCwgb3B0aW9ucykge1xuICAgIGNvbnN0IHsgYm9keSB9ID0gcmVxdWVzdDtcbiAgICBjb25zdCB7IHByb3ZpZGVyLCB1cmwsIGNhbGxiYWNrcywgYWRhcHRlciB9ID0gb3B0aW9ucztcbiAgICBjb25zdCBub3JtYWxpemVyID0gcHJvdmlkZXIubm9ybWFsaXplSWRlbnRpZmllciA/PyBkZWZhdWx0Tm9ybWFsaXplcjtcbiAgICBjb25zdCBlbWFpbCA9IG5vcm1hbGl6ZXIoYm9keT8uZW1haWwpO1xuICAgIGNvbnN0IGRlZmF1bHRVc2VyID0geyBpZDogZW1haWwsIGVtYWlsLCBlbWFpbFZlcmlmaWVkOiBudWxsIH07XG4gICAgY29uc3QgdXNlciA9ICgoYXdhaXQgYWRhcHRlci5nZXRVc2VyQnlFbWFpbChlbWFpbCkpID8/XG4gICAgICAgIGRlZmF1bHRVc2VyKTtcbiAgICBjb25zdCBhY2NvdW50ID0ge1xuICAgICAgICBwcm92aWRlckFjY291bnRJZDogZW1haWwsXG4gICAgICAgIHVzZXJJZDogdXNlci5pZCxcbiAgICAgICAgdHlwZTogXCJlbWFpbFwiLFxuICAgICAgICBwcm92aWRlcjogcHJvdmlkZXIuaWQsXG4gICAgfTtcbiAgICBsZXQgYXV0aG9yaXplZDtcbiAgICB0cnkge1xuICAgICAgICBjb25zdCBwYXJhbXMgPSB7IHVzZXIsIGFjY291bnQsIGVtYWlsOiB7IHZlcmlmaWNhdGlvblJlcXVlc3Q6IHRydWUgfSB9O1xuICAgICAgICBhdXRob3JpemVkID0gYXdhaXQgY2FsbGJhY2tzLnNpZ25JbihwYXJhbXMpO1xuICAgIH1cbiAgICBjYXRjaCAoZSkge1xuICAgICAgICB0aHJvdyBuZXcgQXV0aG9yaXplZENhbGxiYWNrRXJyb3IoZSk7XG4gICAgfVxuICAgIGlmICghYXV0aG9yaXplZClcbiAgICAgICAgdGhyb3cgbmV3IEF1dGhvcml6ZWRDYWxsYmFja0Vycm9yKFwiQWNjZXNzRGVuaWVkXCIpO1xuICAgIGNvbnN0IHsgY2FsbGJhY2tVcmwsIHRoZW1lIH0gPSBvcHRpb25zO1xuICAgIGNvbnN0IHRva2VuID0gKGF3YWl0IHByb3ZpZGVyLmdlbmVyYXRlVmVyaWZpY2F0aW9uVG9rZW4/LigpKSA/PyByYW5kb21TdHJpbmcoMzIpO1xuICAgIGNvbnN0IE9ORV9EQVlfSU5fU0VDT05EUyA9IDg2NDAwO1xuICAgIGNvbnN0IGV4cGlyZXMgPSBuZXcgRGF0ZShEYXRlLm5vdygpICsgKHByb3ZpZGVyLm1heEFnZSA/PyBPTkVfREFZX0lOX1NFQ09ORFMpICogMTAwMCk7XG4gICAgY29uc3Qgc2VjcmV0ID0gcHJvdmlkZXIuc2VjcmV0ID8/IG9wdGlvbnMuc2VjcmV0O1xuICAgIGNvbnN0IHNlbmRSZXF1ZXN0ID0gcHJvdmlkZXIuc2VuZFZlcmlmaWNhdGlvblJlcXVlc3Qoe1xuICAgICAgICBpZGVudGlmaWVyOiBlbWFpbCxcbiAgICAgICAgdG9rZW4sXG4gICAgICAgIGV4cGlyZXMsXG4gICAgICAgIHVybDogYCR7dXJsfS9jYWxsYmFjay8ke3Byb3ZpZGVyLmlkfT8ke25ldyBVUkxTZWFyY2hQYXJhbXMoe1xuICAgICAgICAgICAgY2FsbGJhY2tVcmwsXG4gICAgICAgICAgICB0b2tlbixcbiAgICAgICAgICAgIGVtYWlsLFxuICAgICAgICB9KX1gLFxuICAgICAgICBwcm92aWRlcixcbiAgICAgICAgdGhlbWUsXG4gICAgICAgIHJlcXVlc3Q6IHRvUmVxdWVzdChyZXF1ZXN0KSxcbiAgICB9KTtcbiAgICBjb25zdCBjcmVhdGVUb2tlbiA9IGFkYXB0ZXIuY3JlYXRlVmVyaWZpY2F0aW9uVG9rZW4/Lih7XG4gICAgICAgIGlkZW50aWZpZXI6IGVtYWlsLFxuICAgICAgICB0b2tlbjogYXdhaXQgY3JlYXRlSGFzaChgJHt0b2tlbn0ke3NlY3JldH1gKSxcbiAgICAgICAgZXhwaXJlcyxcbiAgICB9KTtcbiAgICBhd2FpdCBQcm9taXNlLmFsbChbc2VuZFJlcXVlc3QsIGNyZWF0ZVRva2VuXSk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcmVkaXJlY3Q6IGAke3VybH0vdmVyaWZ5LXJlcXVlc3Q/JHtuZXcgVVJMU2VhcmNoUGFyYW1zKHtcbiAgICAgICAgICAgIHByb3ZpZGVyOiBwcm92aWRlci5pZCxcbiAgICAgICAgICAgIHR5cGU6IHByb3ZpZGVyLnR5cGUsXG4gICAgICAgIH0pfWAsXG4gICAgfTtcbn1cbmZ1bmN0aW9uIGRlZmF1bHROb3JtYWxpemVyKGVtYWlsKSB7XG4gICAgaWYgKCFlbWFpbClcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTWlzc2luZyBlbWFpbCBmcm9tIHJlcXVlc3QgYm9keS5cIik7XG4gICAgLy8gR2V0IHRoZSBmaXJzdCB0d28gZWxlbWVudHMgb25seSxcbiAgICAvLyBzZXBhcmF0ZWQgYnkgYEBgIGZyb20gdXNlciBpbnB1dC5cbiAgICBsZXQgW2xvY2FsLCBkb21haW5dID0gZW1haWwudG9Mb3dlckNhc2UoKS50cmltKCkuc3BsaXQoXCJAXCIpO1xuICAgIC8vIFRoZSBwYXJ0IGJlZm9yZSBcIkBcIiBjYW4gY29udGFpbiBhIFwiLFwiXG4gICAgLy8gYnV0IHdlIHJlbW92ZSBpdCBvbiB0aGUgZG9tYWluIHBhcnRcbiAgICBkb21haW4gPSBkb21haW4uc3BsaXQoXCIsXCIpWzBdO1xuICAgIHJldHVybiBgJHtsb2NhbH1AJHtkb21haW59YDtcbn1cbiJdLCJuYW1lcyI6WyJjcmVhdGVIYXNoIiwicmFuZG9tU3RyaW5nIiwidG9SZXF1ZXN0IiwiQXV0aG9yaXplZENhbGxiYWNrRXJyb3IiLCJzZW5kVG9rZW4iLCJyZXF1ZXN0Iiwib3B0aW9ucyIsImJvZHkiLCJwcm92aWRlciIsInVybCIsImNhbGxiYWNrcyIsImFkYXB0ZXIiLCJub3JtYWxpemVyIiwibm9ybWFsaXplSWRlbnRpZmllciIsImRlZmF1bHROb3JtYWxpemVyIiwiZW1haWwiLCJkZWZhdWx0VXNlciIsImlkIiwiZW1haWxWZXJpZmllZCIsInVzZXIiLCJnZXRVc2VyQnlFbWFpbCIsImFjY291bnQiLCJwcm92aWRlckFjY291bnRJZCIsInVzZXJJZCIsInR5cGUiLCJhdXRob3JpemVkIiwicGFyYW1zIiwidmVyaWZpY2F0aW9uUmVxdWVzdCIsInNpZ25JbiIsImUiLCJjYWxsYmFja1VybCIsInRoZW1lIiwidG9rZW4iLCJnZW5lcmF0ZVZlcmlmaWNhdGlvblRva2VuIiwiT05FX0RBWV9JTl9TRUNPTkRTIiwiZXhwaXJlcyIsIkRhdGUiLCJub3ciLCJtYXhBZ2UiLCJzZWNyZXQiLCJzZW5kUmVxdWVzdCIsInNlbmRWZXJpZmljYXRpb25SZXF1ZXN0IiwiaWRlbnRpZmllciIsIlVSTFNlYXJjaFBhcmFtcyIsImNyZWF0ZVRva2VuIiwiY3JlYXRlVmVyaWZpY2F0aW9uVG9rZW4iLCJQcm9taXNlIiwiYWxsIiwicmVkaXJlY3QiLCJFcnJvciIsImxvY2FsIiwiZG9tYWluIiwidG9Mb3dlckNhc2UiLCJ0cmltIiwic3BsaXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@auth/core/lib/actions/signin/send-token.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@auth/core/lib/actions/signout.js":
/*!********************************************************!*\
  !*** ./node_modules/@auth/core/lib/actions/signout.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   signOut: () => (/* binding */ signOut)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors.js */ \"(rsc)/./node_modules/@auth/core/errors.js\");\n\n/**\n * Destroys the session.\n * If the session strategy is database,\n * The session is also deleted from the database.\n * In any case, the session cookie is cleared and\n * {@link EventCallbacks.signOut} is emitted.\n */ async function signOut(cookies, sessionStore, options) {\n    const { jwt, events, callbackUrl: redirect, logger, session } = options;\n    const sessionToken = sessionStore.value;\n    if (!sessionToken) return {\n        redirect,\n        cookies\n    };\n    try {\n        if (session.strategy === \"jwt\") {\n            const salt = options.cookies.sessionToken.name;\n            const token = await jwt.decode({\n                ...jwt,\n                token: sessionToken,\n                salt\n            });\n            await events.signOut?.({\n                token\n            });\n        } else {\n            const session = await options.adapter?.deleteSession(sessionToken);\n            await events.signOut?.({\n                session\n            });\n        }\n    } catch (e) {\n        logger.error(new _errors_js__WEBPACK_IMPORTED_MODULE_0__.SignOutError(e));\n    }\n    cookies.push(...sessionStore.clean());\n    return {\n        redirect,\n        cookies\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF1dGgvY29yZS9saWIvYWN0aW9ucy9zaWdub3V0LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQStDO0FBQy9DOzs7Ozs7Q0FNQyxHQUNNLGVBQWVDLFFBQVFDLE9BQU8sRUFBRUMsWUFBWSxFQUFFQyxPQUFPO0lBQ3hELE1BQU0sRUFBRUMsR0FBRyxFQUFFQyxNQUFNLEVBQUVDLGFBQWFDLFFBQVEsRUFBRUMsTUFBTSxFQUFFQyxPQUFPLEVBQUUsR0FBR047SUFDaEUsTUFBTU8sZUFBZVIsYUFBYVMsS0FBSztJQUN2QyxJQUFJLENBQUNELGNBQ0QsT0FBTztRQUFFSDtRQUFVTjtJQUFRO0lBQy9CLElBQUk7UUFDQSxJQUFJUSxRQUFRRyxRQUFRLEtBQUssT0FBTztZQUM1QixNQUFNQyxPQUFPVixRQUFRRixPQUFPLENBQUNTLFlBQVksQ0FBQ0ksSUFBSTtZQUM5QyxNQUFNQyxRQUFRLE1BQU1YLElBQUlZLE1BQU0sQ0FBQztnQkFBRSxHQUFHWixHQUFHO2dCQUFFVyxPQUFPTDtnQkFBY0c7WUFBSztZQUNuRSxNQUFNUixPQUFPTCxPQUFPLEdBQUc7Z0JBQUVlO1lBQU07UUFDbkMsT0FDSztZQUNELE1BQU1OLFVBQVUsTUFBTU4sUUFBUWMsT0FBTyxFQUFFQyxjQUFjUjtZQUNyRCxNQUFNTCxPQUFPTCxPQUFPLEdBQUc7Z0JBQUVTO1lBQVE7UUFDckM7SUFDSixFQUNBLE9BQU9VLEdBQUc7UUFDTlgsT0FBT1ksS0FBSyxDQUFDLElBQUlyQixvREFBWUEsQ0FBQ29CO0lBQ2xDO0lBQ0FsQixRQUFRb0IsSUFBSSxJQUFJbkIsYUFBYW9CLEtBQUs7SUFDbEMsT0FBTztRQUFFZjtRQUFVTjtJQUFRO0FBQy9CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BhdXRoL2NvcmUvbGliL2FjdGlvbnMvc2lnbm91dC5qcz84ZWZjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNpZ25PdXRFcnJvciB9IGZyb20gXCIuLi8uLi9lcnJvcnMuanNcIjtcbi8qKlxuICogRGVzdHJveXMgdGhlIHNlc3Npb24uXG4gKiBJZiB0aGUgc2Vzc2lvbiBzdHJhdGVneSBpcyBkYXRhYmFzZSxcbiAqIFRoZSBzZXNzaW9uIGlzIGFsc28gZGVsZXRlZCBmcm9tIHRoZSBkYXRhYmFzZS5cbiAqIEluIGFueSBjYXNlLCB0aGUgc2Vzc2lvbiBjb29raWUgaXMgY2xlYXJlZCBhbmRcbiAqIHtAbGluayBFdmVudENhbGxiYWNrcy5zaWduT3V0fSBpcyBlbWl0dGVkLlxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gc2lnbk91dChjb29raWVzLCBzZXNzaW9uU3RvcmUsIG9wdGlvbnMpIHtcbiAgICBjb25zdCB7IGp3dCwgZXZlbnRzLCBjYWxsYmFja1VybDogcmVkaXJlY3QsIGxvZ2dlciwgc2Vzc2lvbiB9ID0gb3B0aW9ucztcbiAgICBjb25zdCBzZXNzaW9uVG9rZW4gPSBzZXNzaW9uU3RvcmUudmFsdWU7XG4gICAgaWYgKCFzZXNzaW9uVG9rZW4pXG4gICAgICAgIHJldHVybiB7IHJlZGlyZWN0LCBjb29raWVzIH07XG4gICAgdHJ5IHtcbiAgICAgICAgaWYgKHNlc3Npb24uc3RyYXRlZ3kgPT09IFwiand0XCIpIHtcbiAgICAgICAgICAgIGNvbnN0IHNhbHQgPSBvcHRpb25zLmNvb2tpZXMuc2Vzc2lvblRva2VuLm5hbWU7XG4gICAgICAgICAgICBjb25zdCB0b2tlbiA9IGF3YWl0IGp3dC5kZWNvZGUoeyAuLi5qd3QsIHRva2VuOiBzZXNzaW9uVG9rZW4sIHNhbHQgfSk7XG4gICAgICAgICAgICBhd2FpdCBldmVudHMuc2lnbk91dD8uKHsgdG9rZW4gfSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb25zdCBzZXNzaW9uID0gYXdhaXQgb3B0aW9ucy5hZGFwdGVyPy5kZWxldGVTZXNzaW9uKHNlc3Npb25Ub2tlbik7XG4gICAgICAgICAgICBhd2FpdCBldmVudHMuc2lnbk91dD8uKHsgc2Vzc2lvbiB9KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjYXRjaCAoZSkge1xuICAgICAgICBsb2dnZXIuZXJyb3IobmV3IFNpZ25PdXRFcnJvcihlKSk7XG4gICAgfVxuICAgIGNvb2tpZXMucHVzaCguLi5zZXNzaW9uU3RvcmUuY2xlYW4oKSk7XG4gICAgcmV0dXJuIHsgcmVkaXJlY3QsIGNvb2tpZXMgfTtcbn1cbiJdLCJuYW1lcyI6WyJTaWduT3V0RXJyb3IiLCJzaWduT3V0IiwiY29va2llcyIsInNlc3Npb25TdG9yZSIsIm9wdGlvbnMiLCJqd3QiLCJldmVudHMiLCJjYWxsYmFja1VybCIsInJlZGlyZWN0IiwibG9nZ2VyIiwic2Vzc2lvbiIsInNlc3Npb25Ub2tlbiIsInZhbHVlIiwic3RyYXRlZ3kiLCJzYWx0IiwibmFtZSIsInRva2VuIiwiZGVjb2RlIiwiYWRhcHRlciIsImRlbGV0ZVNlc3Npb24iLCJlIiwiZXJyb3IiLCJwdXNoIiwiY2xlYW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@auth/core/lib/actions/signout.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@auth/core/lib/index.js":
/*!**********************************************!*\
  !*** ./node_modules/@auth/core/lib/index.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthInternal: () => (/* binding */ AuthInternal),\n/* harmony export */   raw: () => (/* binding */ raw),\n/* harmony export */   skipCSRFCheck: () => (/* binding */ skipCSRFCheck)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../errors.js */ \"(rsc)/./node_modules/@auth/core/errors.js\");\n/* harmony import */ var _utils_cookie_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/cookie.js */ \"(rsc)/./node_modules/@auth/core/lib/utils/cookie.js\");\n/* harmony import */ var _init_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./init.js */ \"(rsc)/./node_modules/@auth/core/lib/init.js\");\n/* harmony import */ var _pages_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/index.js */ \"(rsc)/./node_modules/@auth/core/lib/pages/index.js\");\n/* harmony import */ var _actions_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./actions/index.js */ \"(rsc)/./node_modules/@auth/core/lib/actions/index.js\");\n/* harmony import */ var _actions_callback_oauth_csrf_token_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./actions/callback/oauth/csrf-token.js */ \"(rsc)/./node_modules/@auth/core/lib/actions/callback/oauth/csrf-token.js\");\n\n\n\n\n\n\n/** @internal */ async function AuthInternal(request, authOptions) {\n    const { action, providerId, error, method } = request;\n    const csrfDisabled = authOptions.skipCSRFCheck === skipCSRFCheck;\n    const { options, cookies } = await (0,_init_js__WEBPACK_IMPORTED_MODULE_2__.init)({\n        authOptions,\n        action,\n        providerId,\n        url: request.url,\n        callbackUrl: request.body?.callbackUrl ?? request.query?.callbackUrl,\n        csrfToken: request.body?.csrfToken,\n        cookies: request.cookies,\n        isPost: method === \"POST\",\n        csrfDisabled\n    });\n    const sessionStore = new _utils_cookie_js__WEBPACK_IMPORTED_MODULE_1__.SessionStore(options.cookies.sessionToken, request.cookies, options.logger);\n    if (method === \"GET\") {\n        const render = (0,_pages_index_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({\n            ...options,\n            query: request.query,\n            cookies\n        });\n        switch(action){\n            case \"callback\":\n                return await _actions_index_js__WEBPACK_IMPORTED_MODULE_4__.callback(request, options, sessionStore, cookies);\n            case \"csrf\":\n                return render.csrf(csrfDisabled, options, cookies);\n            case \"error\":\n                return render.error(error);\n            case \"providers\":\n                return render.providers(options.providers);\n            case \"session\":\n                return await _actions_index_js__WEBPACK_IMPORTED_MODULE_4__.session(options, sessionStore, cookies);\n            case \"signin\":\n                return render.signin(error);\n            case \"signout\":\n                return render.signout();\n            case \"verify-request\":\n                return render.verifyRequest();\n            default:\n        }\n    } else {\n        const { csrfTokenVerified } = options;\n        switch(action){\n            case \"callback\":\n                if (options.provider.type === \"credentials\") // Verified CSRF Token required for credentials providers only\n                (0,_actions_callback_oauth_csrf_token_js__WEBPACK_IMPORTED_MODULE_5__.validateCSRF)(action, csrfTokenVerified);\n                return await _actions_index_js__WEBPACK_IMPORTED_MODULE_4__.callback(request, options, sessionStore, cookies);\n            case \"session\":\n                (0,_actions_callback_oauth_csrf_token_js__WEBPACK_IMPORTED_MODULE_5__.validateCSRF)(action, csrfTokenVerified);\n                return await _actions_index_js__WEBPACK_IMPORTED_MODULE_4__.session(options, sessionStore, cookies, true, request.body?.data);\n            case \"signin\":\n                (0,_actions_callback_oauth_csrf_token_js__WEBPACK_IMPORTED_MODULE_5__.validateCSRF)(action, csrfTokenVerified);\n                return await _actions_index_js__WEBPACK_IMPORTED_MODULE_4__.signIn(request, cookies, options);\n            case \"signout\":\n                (0,_actions_callback_oauth_csrf_token_js__WEBPACK_IMPORTED_MODULE_5__.validateCSRF)(action, csrfTokenVerified);\n                return await _actions_index_js__WEBPACK_IMPORTED_MODULE_4__.signOut(cookies, sessionStore, options);\n            default:\n        }\n    }\n    throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.UnknownAction(`Cannot handle action: ${action}`);\n}\n/**\n * :::danger\n * This option is intended for framework authors.\n * :::\n *\n * Auth.js comes with built-in {@link https://authjs.dev/concepts/security#csrf CSRF} protection, but\n * if you are implementing a framework that is already protected against CSRF attacks, you can skip this check by\n * passing this value to {@link AuthConfig.skipCSRFCheck}.\n */ const skipCSRFCheck = Symbol(\"skip-csrf-check\");\n/**\n * :::danger\n * This option is intended for framework authors.\n * :::\n *\n * Auth.js returns a web standard {@link Response} by default, but\n * if you are implementing a framework you might want to get access to the raw internal response\n * by passing this value to {@link AuthConfig.raw}.\n */ const raw = Symbol(\"return-type-raw\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@auth/core/lib/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@auth/core/lib/init.js":
/*!*********************************************!*\
  !*** ./node_modules/@auth/core/lib/init.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultCallbacks: () => (/* binding */ defaultCallbacks),\n/* harmony export */   init: () => (/* binding */ init)\n/* harmony export */ });\n/* harmony import */ var _jwt_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../jwt.js */ \"(rsc)/./node_modules/@auth/core/jwt.js\");\n/* harmony import */ var _utils_callback_url_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/callback-url.js */ \"(rsc)/./node_modules/@auth/core/lib/utils/callback-url.js\");\n/* harmony import */ var _utils_cookie_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/cookie.js */ \"(rsc)/./node_modules/@auth/core/lib/utils/cookie.js\");\n/* harmony import */ var _actions_callback_oauth_csrf_token_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./actions/callback/oauth/csrf-token.js */ \"(rsc)/./node_modules/@auth/core/lib/actions/callback/oauth/csrf-token.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../errors.js */ \"(rsc)/./node_modules/@auth/core/errors.js\");\n/* harmony import */ var _utils_providers_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/providers.js */ \"(rsc)/./node_modules/@auth/core/lib/utils/providers.js\");\n/* harmony import */ var _utils_logger_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/logger.js */ \"(rsc)/./node_modules/@auth/core/lib/utils/logger.js\");\n\n\n\n\n\n\n\nconst defaultCallbacks = {\n    signIn () {\n        return true;\n    },\n    redirect ({ url, baseUrl }) {\n        if (url.startsWith(\"/\")) return `${baseUrl}${url}`;\n        else if (new URL(url).origin === baseUrl) return url;\n        return baseUrl;\n    },\n    session ({ session }) {\n        return session;\n    },\n    jwt ({ token }) {\n        return token;\n    }\n};\n/** Initialize all internal options and cookies. */ async function init({ authOptions, providerId, action, url, cookies: reqCookies, callbackUrl: reqCallbackUrl, csrfToken: reqCsrfToken, csrfDisabled, isPost }) {\n    const { providers, provider } = (0,_utils_providers_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"])({\n        providers: authOptions.providers,\n        url,\n        providerId,\n        options: authOptions\n    });\n    const maxAge = 30 * 24 * 60 * 60; // Sessions expire after 30 days of being idle by default\n    let isOnRedirectProxy = false;\n    if ((provider?.type === \"oauth\" || provider?.type === \"oidc\") && provider.redirectProxyUrl) {\n        try {\n            isOnRedirectProxy = new URL(provider.redirectProxyUrl).origin === url.origin;\n        } catch  {\n            throw new TypeError(`redirectProxyUrl must be a valid URL. Received: ${provider.redirectProxyUrl}`);\n        }\n    }\n    // User provided options are overridden by other options,\n    // except for the options with special handling above\n    const options = {\n        debug: false,\n        pages: {},\n        theme: {\n            colorScheme: \"auto\",\n            logo: \"\",\n            brandColor: \"\",\n            buttonText: \"\"\n        },\n        // Custom options override defaults\n        ...authOptions,\n        // These computed settings can have values in userOptions but we override them\n        // and are request-specific.\n        url,\n        action,\n        // @ts-expect-errors\n        provider,\n        cookies: {\n            ..._utils_cookie_js__WEBPACK_IMPORTED_MODULE_2__.defaultCookies(authOptions.useSecureCookies ?? url.protocol === \"https:\"),\n            // Allow user cookie options to override any cookie settings above\n            ...authOptions.cookies\n        },\n        providers,\n        // Session options\n        session: {\n            // If no adapter specified, force use of JSON Web Tokens (stateless)\n            strategy: authOptions.adapter ? \"database\" : \"jwt\",\n            maxAge,\n            updateAge: 24 * 60 * 60,\n            generateSessionToken: ()=>crypto.randomUUID(),\n            ...authOptions.session\n        },\n        // JWT options\n        jwt: {\n            // Asserted in assert.ts\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            secret: authOptions.secret,\n            maxAge: authOptions.session?.maxAge ?? maxAge,\n            encode: _jwt_js__WEBPACK_IMPORTED_MODULE_0__.encode,\n            decode: _jwt_js__WEBPACK_IMPORTED_MODULE_0__.decode,\n            ...authOptions.jwt\n        },\n        // Event messages\n        events: eventsErrorHandler(authOptions.events ?? {}, _utils_logger_js__WEBPACK_IMPORTED_MODULE_6__.logger),\n        adapter: adapterErrorHandler(authOptions.adapter, _utils_logger_js__WEBPACK_IMPORTED_MODULE_6__.logger),\n        // Callback functions\n        callbacks: {\n            ...defaultCallbacks,\n            ...authOptions.callbacks\n        },\n        logger: _utils_logger_js__WEBPACK_IMPORTED_MODULE_6__.logger,\n        callbackUrl: url.origin,\n        isOnRedirectProxy\n    };\n    // Init cookies\n    const cookies = [];\n    if (csrfDisabled) {\n        options.csrfTokenVerified = true;\n    } else {\n        const { csrfToken, cookie: csrfCookie, csrfTokenVerified } = await (0,_actions_callback_oauth_csrf_token_js__WEBPACK_IMPORTED_MODULE_3__.createCSRFToken)({\n            options,\n            cookieValue: reqCookies?.[options.cookies.csrfToken.name],\n            isPost,\n            bodyValue: reqCsrfToken\n        });\n        options.csrfToken = csrfToken;\n        options.csrfTokenVerified = csrfTokenVerified;\n        if (csrfCookie) {\n            cookies.push({\n                name: options.cookies.csrfToken.name,\n                value: csrfCookie,\n                options: options.cookies.csrfToken.options\n            });\n        }\n    }\n    const { callbackUrl, callbackUrlCookie } = await (0,_utils_callback_url_js__WEBPACK_IMPORTED_MODULE_1__.createCallbackUrl)({\n        options,\n        cookieValue: reqCookies?.[options.cookies.callbackUrl.name],\n        paramValue: reqCallbackUrl\n    });\n    options.callbackUrl = callbackUrl;\n    if (callbackUrlCookie) {\n        cookies.push({\n            name: options.cookies.callbackUrl.name,\n            value: callbackUrlCookie,\n            options: options.cookies.callbackUrl.options\n        });\n    }\n    return {\n        options,\n        cookies\n    };\n}\n/** Wraps an object of methods and adds error handling. */ function eventsErrorHandler(methods, logger) {\n    return Object.keys(methods).reduce((acc, name)=>{\n        acc[name] = async (...args)=>{\n            try {\n                const method = methods[name];\n                return await method(...args);\n            } catch (e) {\n                logger.error(new _errors_js__WEBPACK_IMPORTED_MODULE_4__.EventError(e));\n            }\n        };\n        return acc;\n    }, {});\n}\n/** Handles adapter induced errors. */ function adapterErrorHandler(adapter, logger) {\n    if (!adapter) return;\n    return Object.keys(adapter).reduce((acc, name)=>{\n        acc[name] = async (...args)=>{\n            try {\n                logger.debug(`adapter_${name}`, {\n                    args\n                });\n                const method = adapter[name];\n                return await method(...args);\n            } catch (e) {\n                const error = new _errors_js__WEBPACK_IMPORTED_MODULE_4__.AdapterError(e);\n                logger.error(error);\n                throw error;\n            }\n        };\n        return acc;\n    }, {});\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@auth/core/lib/init.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@auth/core/lib/pages/error.js":
/*!****************************************************!*\
  !*** ./node_modules/@auth/core/lib/pages/error.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ErrorPage)\n/* harmony export */ });\n/* harmony import */ var preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! preact/jsx-runtime */ \"(rsc)/./node_modules/preact/jsx-runtime/dist/jsxRuntime.mjs\");\n\n/** Renders an error page. */ function ErrorPage(props) {\n    const { url, error = \"default\", theme } = props;\n    const signinPageUrl = `${url}/signin`;\n    const errors = {\n        default: {\n            status: 200,\n            heading: \"Error\",\n            message: (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"p\", {\n                children: (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"a\", {\n                    className: \"site\",\n                    href: url?.origin,\n                    children: url?.host\n                })\n            })\n        },\n        Configuration: {\n            status: 500,\n            heading: \"Server error\",\n            message: (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n                children: [\n                    (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"p\", {\n                        children: \"There is a problem with the server configuration.\"\n                    }),\n                    (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"p\", {\n                        children: \"Check the server logs for more information.\"\n                    })\n                ]\n            })\n        },\n        AccessDenied: {\n            status: 403,\n            heading: \"Access Denied\",\n            message: (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n                children: [\n                    (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"p\", {\n                        children: \"You do not have permission to sign in.\"\n                    }),\n                    (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"p\", {\n                        children: (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"a\", {\n                            className: \"button\",\n                            href: signinPageUrl,\n                            children: \"Sign in\"\n                        })\n                    })\n                ]\n            })\n        },\n        Verification: {\n            status: 403,\n            heading: \"Unable to sign in\",\n            message: (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n                children: [\n                    (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"p\", {\n                        children: \"The sign in link is no longer valid.\"\n                    }),\n                    (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"p\", {\n                        children: \"It may have been used already or it may have expired.\"\n                    })\n                ]\n            }),\n            signin: (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"a\", {\n                className: \"button\",\n                href: signinPageUrl,\n                children: \"Sign in\"\n            })\n        }\n    };\n    const { status, heading, message, signin } = errors[error] ?? errors.default;\n    return {\n        status,\n        html: (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n            className: \"error\",\n            children: [\n                theme?.brandColor && (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"style\", {\n                    dangerouslySetInnerHTML: {\n                        __html: `\n        :root {\n          --brand-color: ${theme?.brandColor}\n        }\n      `\n                    }\n                }),\n                (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n                    className: \"card\",\n                    children: [\n                        theme?.logo && (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"img\", {\n                            src: theme?.logo,\n                            alt: \"Logo\",\n                            className: \"logo\"\n                        }),\n                        (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"h1\", {\n                            children: heading\n                        }),\n                        (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n                            className: \"message\",\n                            children: message\n                        }),\n                        signin\n                    ]\n                })\n            ]\n        })\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF1dGgvY29yZS9saWIvcGFnZXMvZXJyb3IuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBZ0U7QUFDaEUsMkJBQTJCLEdBQ1osU0FBU0ksVUFBVUMsS0FBSztJQUNuQyxNQUFNLEVBQUVDLEdBQUcsRUFBRUMsUUFBUSxTQUFTLEVBQUVDLEtBQUssRUFBRSxHQUFHSDtJQUMxQyxNQUFNSSxnQkFBZ0IsQ0FBQyxFQUFFSCxJQUFJLE9BQU8sQ0FBQztJQUNyQyxNQUFNSSxTQUFTO1FBQ1hDLFNBQVM7WUFDTEMsUUFBUTtZQUNSQyxTQUFTO1lBQ1RDLFNBQVViLHVEQUFJQSxDQUFDLEtBQUs7Z0JBQUVjLFVBQVVkLHVEQUFJQSxDQUFDLEtBQUs7b0JBQUVlLFdBQVc7b0JBQVFDLE1BQU1YLEtBQUtZO29CQUFRSCxVQUFVVCxLQUFLYTtnQkFBSztZQUFHO1FBQzdHO1FBQ0FDLGVBQWU7WUFDWFIsUUFBUTtZQUNSQyxTQUFTO1lBQ1RDLFNBQVVYLHdEQUFLQSxDQUFDLE9BQU87Z0JBQUVZLFVBQVU7b0JBQUNkLHVEQUFJQSxDQUFDLEtBQUs7d0JBQUVjLFVBQVU7b0JBQW9EO29CQUFJZCx1REFBSUEsQ0FBQyxLQUFLO3dCQUFFYyxVQUFVO29CQUE4QztpQkFBRztZQUFDO1FBQzlMO1FBQ0FNLGNBQWM7WUFDVlQsUUFBUTtZQUNSQyxTQUFTO1lBQ1RDLFNBQVVYLHdEQUFLQSxDQUFDLE9BQU87Z0JBQUVZLFVBQVU7b0JBQUNkLHVEQUFJQSxDQUFDLEtBQUs7d0JBQUVjLFVBQVU7b0JBQXlDO29CQUFJZCx1REFBSUEsQ0FBQyxLQUFLO3dCQUFFYyxVQUFVZCx1REFBSUEsQ0FBQyxLQUFLOzRCQUFFZSxXQUFXOzRCQUFVQyxNQUFNUjs0QkFBZU0sVUFBVTt3QkFBVTtvQkFBRztpQkFBRztZQUFDO1FBQ2xOO1FBQ0FPLGNBQWM7WUFDVlYsUUFBUTtZQUNSQyxTQUFTO1lBQ1RDLFNBQVVYLHdEQUFLQSxDQUFDLE9BQU87Z0JBQUVZLFVBQVU7b0JBQUNkLHVEQUFJQSxDQUFDLEtBQUs7d0JBQUVjLFVBQVU7b0JBQXVDO29CQUFJZCx1REFBSUEsQ0FBQyxLQUFLO3dCQUFFYyxVQUFVO29CQUF3RDtpQkFBRztZQUFDO1lBQ3ZMUSxRQUFTdEIsdURBQUlBLENBQUMsS0FBSztnQkFBRWUsV0FBVztnQkFBVUMsTUFBTVI7Z0JBQWVNLFVBQVU7WUFBVTtRQUN2RjtJQUNKO0lBQ0EsTUFBTSxFQUFFSCxNQUFNLEVBQUVDLE9BQU8sRUFBRUMsT0FBTyxFQUFFUyxNQUFNLEVBQUUsR0FBR2IsTUFBTSxDQUFDSCxNQUFNLElBQUlHLE9BQU9DLE9BQU87SUFDNUUsT0FBTztRQUNIQztRQUNBWSxNQUFPckIsd0RBQUtBLENBQUMsT0FBTztZQUFFYSxXQUFXO1lBQVNELFVBQVU7Z0JBQUNQLE9BQU9pQixjQUFleEIsdURBQUlBLENBQUMsU0FBUztvQkFBRXlCLHlCQUF5Qjt3QkFDcEdDLFFBQVEsQ0FBQzs7eUJBRVIsRUFBRW5CLE9BQU9pQixXQUFXOztNQUV2QyxDQUFDO29CQUNhO2dCQUFFO2dCQUFLdEIsd0RBQUtBLENBQUMsT0FBTztvQkFBRWEsV0FBVztvQkFBUUQsVUFBVTt3QkFBQ1AsT0FBT29CLFFBQVEzQix1REFBSUEsQ0FBQyxPQUFPOzRCQUFFNEIsS0FBS3JCLE9BQU9vQjs0QkFBTUUsS0FBSzs0QkFBUWQsV0FBVzt3QkFBTzt3QkFBSWYsdURBQUlBLENBQUMsTUFBTTs0QkFBRWMsVUFBVUY7d0JBQVE7d0JBQUlaLHVEQUFJQSxDQUFDLE9BQU87NEJBQUVlLFdBQVc7NEJBQVdELFVBQVVEO3dCQUFRO3dCQUFJUztxQkFBTztnQkFBQzthQUFHO1FBQUM7SUFDL1A7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi9wYWdlcy9lcnJvci5qcz85MDM4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGpzeCBhcyBfanN4LCBqc3hzIGFzIF9qc3hzIH0gZnJvbSBcInByZWFjdC9qc3gtcnVudGltZVwiO1xuLyoqIFJlbmRlcnMgYW4gZXJyb3IgcGFnZS4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEVycm9yUGFnZShwcm9wcykge1xuICAgIGNvbnN0IHsgdXJsLCBlcnJvciA9IFwiZGVmYXVsdFwiLCB0aGVtZSB9ID0gcHJvcHM7XG4gICAgY29uc3Qgc2lnbmluUGFnZVVybCA9IGAke3VybH0vc2lnbmluYDtcbiAgICBjb25zdCBlcnJvcnMgPSB7XG4gICAgICAgIGRlZmF1bHQ6IHtcbiAgICAgICAgICAgIHN0YXR1czogMjAwLFxuICAgICAgICAgICAgaGVhZGluZzogXCJFcnJvclwiLFxuICAgICAgICAgICAgbWVzc2FnZTogKF9qc3goXCJwXCIsIHsgY2hpbGRyZW46IF9qc3goXCJhXCIsIHsgY2xhc3NOYW1lOiBcInNpdGVcIiwgaHJlZjogdXJsPy5vcmlnaW4sIGNoaWxkcmVuOiB1cmw/Lmhvc3QgfSkgfSkpLFxuICAgICAgICB9LFxuICAgICAgICBDb25maWd1cmF0aW9uOiB7XG4gICAgICAgICAgICBzdGF0dXM6IDUwMCxcbiAgICAgICAgICAgIGhlYWRpbmc6IFwiU2VydmVyIGVycm9yXCIsXG4gICAgICAgICAgICBtZXNzYWdlOiAoX2pzeHMoXCJkaXZcIiwgeyBjaGlsZHJlbjogW19qc3goXCJwXCIsIHsgY2hpbGRyZW46IFwiVGhlcmUgaXMgYSBwcm9ibGVtIHdpdGggdGhlIHNlcnZlciBjb25maWd1cmF0aW9uLlwiIH0pLCBfanN4KFwicFwiLCB7IGNoaWxkcmVuOiBcIkNoZWNrIHRoZSBzZXJ2ZXIgbG9ncyBmb3IgbW9yZSBpbmZvcm1hdGlvbi5cIiB9KV0gfSkpLFxuICAgICAgICB9LFxuICAgICAgICBBY2Nlc3NEZW5pZWQ6IHtcbiAgICAgICAgICAgIHN0YXR1czogNDAzLFxuICAgICAgICAgICAgaGVhZGluZzogXCJBY2Nlc3MgRGVuaWVkXCIsXG4gICAgICAgICAgICBtZXNzYWdlOiAoX2pzeHMoXCJkaXZcIiwgeyBjaGlsZHJlbjogW19qc3goXCJwXCIsIHsgY2hpbGRyZW46IFwiWW91IGRvIG5vdCBoYXZlIHBlcm1pc3Npb24gdG8gc2lnbiBpbi5cIiB9KSwgX2pzeChcInBcIiwgeyBjaGlsZHJlbjogX2pzeChcImFcIiwgeyBjbGFzc05hbWU6IFwiYnV0dG9uXCIsIGhyZWY6IHNpZ25pblBhZ2VVcmwsIGNoaWxkcmVuOiBcIlNpZ24gaW5cIiB9KSB9KV0gfSkpLFxuICAgICAgICB9LFxuICAgICAgICBWZXJpZmljYXRpb246IHtcbiAgICAgICAgICAgIHN0YXR1czogNDAzLFxuICAgICAgICAgICAgaGVhZGluZzogXCJVbmFibGUgdG8gc2lnbiBpblwiLFxuICAgICAgICAgICAgbWVzc2FnZTogKF9qc3hzKFwiZGl2XCIsIHsgY2hpbGRyZW46IFtfanN4KFwicFwiLCB7IGNoaWxkcmVuOiBcIlRoZSBzaWduIGluIGxpbmsgaXMgbm8gbG9uZ2VyIHZhbGlkLlwiIH0pLCBfanN4KFwicFwiLCB7IGNoaWxkcmVuOiBcIkl0IG1heSBoYXZlIGJlZW4gdXNlZCBhbHJlYWR5IG9yIGl0IG1heSBoYXZlIGV4cGlyZWQuXCIgfSldIH0pKSxcbiAgICAgICAgICAgIHNpZ25pbjogKF9qc3goXCJhXCIsIHsgY2xhc3NOYW1lOiBcImJ1dHRvblwiLCBocmVmOiBzaWduaW5QYWdlVXJsLCBjaGlsZHJlbjogXCJTaWduIGluXCIgfSkpLFxuICAgICAgICB9LFxuICAgIH07XG4gICAgY29uc3QgeyBzdGF0dXMsIGhlYWRpbmcsIG1lc3NhZ2UsIHNpZ25pbiB9ID0gZXJyb3JzW2Vycm9yXSA/PyBlcnJvcnMuZGVmYXVsdDtcbiAgICByZXR1cm4ge1xuICAgICAgICBzdGF0dXMsXG4gICAgICAgIGh0bWw6IChfanN4cyhcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJlcnJvclwiLCBjaGlsZHJlbjogW3RoZW1lPy5icmFuZENvbG9yICYmIChfanN4KFwic3R5bGVcIiwgeyBkYW5nZXJvdXNseVNldElubmVySFRNTDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgX19odG1sOiBgXG4gICAgICAgIDpyb290IHtcbiAgICAgICAgICAtLWJyYW5kLWNvbG9yOiAke3RoZW1lPy5icmFuZENvbG9yfVxuICAgICAgICB9XG4gICAgICBgLFxuICAgICAgICAgICAgICAgICAgICB9IH0pKSwgX2pzeHMoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwiY2FyZFwiLCBjaGlsZHJlbjogW3RoZW1lPy5sb2dvICYmIF9qc3goXCJpbWdcIiwgeyBzcmM6IHRoZW1lPy5sb2dvLCBhbHQ6IFwiTG9nb1wiLCBjbGFzc05hbWU6IFwibG9nb1wiIH0pLCBfanN4KFwiaDFcIiwgeyBjaGlsZHJlbjogaGVhZGluZyB9KSwgX2pzeChcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJtZXNzYWdlXCIsIGNoaWxkcmVuOiBtZXNzYWdlIH0pLCBzaWduaW5dIH0pXSB9KSksXG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6WyJqc3giLCJfanN4IiwianN4cyIsIl9qc3hzIiwiRXJyb3JQYWdlIiwicHJvcHMiLCJ1cmwiLCJlcnJvciIsInRoZW1lIiwic2lnbmluUGFnZVVybCIsImVycm9ycyIsImRlZmF1bHQiLCJzdGF0dXMiLCJoZWFkaW5nIiwibWVzc2FnZSIsImNoaWxkcmVuIiwiY2xhc3NOYW1lIiwiaHJlZiIsIm9yaWdpbiIsImhvc3QiLCJDb25maWd1cmF0aW9uIiwiQWNjZXNzRGVuaWVkIiwiVmVyaWZpY2F0aW9uIiwic2lnbmluIiwiaHRtbCIsImJyYW5kQ29sb3IiLCJkYW5nZXJvdXNseVNldElubmVySFRNTCIsIl9faHRtbCIsImxvZ28iLCJzcmMiLCJhbHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@auth/core/lib/pages/error.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@auth/core/lib/pages/index.js":
/*!****************************************************!*\
  !*** ./node_modules/@auth/core/lib/pages/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ renderPage)\n/* harmony export */ });\n/* harmony import */ var preact_render_to_string__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! preact-render-to-string */ \"(rsc)/./node_modules/preact-render-to-string/dist/index.mjs\");\n/* harmony import */ var _error_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./error.js */ \"(rsc)/./node_modules/@auth/core/lib/pages/error.js\");\n/* harmony import */ var _signin_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./signin.js */ \"(rsc)/./node_modules/@auth/core/lib/pages/signin.js\");\n/* harmony import */ var _signout_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./signout.js */ \"(rsc)/./node_modules/@auth/core/lib/pages/signout.js\");\n/* harmony import */ var _styles_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./styles.js */ \"(rsc)/./node_modules/@auth/core/lib/pages/styles.js\");\n/* harmony import */ var _verify_request_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./verify-request.js */ \"(rsc)/./node_modules/@auth/core/lib/pages/verify-request.js\");\n\n\n\n\n\n\nfunction send({ html, title, status, cookies, theme }) {\n    return {\n        cookies,\n        status,\n        headers: {\n            \"Content-Type\": \"text/html\"\n        },\n        body: `<!DOCTYPE html><html lang=\"en\"><head><meta charset=\"UTF-8\"><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><style>${_styles_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]}</style><title>${title}</title></head><body class=\"__next-auth-theme-${theme?.colorScheme ?? \"auto\"}\"><div class=\"page\">${(0,preact_render_to_string__WEBPACK_IMPORTED_MODULE_0__.renderToString)(html)}</div></body></html>`\n    };\n}\n/**\n * Unless the user defines their [own pages](https://authjs.dev/reference/core#pages),\n * we render a set of default ones, using Preact SSR.\n */ function renderPage(params) {\n    const { url, theme, query, cookies, pages } = params;\n    return {\n        csrf (skip, options, cookies) {\n            if (!skip) {\n                return {\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: {\n                        csrfToken: options.csrfToken\n                    },\n                    cookies\n                };\n            }\n            options.logger.warn(\"csrf-disabled\");\n            cookies.push({\n                name: options.cookies.csrfToken.name,\n                value: \"\",\n                options: {\n                    ...options.cookies.csrfToken.options,\n                    maxAge: 0\n                }\n            });\n            return {\n                status: 404,\n                cookies\n            };\n        },\n        providers (providers) {\n            return {\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: providers.reduce((acc, { id, name, type, signinUrl, callbackUrl })=>{\n                    acc[id] = {\n                        id,\n                        name,\n                        type,\n                        signinUrl,\n                        callbackUrl\n                    };\n                    return acc;\n                }, {})\n            };\n        },\n        signin (error) {\n            if (pages?.signIn) {\n                let signinUrl = `${pages.signIn}${pages.signIn.includes(\"?\") ? \"&\" : \"?\"}${new URLSearchParams({\n                    callbackUrl: params.callbackUrl ?? \"/\"\n                })}`;\n                if (error) signinUrl = `${signinUrl}&${new URLSearchParams({\n                    error\n                })}`;\n                return {\n                    redirect: signinUrl,\n                    cookies\n                };\n            }\n            return send({\n                cookies,\n                theme,\n                html: (0,_signin_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({\n                    csrfToken: params.csrfToken,\n                    // We only want to render providers\n                    providers: params.providers?.filter((provider)=>// Always render oauth and email type providers\n                        [\n                            \"email\",\n                            \"oauth\",\n                            \"oidc\"\n                        ].includes(provider.type) || // Only render credentials type provider if credentials are defined\n                        provider.type === \"credentials\" && provider.credentials || // Don't render other provider types\n                        false),\n                    callbackUrl: params.callbackUrl,\n                    theme: params.theme,\n                    error,\n                    ...query\n                }),\n                title: \"Sign In\"\n            });\n        },\n        signout () {\n            if (pages?.signOut) return {\n                redirect: pages.signOut,\n                cookies\n            };\n            return send({\n                cookies,\n                theme,\n                html: (0,_signout_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({\n                    csrfToken: params.csrfToken,\n                    url,\n                    theme\n                }),\n                title: \"Sign Out\"\n            });\n        },\n        verifyRequest (props) {\n            if (pages?.verifyRequest) return {\n                redirect: pages.verifyRequest,\n                cookies\n            };\n            return send({\n                cookies,\n                theme,\n                html: (0,_verify_request_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"])({\n                    url,\n                    theme,\n                    ...props\n                }),\n                title: \"Verify Request\"\n            });\n        },\n        error (error) {\n            if (pages?.error) {\n                return {\n                    redirect: `${pages.error}${pages.error.includes(\"?\") ? \"&\" : \"?\"}error=${error}`,\n                    cookies\n                };\n            }\n            return send({\n                cookies,\n                theme,\n                // @ts-expect-error fix error type\n                ...(0,_error_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])({\n                    url,\n                    theme,\n                    error\n                }),\n                title: \"Error\"\n            });\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@auth/core/lib/pages/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@auth/core/lib/pages/signin.js":
/*!*****************************************************!*\
  !*** ./node_modules/@auth/core/lib/pages/signin.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SigninPage)\n/* harmony export */ });\n/* harmony import */ var preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! preact/jsx-runtime */ \"(rsc)/./node_modules/preact/jsx-runtime/dist/jsxRuntime.mjs\");\n\nconst signinErrors = {\n    default: \"Unable to sign in.\",\n    Signin: \"Try signing in with a different account.\",\n    OAuthSignin: \"Try signing in with a different account.\",\n    OAuthCallbackError: \"Try signing in with a different account.\",\n    OAuthCreateAccount: \"Try signing in with a different account.\",\n    EmailCreateAccount: \"Try signing in with a different account.\",\n    Callback: \"Try signing in with a different account.\",\n    OAuthAccountNotLinked: \"To confirm your identity, sign in with the same account you used originally.\",\n    EmailSignin: \"The e-mail could not be sent.\",\n    CredentialsSignin: \"Sign in failed. Check the details you provided are correct.\",\n    SessionRequired: \"Please sign in to access this page.\"\n};\nfunction hexToRgba(hex, alpha = 1) {\n    if (!hex) {\n        return;\n    }\n    // Remove the \"#\" character if it's included\n    hex = hex.replace(/^#/, \"\");\n    // Expand 3-digit hex codes to their 6-digit equivalents\n    if (hex.length === 3) {\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n    }\n    // Parse the hex value to separate R, G, and B components\n    const bigint = parseInt(hex, 16);\n    const r = bigint >> 16 & 255;\n    const g = bigint >> 8 & 255;\n    const b = bigint & 255;\n    // Ensure the alpha value is within the valid range [0, 1]\n    alpha = Math.min(Math.max(alpha, 0), 1);\n    // Construct the RGBA string\n    const rgba = `rgba(${r}, ${g}, ${b}, ${alpha})`;\n    return rgba;\n}\nfunction SigninPage(props) {\n    const { csrfToken, providers = [], callbackUrl, theme, email, error: errorType } = props;\n    if (typeof document !== \"undefined\" && theme?.brandColor) {\n        document.documentElement.style.setProperty(\"--brand-color\", theme.brandColor);\n    }\n    if (typeof document !== \"undefined\" && theme?.buttonText) {\n        document.documentElement.style.setProperty(\"--button-text-color\", theme.buttonText);\n    }\n    const error = errorType && (signinErrors[errorType] ?? signinErrors.default);\n    const providerLogoPath = \"https://authjs.dev/img/providers\";\n    return (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n        className: \"signin\",\n        children: [\n            theme?.brandColor && (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"style\", {\n                dangerouslySetInnerHTML: {\n                    __html: `:root {--brand-color: ${theme.brandColor}}`\n                }\n            }),\n            theme?.buttonText && (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"style\", {\n                dangerouslySetInnerHTML: {\n                    __html: `\n        :root {\n          --button-text-color: ${theme.buttonText}\n        }\n      `\n                }\n            }),\n            (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n                className: \"card\",\n                children: [\n                    error && (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n                        className: \"error\",\n                        children: (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"p\", {\n                            children: error\n                        })\n                    }),\n                    theme?.logo && (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"img\", {\n                        src: theme.logo,\n                        alt: \"Logo\",\n                        className: \"logo\"\n                    }),\n                    providers.map((provider, i)=>{\n                        let bg, text, logo, logoDark, bgDark, textDark;\n                        if (provider.type === \"oauth\" || provider.type === \"oidc\") {\n                            ;\n                            ({ bg = \"\", text = \"\", logo = \"\", bgDark = bg, textDark = text, logoDark = \"\" } = provider.style ?? {});\n                            logo = logo.startsWith(\"/\") ? providerLogoPath + logo : logo;\n                            logoDark = logoDark.startsWith(\"/\") ? providerLogoPath + logoDark : logoDark || logo;\n                            logoDark || (logoDark = logo);\n                        }\n                        return (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n                            className: \"provider\",\n                            children: [\n                                provider.type === \"oauth\" || provider.type === \"oidc\" ? (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"form\", {\n                                    action: provider.signinUrl,\n                                    method: \"POST\",\n                                    children: [\n                                        (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"input\", {\n                                            type: \"hidden\",\n                                            name: \"csrfToken\",\n                                            value: csrfToken\n                                        }),\n                                        callbackUrl && (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"input\", {\n                                            type: \"hidden\",\n                                            name: \"callbackUrl\",\n                                            value: callbackUrl\n                                        }),\n                                        (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"button\", {\n                                            type: \"submit\",\n                                            className: \"button\",\n                                            style: {\n                                                \"--provider-bg\": bg,\n                                                \"--provider-dark-bg\": bgDark,\n                                                \"--provider-color\": text,\n                                                \"--provider-dark-color\": textDark,\n                                                \"--provider-bg-hover\": hexToRgba(bg, 0.8),\n                                                \"--provider-dark-bg-hover\": hexToRgba(bgDark, 0.8)\n                                            },\n                                            tabIndex: 0,\n                                            children: [\n                                                logo && (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"img\", {\n                                                    loading: \"lazy\",\n                                                    height: 24,\n                                                    width: 24,\n                                                    id: \"provider-logo\",\n                                                    src: logo\n                                                }),\n                                                logoDark && (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"img\", {\n                                                    loading: \"lazy\",\n                                                    height: 24,\n                                                    width: 24,\n                                                    id: \"provider-logo-dark\",\n                                                    src: logoDark\n                                                }),\n                                                (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"span\", {\n                                                    children: [\n                                                        \"Sign in with \",\n                                                        provider.name\n                                                    ]\n                                                })\n                                            ]\n                                        })\n                                    ]\n                                }) : null,\n                                (provider.type === \"email\" || provider.type === \"credentials\") && i > 0 && providers[i - 1].type !== \"email\" && providers[i - 1].type !== \"credentials\" && (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"hr\", {}),\n                                provider.type === \"email\" && (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"form\", {\n                                    action: provider.signinUrl,\n                                    method: \"POST\",\n                                    children: [\n                                        (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"input\", {\n                                            type: \"hidden\",\n                                            name: \"csrfToken\",\n                                            value: csrfToken\n                                        }),\n                                        (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"label\", {\n                                            className: \"section-header\",\n                                            htmlFor: `input-email-for-${provider.id}-provider`,\n                                            children: \"Email\"\n                                        }),\n                                        (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"input\", {\n                                            id: `input-email-for-${provider.id}-provider`,\n                                            autoFocus: true,\n                                            type: \"email\",\n                                            name: \"email\",\n                                            value: email,\n                                            placeholder: \"email@example.com\",\n                                            required: true\n                                        }),\n                                        (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"button\", {\n                                            id: \"submitButton\",\n                                            type: \"submit\",\n                                            tabIndex: 0,\n                                            children: [\n                                                \"Sign in with \",\n                                                provider.name\n                                            ]\n                                        })\n                                    ]\n                                }),\n                                provider.type === \"credentials\" && (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"form\", {\n                                    action: provider.callbackUrl,\n                                    method: \"POST\",\n                                    children: [\n                                        (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"input\", {\n                                            type: \"hidden\",\n                                            name: \"csrfToken\",\n                                            value: csrfToken\n                                        }),\n                                        Object.keys(provider.credentials).map((credential)=>{\n                                            return (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n                                                children: [\n                                                    (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"label\", {\n                                                        className: \"section-header\",\n                                                        htmlFor: `input-${credential}-for-${provider.id}-provider`,\n                                                        children: provider.credentials[credential].label ?? credential\n                                                    }),\n                                                    (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"input\", {\n                                                        name: credential,\n                                                        id: `input-${credential}-for-${provider.id}-provider`,\n                                                        type: provider.credentials[credential].type ?? \"text\",\n                                                        placeholder: provider.credentials[credential].placeholder ?? \"\",\n                                                        ...provider.credentials[credential]\n                                                    })\n                                                ]\n                                            }, `input-group-${provider.id}`);\n                                        }),\n                                        (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"button\", {\n                                            id: \"submitButton\",\n                                            type: \"submit\",\n                                            tabIndex: 0,\n                                            children: [\n                                                \"Sign in with \",\n                                                provider.name\n                                            ]\n                                        })\n                                    ]\n                                }),\n                                (provider.type === \"email\" || provider.type === \"credentials\") && i + 1 < providers.length && (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"hr\", {})\n                            ]\n                        }, provider.id);\n                    })\n                ]\n            })\n        ]\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@auth/core/lib/pages/signin.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@auth/core/lib/pages/signout.js":
/*!******************************************************!*\
  !*** ./node_modules/@auth/core/lib/pages/signout.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SignoutPage)\n/* harmony export */ });\n/* harmony import */ var preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! preact/jsx-runtime */ \"(rsc)/./node_modules/preact/jsx-runtime/dist/jsxRuntime.mjs\");\n\nfunction SignoutPage(props) {\n    const { url, csrfToken, theme } = props;\n    return (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n        className: \"signout\",\n        children: [\n            theme?.brandColor && (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"style\", {\n                dangerouslySetInnerHTML: {\n                    __html: `\n        :root {\n          --brand-color: ${theme.brandColor}\n        }\n      `\n                }\n            }),\n            theme?.buttonText && (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"style\", {\n                dangerouslySetInnerHTML: {\n                    __html: `\n        :root {\n          --button-text-color: ${theme.buttonText}\n        }\n      `\n                }\n            }),\n            (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n                className: \"card\",\n                children: [\n                    theme?.logo && (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"img\", {\n                        src: theme.logo,\n                        alt: \"Logo\",\n                        className: \"logo\"\n                    }),\n                    (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"h1\", {\n                        children: \"Signout\"\n                    }),\n                    (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"p\", {\n                        children: \"Are you sure you want to sign out?\"\n                    }),\n                    (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"form\", {\n                        action: `${url}/signout`,\n                        method: \"POST\",\n                        children: [\n                            (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"input\", {\n                                type: \"hidden\",\n                                name: \"csrfToken\",\n                                value: csrfToken\n                            }),\n                            (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"button\", {\n                                id: \"submitButton\",\n                                type: \"submit\",\n                                children: \"Sign out\"\n                            })\n                        ]\n                    })\n                ]\n            })\n        ]\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF1dGgvY29yZS9saWIvcGFnZXMvc2lnbm91dC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFnRTtBQUNqRCxTQUFTSSxZQUFZQyxLQUFLO0lBQ3JDLE1BQU0sRUFBRUMsR0FBRyxFQUFFQyxTQUFTLEVBQUVDLEtBQUssRUFBRSxHQUFHSDtJQUNsQyxPQUFRRix3REFBS0EsQ0FBQyxPQUFPO1FBQUVNLFdBQVc7UUFBV0MsVUFBVTtZQUFDRixPQUFPRyxjQUFlVix1REFBSUEsQ0FBQyxTQUFTO2dCQUFFVyx5QkFBeUI7b0JBQ3ZHQyxRQUFRLENBQUM7O3lCQUVKLEVBQUVMLE1BQU1HLFVBQVUsQ0FBQzs7TUFFdEMsQ0FBQztnQkFDUztZQUFFO1lBQUtILE9BQU9NLGNBQWViLHVEQUFJQSxDQUFDLFNBQVM7Z0JBQUVXLHlCQUF5QjtvQkFDbEVDLFFBQVEsQ0FBQzs7K0JBRUUsRUFBRUwsTUFBTU0sVUFBVSxDQUFDOztNQUU1QyxDQUFDO2dCQUNTO1lBQUU7WUFBS1gsd0RBQUtBLENBQUMsT0FBTztnQkFBRU0sV0FBVztnQkFBUUMsVUFBVTtvQkFBQ0YsT0FBT08sUUFBUWQsdURBQUlBLENBQUMsT0FBTzt3QkFBRWUsS0FBS1IsTUFBTU8sSUFBSTt3QkFBRUUsS0FBSzt3QkFBUVIsV0FBVztvQkFBTztvQkFBSVIsdURBQUlBLENBQUMsTUFBTTt3QkFBRVMsVUFBVTtvQkFBVTtvQkFBSVQsdURBQUlBLENBQUMsS0FBSzt3QkFBRVMsVUFBVTtvQkFBcUM7b0JBQUlQLHdEQUFLQSxDQUFDLFFBQVE7d0JBQUVlLFFBQVEsQ0FBQyxFQUFFWixJQUFJLFFBQVEsQ0FBQzt3QkFBRWEsUUFBUTt3QkFBUVQsVUFBVTs0QkFBQ1QsdURBQUlBLENBQUMsU0FBUztnQ0FBRW1CLE1BQU07Z0NBQVVDLE1BQU07Z0NBQWFDLE9BQU9mOzRCQUFVOzRCQUFJTix1REFBSUEsQ0FBQyxVQUFVO2dDQUFFc0IsSUFBSTtnQ0FBZ0JILE1BQU07Z0NBQVVWLFVBQVU7NEJBQVc7eUJBQUc7b0JBQUM7aUJBQUc7WUFBQztTQUFHO0lBQUM7QUFDNWQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGF1dGgvY29yZS9saWIvcGFnZXMvc2lnbm91dC5qcz8yMmMzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGpzeCBhcyBfanN4LCBqc3hzIGFzIF9qc3hzIH0gZnJvbSBcInByZWFjdC9qc3gtcnVudGltZVwiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gU2lnbm91dFBhZ2UocHJvcHMpIHtcbiAgICBjb25zdCB7IHVybCwgY3NyZlRva2VuLCB0aGVtZSB9ID0gcHJvcHM7XG4gICAgcmV0dXJuIChfanN4cyhcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJzaWdub3V0XCIsIGNoaWxkcmVuOiBbdGhlbWU/LmJyYW5kQ29sb3IgJiYgKF9qc3goXCJzdHlsZVwiLCB7IGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MOiB7XG4gICAgICAgICAgICAgICAgICAgIF9faHRtbDogYFxuICAgICAgICA6cm9vdCB7XG4gICAgICAgICAgLS1icmFuZC1jb2xvcjogJHt0aGVtZS5icmFuZENvbG9yfVxuICAgICAgICB9XG4gICAgICBgLFxuICAgICAgICAgICAgICAgIH0gfSkpLCB0aGVtZT8uYnV0dG9uVGV4dCAmJiAoX2pzeChcInN0eWxlXCIsIHsgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw6IHtcbiAgICAgICAgICAgICAgICAgICAgX19odG1sOiBgXG4gICAgICAgIDpyb290IHtcbiAgICAgICAgICAtLWJ1dHRvbi10ZXh0LWNvbG9yOiAke3RoZW1lLmJ1dHRvblRleHR9XG4gICAgICAgIH1cbiAgICAgIGAsXG4gICAgICAgICAgICAgICAgfSB9KSksIF9qc3hzKFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBcImNhcmRcIiwgY2hpbGRyZW46IFt0aGVtZT8ubG9nbyAmJiBfanN4KFwiaW1nXCIsIHsgc3JjOiB0aGVtZS5sb2dvLCBhbHQ6IFwiTG9nb1wiLCBjbGFzc05hbWU6IFwibG9nb1wiIH0pLCBfanN4KFwiaDFcIiwgeyBjaGlsZHJlbjogXCJTaWdub3V0XCIgfSksIF9qc3goXCJwXCIsIHsgY2hpbGRyZW46IFwiQXJlIHlvdSBzdXJlIHlvdSB3YW50IHRvIHNpZ24gb3V0P1wiIH0pLCBfanN4cyhcImZvcm1cIiwgeyBhY3Rpb246IGAke3VybH0vc2lnbm91dGAsIG1ldGhvZDogXCJQT1NUXCIsIGNoaWxkcmVuOiBbX2pzeChcImlucHV0XCIsIHsgdHlwZTogXCJoaWRkZW5cIiwgbmFtZTogXCJjc3JmVG9rZW5cIiwgdmFsdWU6IGNzcmZUb2tlbiB9KSwgX2pzeChcImJ1dHRvblwiLCB7IGlkOiBcInN1Ym1pdEJ1dHRvblwiLCB0eXBlOiBcInN1Ym1pdFwiLCBjaGlsZHJlbjogXCJTaWduIG91dFwiIH0pXSB9KV0gfSldIH0pKTtcbn1cbiJdLCJuYW1lcyI6WyJqc3giLCJfanN4IiwianN4cyIsIl9qc3hzIiwiU2lnbm91dFBhZ2UiLCJwcm9wcyIsInVybCIsImNzcmZUb2tlbiIsInRoZW1lIiwiY2xhc3NOYW1lIiwiY2hpbGRyZW4iLCJicmFuZENvbG9yIiwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwiLCJfX2h0bWwiLCJidXR0b25UZXh0IiwibG9nbyIsInNyYyIsImFsdCIsImFjdGlvbiIsIm1ldGhvZCIsInR5cGUiLCJuYW1lIiwidmFsdWUiLCJpZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@auth/core/lib/pages/signout.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@auth/core/lib/pages/styles.js":
/*!*****************************************************!*\
  !*** ./node_modules/@auth/core/lib/pages/styles.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// Generated by `pnpm css`\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (`:root {\n  --border-width: 1px;\n  --border-radius: 0.5rem;\n  --color-error: #c94b4b;\n  --color-info: #157efb;\n  --color-info-hover: #0f6ddb;\n  --color-info-text: #fff;\n}\n\n.__next-auth-theme-auto,\n.__next-auth-theme-light {\n  --color-background: #ececec;\n  --color-background-hover: rgba(236, 236, 236, 0.8);\n  --color-background-card: #fff;\n  --color-text: #000;\n  --color-primary: #444;\n  --color-control-border: #bbb;\n  --color-button-active-background: #f9f9f9;\n  --color-button-active-border: #aaa;\n  --color-separator: #ccc;\n}\n\n.__next-auth-theme-dark {\n  --color-background: #161b22;\n  --color-background-hover: rgba(22, 27, 34, 0.8);\n  --color-background-card: #0d1117;\n  --color-text: #fff;\n  --color-primary: #ccc;\n  --color-control-border: #555;\n  --color-button-active-background: #060606;\n  --color-button-active-border: #666;\n  --color-separator: #444;\n}\n\n@media (prefers-color-scheme: dark) {\n  .__next-auth-theme-auto {\n    --color-background: #161b22;\n    --color-background-hover: rgba(22, 27, 34, 0.8);\n    --color-background-card: #0d1117;\n    --color-text: #fff;\n    --color-primary: #ccc;\n    --color-control-border: #555;\n    --color-button-active-background: #060606;\n    --color-button-active-border: #666;\n    --color-separator: #444;\n  }\n\n  button,\n  a.button {\n    color: var(--provider-dark-color, var(--color-primary));\n    background-color: var(--provider-dark-bg, var(--color-background));\n  }\n    button:hover, a.button:hover {\n      background-color: var(--provider-dark-bg-hover, var(--color-background-hover)) !important;\n    }\n  #provider-logo {\n    display: none !important;\n  }\n  #provider-logo-dark {\n    width: 25px;\n    display: block !important;\n  }\n}\nhtml {\n  box-sizing: border-box;\n}\n*,\n*:before,\n*:after {\n  box-sizing: inherit;\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  background-color: var(--color-background);\n  margin: 0;\n  padding: 0;\n  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont,\n    \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif,\n    \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";\n}\n\nh1 {\n  margin-bottom: 1.5rem;\n  padding: 0 1rem;\n  font-weight: 400;\n  color: var(--color-text);\n}\n\np {\n  margin-bottom: 1.5rem;\n  padding: 0 1rem;\n  color: var(--color-text);\n}\n\nform {\n  margin: 0;\n  padding: 0;\n}\n\nlabel {\n  font-weight: 500;\n  text-align: left;\n  margin-bottom: 0.25rem;\n  display: block;\n  color: var(--color-text);\n}\n\ninput[type] {\n  box-sizing: border-box;\n  display: block;\n  width: 100%;\n  padding: 0.5rem 1rem;\n  border: var(--border-width) solid var(--color-control-border);\n  background: var(--color-background-card);\n  font-size: 1rem;\n  border-radius: var(--border-radius);\n  color: var(--color-text);\n}\n\ninput[type]:focus {\n    box-shadow: none;\n  }\n\np {\n  font-size: 1.1rem;\n  line-height: 2rem;\n}\n\na.button {\n  text-decoration: none;\n  line-height: 1rem;\n}\n\na.button:link,\n  a.button:visited {\n    background-color: var(--color-background);\n    color: var(--color-primary);\n  }\n\nbutton span {\n  flex-grow: 1;\n}\n\nbutton,\na.button {\n  padding: 0.75rem 1rem;\n  color: var(--provider-color, var(--color-primary));\n  background-color: var(--provider-bg);\n  font-size: 1.1rem;\n  min-height: 62px;\n  border-color: rgba(0, 0, 0, 0.1);\n  border-radius: var(--border-radius);\n  transition: all 0.1s ease-in-out;\n  font-weight: 500;\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\nbutton:hover, a.button:hover {\n    background-color: var(--provider-bg-hover, var(--color-background-hover));\n    cursor: pointer;\n  }\n\nbutton:active, a.button:active {\n    cursor: pointer;\n  }\n\nbutton #provider-logo, a.button #provider-logo {\n    width: 25px;\n    display: block;\n  }\n\nbutton #provider-logo-dark, a.button #provider-logo-dark {\n    display: none;\n  }\n\n#submitButton {\n  color: var(--button-text-color, var(--color-info-text));\n  background-color: var(--brand-color, var(--color-info));\n  width: 100%;\n}\n\n#submitButton:hover {\n    background-color: var(--button-hover-bg, var(--color-info-hover)) !important;\n  }\n\na.site {\n  color: var(--color-primary);\n  text-decoration: none;\n  font-size: 1rem;\n  line-height: 2rem;\n}\n\na.site:hover {\n    text-decoration: underline;\n  }\n\n.page {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  display: grid;\n  place-items: center;\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n.page > div {\n    text-align: center;\n  }\n\n.error a.button {\n    padding-left: 2rem;\n    padding-right: 2rem;\n    margin-top: 0.5rem;\n  }\n\n.error .message {\n    margin-bottom: 1.5rem;\n  }\n\n.signin input[type=\"text\"] {\n    margin-left: auto;\n    margin-right: auto;\n    display: block;\n  }\n\n.signin hr {\n    display: block;\n    border: 0;\n    border-top: 1px solid var(--color-separator);\n    margin: 2rem auto 1rem auto;\n    overflow: visible;\n  }\n\n.signin hr::before {\n      content: \"or\";\n      background: var(--color-background-card);\n      color: #888;\n      padding: 0 0.4rem;\n      position: relative;\n      top: -0.7rem;\n    }\n\n.signin .error {\n    background: #f5f5f5;\n    font-weight: 500;\n    border-radius: 0.3rem;\n    background: var(--color-error);\n  }\n\n.signin .error p {\n      text-align: left;\n      padding: 0.5rem 1rem;\n      font-size: 0.9rem;\n      line-height: 1.2rem;\n      color: var(--color-info-text);\n    }\n\n.signin > div,\n  .signin form {\n    display: block;\n  }\n\n.signin > div input[type], .signin form input[type] {\n      margin-bottom: 0.5rem;\n    }\n\n.signin > div button, .signin form button {\n      width: 100%;\n    }\n\n.signin .provider + .provider {\n    margin-top: 1rem;\n  }\n\n.logo {\n  display: inline-block;\n  max-width: 150px;\n  margin: 1.25rem 0;\n  max-height: 70px;\n}\n\n.card {\n  background-color: var(--color-background-card);\n  border-radius: 2rem;\n  padding: 1.25rem 2rem;\n}\n\n.card .header {\n    color: var(--color-primary);\n  }\n\n.section-header {\n  color: var(--color-text);\n}\n\n@media screen and (min-width: 450px) {\n  .card {\n    margin: 2rem 0;\n    width: 368px;\n  }\n}\n@media screen and (max-width: 450px) {\n  .card {\n    margin: 1rem 0;\n    width: 343px;\n  }\n}\n`);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@auth/core/lib/pages/styles.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@auth/core/lib/pages/verify-request.js":
/*!*************************************************************!*\
  !*** ./node_modules/@auth/core/lib/pages/verify-request.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ VerifyRequestPage)\n/* harmony export */ });\n/* harmony import */ var preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! preact/jsx-runtime */ \"(rsc)/./node_modules/preact/jsx-runtime/dist/jsxRuntime.mjs\");\n\nfunction VerifyRequestPage(props) {\n    const { url, theme } = props;\n    return (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n        className: \"verify-request\",\n        children: [\n            theme.brandColor && (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"style\", {\n                dangerouslySetInnerHTML: {\n                    __html: `\n        :root {\n          --brand-color: ${theme.brandColor}\n        }\n      `\n                }\n            }),\n            (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n                className: \"card\",\n                children: [\n                    theme.logo && (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"img\", {\n                        src: theme.logo,\n                        alt: \"Logo\",\n                        className: \"logo\"\n                    }),\n                    (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"h1\", {\n                        children: \"Check your email\"\n                    }),\n                    (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"p\", {\n                        children: \"A sign in link has been sent to your email address.\"\n                    }),\n                    (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"p\", {\n                        children: (0,preact_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"a\", {\n                            className: \"site\",\n                            href: url.origin,\n                            children: url.host\n                        })\n                    })\n                ]\n            })\n        ]\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF1dGgvY29yZS9saWIvcGFnZXMvdmVyaWZ5LXJlcXVlc3QuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBZ0U7QUFDakQsU0FBU0ksa0JBQWtCQyxLQUFLO0lBQzNDLE1BQU0sRUFBRUMsR0FBRyxFQUFFQyxLQUFLLEVBQUUsR0FBR0Y7SUFDdkIsT0FBUUYsd0RBQUtBLENBQUMsT0FBTztRQUFFSyxXQUFXO1FBQWtCQyxVQUFVO1lBQUNGLE1BQU1HLFVBQVUsSUFBS1QsdURBQUlBLENBQUMsU0FBUztnQkFBRVUseUJBQXlCO29CQUM3R0MsUUFBUSxDQUFDOzt5QkFFSixFQUFFTCxNQUFNRyxVQUFVLENBQUM7O01BRXRDLENBQUM7Z0JBQ1M7WUFBRTtZQUFLUCx3REFBS0EsQ0FBQyxPQUFPO2dCQUFFSyxXQUFXO2dCQUFRQyxVQUFVO29CQUFDRixNQUFNTSxJQUFJLElBQUlaLHVEQUFJQSxDQUFDLE9BQU87d0JBQUVhLEtBQUtQLE1BQU1NLElBQUk7d0JBQUVFLEtBQUs7d0JBQVFQLFdBQVc7b0JBQU87b0JBQUlQLHVEQUFJQSxDQUFDLE1BQU07d0JBQUVRLFVBQVU7b0JBQW1CO29CQUFJUix1REFBSUEsQ0FBQyxLQUFLO3dCQUFFUSxVQUFVO29CQUFzRDtvQkFBSVIsdURBQUlBLENBQUMsS0FBSzt3QkFBRVEsVUFBVVIsdURBQUlBLENBQUMsS0FBSzs0QkFBRU8sV0FBVzs0QkFBUVEsTUFBTVYsSUFBSVcsTUFBTTs0QkFBRVIsVUFBVUgsSUFBSVksSUFBSTt3QkFBQztvQkFBRztpQkFBRztZQUFDO1NBQUc7SUFBQztBQUN2WCIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi9wYWdlcy92ZXJpZnktcmVxdWVzdC5qcz82NmQwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGpzeCBhcyBfanN4LCBqc3hzIGFzIF9qc3hzIH0gZnJvbSBcInByZWFjdC9qc3gtcnVudGltZVwiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gVmVyaWZ5UmVxdWVzdFBhZ2UocHJvcHMpIHtcbiAgICBjb25zdCB7IHVybCwgdGhlbWUgfSA9IHByb3BzO1xuICAgIHJldHVybiAoX2pzeHMoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwidmVyaWZ5LXJlcXVlc3RcIiwgY2hpbGRyZW46IFt0aGVtZS5icmFuZENvbG9yICYmIChfanN4KFwic3R5bGVcIiwgeyBkYW5nZXJvdXNseVNldElubmVySFRNTDoge1xuICAgICAgICAgICAgICAgICAgICBfX2h0bWw6IGBcbiAgICAgICAgOnJvb3Qge1xuICAgICAgICAgIC0tYnJhbmQtY29sb3I6ICR7dGhlbWUuYnJhbmRDb2xvcn1cbiAgICAgICAgfVxuICAgICAgYCxcbiAgICAgICAgICAgICAgICB9IH0pKSwgX2pzeHMoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwiY2FyZFwiLCBjaGlsZHJlbjogW3RoZW1lLmxvZ28gJiYgX2pzeChcImltZ1wiLCB7IHNyYzogdGhlbWUubG9nbywgYWx0OiBcIkxvZ29cIiwgY2xhc3NOYW1lOiBcImxvZ29cIiB9KSwgX2pzeChcImgxXCIsIHsgY2hpbGRyZW46IFwiQ2hlY2sgeW91ciBlbWFpbFwiIH0pLCBfanN4KFwicFwiLCB7IGNoaWxkcmVuOiBcIkEgc2lnbiBpbiBsaW5rIGhhcyBiZWVuIHNlbnQgdG8geW91ciBlbWFpbCBhZGRyZXNzLlwiIH0pLCBfanN4KFwicFwiLCB7IGNoaWxkcmVuOiBfanN4KFwiYVwiLCB7IGNsYXNzTmFtZTogXCJzaXRlXCIsIGhyZWY6IHVybC5vcmlnaW4sIGNoaWxkcmVuOiB1cmwuaG9zdCB9KSB9KV0gfSldIH0pKTtcbn1cbiJdLCJuYW1lcyI6WyJqc3giLCJfanN4IiwianN4cyIsIl9qc3hzIiwiVmVyaWZ5UmVxdWVzdFBhZ2UiLCJwcm9wcyIsInVybCIsInRoZW1lIiwiY2xhc3NOYW1lIiwiY2hpbGRyZW4iLCJicmFuZENvbG9yIiwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwiLCJfX2h0bWwiLCJsb2dvIiwic3JjIiwiYWx0IiwiaHJlZiIsIm9yaWdpbiIsImhvc3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@auth/core/lib/pages/verify-request.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@auth/core/lib/utils/assert.js":
/*!*****************************************************!*\
  !*** ./node_modules/@auth/core/lib/utils/assert.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertConfig: () => (/* binding */ assertConfig)\n/* harmony export */ });\n/* harmony import */ var _cookie_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cookie.js */ \"(rsc)/./node_modules/@auth/core/lib/utils/cookie.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../errors.js */ \"(rsc)/./node_modules/@auth/core/errors.js\");\n\n\nlet warned = false;\nfunction isValidHttpUrl(url, baseUrl) {\n    try {\n        return /^https?:/.test(new URL(url, url.startsWith(\"/\") ? baseUrl : undefined).protocol);\n    } catch  {\n        return false;\n    }\n}\nlet hasCredentials = false;\nlet hasEmail = false;\nconst emailMethods = [\n    \"createVerificationToken\",\n    \"useVerificationToken\",\n    \"getUserByEmail\"\n];\nconst sessionMethods = [\n    \"createUser\",\n    \"getUser\",\n    \"getUserByEmail\",\n    \"getUserByAccount\",\n    \"updateUser\",\n    \"linkAccount\",\n    \"createSession\",\n    \"getSessionAndUser\",\n    \"updateSession\",\n    \"deleteSession\"\n];\n/**\n * Verify that the user configured Auth.js correctly.\n * Good place to mention deprecations as well.\n *\n * This is invoked before the init method, so default values are not available yet.\n */ function assertConfig(request, options) {\n    const { url } = request;\n    const warnings = [];\n    if (!warned && options.debug) warnings.push(\"debug-enabled\");\n    if (!options.trustHost) {\n        return new _errors_js__WEBPACK_IMPORTED_MODULE_1__.UntrustedHost(`Host must be trusted. URL was: ${request.url}`);\n    }\n    if (!options.secret) {\n        return new _errors_js__WEBPACK_IMPORTED_MODULE_1__.MissingSecret(\"Please define a `secret`.\");\n    }\n    const callbackUrlParam = request.query?.callbackUrl;\n    if (callbackUrlParam && !isValidHttpUrl(callbackUrlParam, url.origin)) {\n        return new _errors_js__WEBPACK_IMPORTED_MODULE_1__.InvalidCallbackUrl(`Invalid callback URL. Received: ${callbackUrlParam}`);\n    }\n    const { callbackUrl: defaultCallbackUrl } = (0,_cookie_js__WEBPACK_IMPORTED_MODULE_0__.defaultCookies)(options.useSecureCookies ?? url.protocol === \"https:\");\n    const callbackUrlCookie = request.cookies?.[options.cookies?.callbackUrl?.name ?? defaultCallbackUrl.name];\n    if (callbackUrlCookie && !isValidHttpUrl(callbackUrlCookie, url.origin)) {\n        return new _errors_js__WEBPACK_IMPORTED_MODULE_1__.InvalidCallbackUrl(`Invalid callback URL. Received: ${callbackUrlCookie}`);\n    }\n    for (const p of options.providers){\n        const provider = typeof p === \"function\" ? p() : p;\n        if ((provider.type === \"oauth\" || provider.type === \"oidc\") && !(provider.issuer ?? provider.options?.issuer)) {\n            const { authorization: a, token: t, userinfo: u } = provider;\n            let key;\n            if (typeof a !== \"string\" && !a?.url) key = \"authorization\";\n            else if (typeof t !== \"string\" && !t?.url) key = \"token\";\n            else if (typeof u !== \"string\" && !u?.url) key = \"userinfo\";\n            if (key) {\n                return new _errors_js__WEBPACK_IMPORTED_MODULE_1__.InvalidEndpoints(`Provider \"${provider.id}\" is missing both \\`issuer\\` and \\`${key}\\` endpoint config. At least one of them is required.`);\n            }\n        }\n        if (provider.type === \"credentials\") hasCredentials = true;\n        else if (provider.type === \"email\") hasEmail = true;\n    }\n    if (hasCredentials) {\n        const dbStrategy = options.session?.strategy === \"database\";\n        const onlyCredentials = !options.providers.some((p)=>(typeof p === \"function\" ? p() : p).type !== \"credentials\");\n        if (dbStrategy && onlyCredentials) {\n            return new _errors_js__WEBPACK_IMPORTED_MODULE_1__.UnsupportedStrategy(\"Signing in with credentials only supported if JWT strategy is enabled\");\n        }\n        const credentialsNoAuthorize = options.providers.some((p)=>{\n            const provider = typeof p === \"function\" ? p() : p;\n            return provider.type === \"credentials\" && !provider.authorize;\n        });\n        if (credentialsNoAuthorize) {\n            return new _errors_js__WEBPACK_IMPORTED_MODULE_1__.MissingAuthorize(\"Must define an authorize() handler to use credentials authentication provider\");\n        }\n    }\n    const { adapter, session } = options;\n    if (hasEmail || session?.strategy === \"database\" || !session?.strategy && adapter) {\n        let methods;\n        if (hasEmail) {\n            if (!adapter) return new _errors_js__WEBPACK_IMPORTED_MODULE_1__.MissingAdapter(\"Email login requires an adapter.\");\n            methods = emailMethods;\n        } else {\n            if (!adapter) return new _errors_js__WEBPACK_IMPORTED_MODULE_1__.MissingAdapter(\"Database session requires an adapter.\");\n            methods = sessionMethods;\n        }\n        const missing = methods.filter((m)=>!adapter[m]);\n        if (missing.length) {\n            return new _errors_js__WEBPACK_IMPORTED_MODULE_1__.MissingAdapterMethods(`Required adapter methods were missing: ${missing.join(\", \")}`);\n        }\n    }\n    if (!warned) warned = true;\n    return warnings;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@auth/core/lib/utils/assert.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@auth/core/lib/utils/callback-url.js":
/*!***********************************************************!*\
  !*** ./node_modules/@auth/core/lib/utils/callback-url.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createCallbackUrl: () => (/* binding */ createCallbackUrl)\n/* harmony export */ });\n/**\n * Get callback URL based on query param / cookie + validation,\n * and add it to `req.options.callbackUrl`.\n */ async function createCallbackUrl({ options, paramValue, cookieValue }) {\n    const { url, callbacks } = options;\n    let callbackUrl = url.origin;\n    if (paramValue) {\n        // If callbackUrl form field or query parameter is passed try to use it if allowed\n        callbackUrl = await callbacks.redirect({\n            url: paramValue,\n            baseUrl: url.origin\n        });\n    } else if (cookieValue) {\n        // If no callbackUrl specified, try using the value from the cookie if allowed\n        callbackUrl = await callbacks.redirect({\n            url: cookieValue,\n            baseUrl: url.origin\n        });\n    }\n    return {\n        callbackUrl,\n        // Save callback URL in a cookie so that it can be used for subsequent requests in signin/signout/callback flow\n        callbackUrlCookie: callbackUrl !== cookieValue ? callbackUrl : undefined\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF1dGgvY29yZS9saWIvdXRpbHMvY2FsbGJhY2stdXJsLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7O0NBR0MsR0FDTSxlQUFlQSxrQkFBa0IsRUFBRUMsT0FBTyxFQUFFQyxVQUFVLEVBQUVDLFdBQVcsRUFBRztJQUN6RSxNQUFNLEVBQUVDLEdBQUcsRUFBRUMsU0FBUyxFQUFFLEdBQUdKO0lBQzNCLElBQUlLLGNBQWNGLElBQUlHLE1BQU07SUFDNUIsSUFBSUwsWUFBWTtRQUNaLGtGQUFrRjtRQUNsRkksY0FBYyxNQUFNRCxVQUFVRyxRQUFRLENBQUM7WUFDbkNKLEtBQUtGO1lBQ0xPLFNBQVNMLElBQUlHLE1BQU07UUFDdkI7SUFDSixPQUNLLElBQUlKLGFBQWE7UUFDbEIsOEVBQThFO1FBQzlFRyxjQUFjLE1BQU1ELFVBQVVHLFFBQVEsQ0FBQztZQUNuQ0osS0FBS0Q7WUFDTE0sU0FBU0wsSUFBSUcsTUFBTTtRQUN2QjtJQUNKO0lBQ0EsT0FBTztRQUNIRDtRQUNBLCtHQUErRztRQUMvR0ksbUJBQW1CSixnQkFBZ0JILGNBQWNHLGNBQWNLO0lBQ25FO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGF1dGgvY29yZS9saWIvdXRpbHMvY2FsbGJhY2stdXJsLmpzPzY2N2IiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBHZXQgY2FsbGJhY2sgVVJMIGJhc2VkIG9uIHF1ZXJ5IHBhcmFtIC8gY29va2llICsgdmFsaWRhdGlvbixcbiAqIGFuZCBhZGQgaXQgdG8gYHJlcS5vcHRpb25zLmNhbGxiYWNrVXJsYC5cbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGNyZWF0ZUNhbGxiYWNrVXJsKHsgb3B0aW9ucywgcGFyYW1WYWx1ZSwgY29va2llVmFsdWUsIH0pIHtcbiAgICBjb25zdCB7IHVybCwgY2FsbGJhY2tzIH0gPSBvcHRpb25zO1xuICAgIGxldCBjYWxsYmFja1VybCA9IHVybC5vcmlnaW47XG4gICAgaWYgKHBhcmFtVmFsdWUpIHtcbiAgICAgICAgLy8gSWYgY2FsbGJhY2tVcmwgZm9ybSBmaWVsZCBvciBxdWVyeSBwYXJhbWV0ZXIgaXMgcGFzc2VkIHRyeSB0byB1c2UgaXQgaWYgYWxsb3dlZFxuICAgICAgICBjYWxsYmFja1VybCA9IGF3YWl0IGNhbGxiYWNrcy5yZWRpcmVjdCh7XG4gICAgICAgICAgICB1cmw6IHBhcmFtVmFsdWUsXG4gICAgICAgICAgICBiYXNlVXJsOiB1cmwub3JpZ2luLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgZWxzZSBpZiAoY29va2llVmFsdWUpIHtcbiAgICAgICAgLy8gSWYgbm8gY2FsbGJhY2tVcmwgc3BlY2lmaWVkLCB0cnkgdXNpbmcgdGhlIHZhbHVlIGZyb20gdGhlIGNvb2tpZSBpZiBhbGxvd2VkXG4gICAgICAgIGNhbGxiYWNrVXJsID0gYXdhaXQgY2FsbGJhY2tzLnJlZGlyZWN0KHtcbiAgICAgICAgICAgIHVybDogY29va2llVmFsdWUsXG4gICAgICAgICAgICBiYXNlVXJsOiB1cmwub3JpZ2luLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgY2FsbGJhY2tVcmwsXG4gICAgICAgIC8vIFNhdmUgY2FsbGJhY2sgVVJMIGluIGEgY29va2llIHNvIHRoYXQgaXQgY2FuIGJlIHVzZWQgZm9yIHN1YnNlcXVlbnQgcmVxdWVzdHMgaW4gc2lnbmluL3NpZ25vdXQvY2FsbGJhY2sgZmxvd1xuICAgICAgICBjYWxsYmFja1VybENvb2tpZTogY2FsbGJhY2tVcmwgIT09IGNvb2tpZVZhbHVlID8gY2FsbGJhY2tVcmwgOiB1bmRlZmluZWQsXG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6WyJjcmVhdGVDYWxsYmFja1VybCIsIm9wdGlvbnMiLCJwYXJhbVZhbHVlIiwiY29va2llVmFsdWUiLCJ1cmwiLCJjYWxsYmFja3MiLCJjYWxsYmFja1VybCIsIm9yaWdpbiIsInJlZGlyZWN0IiwiYmFzZVVybCIsImNhbGxiYWNrVXJsQ29va2llIiwidW5kZWZpbmVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@auth/core/lib/utils/callback-url.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@auth/core/lib/utils/cookie.js":
/*!*****************************************************!*\
  !*** ./node_modules/@auth/core/lib/utils/cookie.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SessionStore: () => (/* binding */ SessionStore),\n/* harmony export */   defaultCookies: () => (/* binding */ defaultCookies)\n/* harmony export */ });\nvar __classPrivateFieldSet = undefined && undefined.__classPrivateFieldSet || function(receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = undefined && undefined.__classPrivateFieldGet || function(receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _SessionStore_instances, _SessionStore_chunks, _SessionStore_option, _SessionStore_logger, _SessionStore_chunk, _SessionStore_clean;\n// Uncomment to recalculate the estimated size\n// of an empty session cookie\n// import { serialize } from \"cookie\"\n// console.log(\n//   \"Cookie estimated to be \",\n//   serialize(`__Secure.authjs.session-token.0`, \"\", {\n//     expires: new Date(),\n//     httpOnly: true,\n//     maxAge: Number.MAX_SAFE_INTEGER,\n//     path: \"/\",\n//     sameSite: \"strict\",\n//     secure: true,\n//     domain: \"example.com\",\n//   }).length,\n//   \" bytes\"\n// )\nconst ALLOWED_COOKIE_SIZE = 4096;\n// Based on commented out section above\nconst ESTIMATED_EMPTY_COOKIE_SIZE = 160;\nconst CHUNK_SIZE = ALLOWED_COOKIE_SIZE - ESTIMATED_EMPTY_COOKIE_SIZE;\n/**\n * Use secure cookies if the site uses HTTPS\n * This being conditional allows cookies to work non-HTTPS development URLs\n * Honour secure cookie option, which sets 'secure' and also adds '__Secure-'\n * prefix, but enable them by default if the site URL is HTTPS; but not for\n * non-HTTPS URLs like http://localhost which are used in development).\n * For more on prefixes see https://googlechrome.github.io/samples/cookie-prefixes/\n *\n * @TODO Review cookie settings (names, options)\n */ function defaultCookies(useSecureCookies) {\n    const cookiePrefix = useSecureCookies ? \"__Secure-\" : \"\";\n    return {\n        // default cookie options\n        sessionToken: {\n            name: `${cookiePrefix}authjs.session-token`,\n            options: {\n                httpOnly: true,\n                sameSite: \"lax\",\n                path: \"/\",\n                secure: useSecureCookies\n            }\n        },\n        callbackUrl: {\n            name: `${cookiePrefix}authjs.callback-url`,\n            options: {\n                httpOnly: true,\n                sameSite: \"lax\",\n                path: \"/\",\n                secure: useSecureCookies\n            }\n        },\n        csrfToken: {\n            // Default to __Host- for CSRF token for additional protection if using useSecureCookies\n            // NB: The `__Host-` prefix is stricter than the `__Secure-` prefix.\n            name: `${useSecureCookies ? \"__Host-\" : \"\"}authjs.csrf-token`,\n            options: {\n                httpOnly: true,\n                sameSite: \"lax\",\n                path: \"/\",\n                secure: useSecureCookies\n            }\n        },\n        pkceCodeVerifier: {\n            name: `${cookiePrefix}authjs.pkce.code_verifier`,\n            options: {\n                httpOnly: true,\n                sameSite: \"lax\",\n                path: \"/\",\n                secure: useSecureCookies,\n                maxAge: 60 * 15\n            }\n        },\n        state: {\n            name: `${cookiePrefix}authjs.state`,\n            options: {\n                httpOnly: true,\n                sameSite: \"lax\",\n                path: \"/\",\n                secure: useSecureCookies,\n                maxAge: 60 * 15\n            }\n        },\n        nonce: {\n            name: `${cookiePrefix}authjs.nonce`,\n            options: {\n                httpOnly: true,\n                sameSite: \"lax\",\n                path: \"/\",\n                secure: useSecureCookies\n            }\n        }\n    };\n}\nclass SessionStore {\n    constructor(option, cookies, logger){\n        _SessionStore_instances.add(this);\n        _SessionStore_chunks.set(this, {});\n        _SessionStore_option.set(this, void 0);\n        _SessionStore_logger.set(this, void 0);\n        __classPrivateFieldSet(this, _SessionStore_logger, logger, \"f\");\n        __classPrivateFieldSet(this, _SessionStore_option, option, \"f\");\n        if (!cookies) return;\n        const { name: sessionCookiePrefix } = option;\n        for (const [name, value] of Object.entries(cookies)){\n            if (!name.startsWith(sessionCookiePrefix) || !value) continue;\n            __classPrivateFieldGet(this, _SessionStore_chunks, \"f\")[name] = value;\n        }\n    }\n    /**\n     * The JWT Session or database Session ID\n     * constructed from the cookie chunks.\n     */ get value() {\n        // Sort the chunks by their keys before joining\n        const sortedKeys = Object.keys(__classPrivateFieldGet(this, _SessionStore_chunks, \"f\")).sort((a, b)=>{\n            const aSuffix = parseInt(a.split(\".\").pop() || \"0\");\n            const bSuffix = parseInt(b.split(\".\").pop() || \"0\");\n            return aSuffix - bSuffix;\n        });\n        // Use the sorted keys to join the chunks in the correct order\n        return sortedKeys.map((key)=>__classPrivateFieldGet(this, _SessionStore_chunks, \"f\")[key]).join(\"\");\n    }\n    /**\n     * Given a cookie value, return new cookies, chunked, to fit the allowed cookie size.\n     * If the cookie has changed from chunked to unchunked or vice versa,\n     * it deletes the old cookies as well.\n     */ chunk(value, options) {\n        // Assume all cookies should be cleaned by default\n        const cookies = __classPrivateFieldGet(this, _SessionStore_instances, \"m\", _SessionStore_clean).call(this);\n        // Calculate new chunks\n        const chunked = __classPrivateFieldGet(this, _SessionStore_instances, \"m\", _SessionStore_chunk).call(this, {\n            name: __classPrivateFieldGet(this, _SessionStore_option, \"f\").name,\n            value,\n            options: {\n                ...__classPrivateFieldGet(this, _SessionStore_option, \"f\").options,\n                ...options\n            }\n        });\n        // Update stored chunks / cookies\n        for (const chunk of chunked){\n            cookies[chunk.name] = chunk;\n        }\n        return Object.values(cookies);\n    }\n    /** Returns a list of cookies that should be cleaned. */ clean() {\n        return Object.values(__classPrivateFieldGet(this, _SessionStore_instances, \"m\", _SessionStore_clean).call(this));\n    }\n}\n_SessionStore_chunks = new WeakMap(), _SessionStore_option = new WeakMap(), _SessionStore_logger = new WeakMap(), _SessionStore_instances = new WeakSet(), _SessionStore_chunk = function _SessionStore_chunk(cookie) {\n    const chunkCount = Math.ceil(cookie.value.length / CHUNK_SIZE);\n    if (chunkCount === 1) {\n        __classPrivateFieldGet(this, _SessionStore_chunks, \"f\")[cookie.name] = cookie.value;\n        return [\n            cookie\n        ];\n    }\n    const cookies = [];\n    for(let i = 0; i < chunkCount; i++){\n        const name = `${cookie.name}.${i}`;\n        const value = cookie.value.substr(i * CHUNK_SIZE, CHUNK_SIZE);\n        cookies.push({\n            ...cookie,\n            name,\n            value\n        });\n        __classPrivateFieldGet(this, _SessionStore_chunks, \"f\")[name] = value;\n    }\n    __classPrivateFieldGet(this, _SessionStore_logger, \"f\").debug(\"CHUNKING_SESSION_COOKIE\", {\n        message: `Session cookie exceeds allowed ${ALLOWED_COOKIE_SIZE} bytes.`,\n        emptyCookieSize: ESTIMATED_EMPTY_COOKIE_SIZE,\n        valueSize: cookie.value.length,\n        chunks: cookies.map((c)=>c.value.length + ESTIMATED_EMPTY_COOKIE_SIZE)\n    });\n    return cookies;\n}, _SessionStore_clean = function _SessionStore_clean() {\n    const cleanedChunks = {};\n    for(const name in __classPrivateFieldGet(this, _SessionStore_chunks, \"f\")){\n        delete __classPrivateFieldGet(this, _SessionStore_chunks, \"f\")?.[name];\n        cleanedChunks[name] = {\n            name,\n            value: \"\",\n            options: {\n                ...__classPrivateFieldGet(this, _SessionStore_option, \"f\").options,\n                maxAge: 0\n            }\n        };\n    }\n    return cleanedChunks;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@auth/core/lib/utils/cookie.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@auth/core/lib/utils/date.js":
/*!***************************************************!*\
  !*** ./node_modules/@auth/core/lib/utils/date.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromDate: () => (/* binding */ fromDate)\n/* harmony export */ });\n/**\n * Takes a number in seconds and returns the date in the future.\n * Optionally takes a second date parameter. In that case\n * the date in the future will be calculated from that date instead of now.\n */ function fromDate(time, date = Date.now()) {\n    return new Date(date + time * 1000);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF1dGgvY29yZS9saWIvdXRpbHMvZGF0ZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7Ozs7Q0FJQyxHQUNNLFNBQVNBLFNBQVNDLElBQUksRUFBRUMsT0FBT0MsS0FBS0MsR0FBRyxFQUFFO0lBQzVDLE9BQU8sSUFBSUQsS0FBS0QsT0FBT0QsT0FBTztBQUNsQyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi91dGlscy9kYXRlLmpzPzlkOTMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUYWtlcyBhIG51bWJlciBpbiBzZWNvbmRzIGFuZCByZXR1cm5zIHRoZSBkYXRlIGluIHRoZSBmdXR1cmUuXG4gKiBPcHRpb25hbGx5IHRha2VzIGEgc2Vjb25kIGRhdGUgcGFyYW1ldGVyLiBJbiB0aGF0IGNhc2VcbiAqIHRoZSBkYXRlIGluIHRoZSBmdXR1cmUgd2lsbCBiZSBjYWxjdWxhdGVkIGZyb20gdGhhdCBkYXRlIGluc3RlYWQgb2Ygbm93LlxuICovXG5leHBvcnQgZnVuY3Rpb24gZnJvbURhdGUodGltZSwgZGF0ZSA9IERhdGUubm93KCkpIHtcbiAgICByZXR1cm4gbmV3IERhdGUoZGF0ZSArIHRpbWUgKiAxMDAwKTtcbn1cbiJdLCJuYW1lcyI6WyJmcm9tRGF0ZSIsInRpbWUiLCJkYXRlIiwiRGF0ZSIsIm5vdyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@auth/core/lib/utils/date.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@auth/core/lib/utils/logger.js":
/*!*****************************************************!*\
  !*** ./node_modules/@auth/core/lib/utils/logger.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   logger: () => (/* binding */ logger),\n/* harmony export */   setLogger: () => (/* binding */ setLogger)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors.js */ \"(rsc)/./node_modules/@auth/core/errors.js\");\n\nconst red = \"\\x1b[31m\";\nconst yellow = \"\\x1b[33m\";\nconst grey = \"\\x1b[90m\";\nconst reset = \"\\x1b[0m\";\nconst logger = {\n    error (error) {\n        const name = error instanceof _errors_js__WEBPACK_IMPORTED_MODULE_0__.AuthError ? error.type : error.name;\n        console.error(`${red}[auth][error]${reset} ${name}: ${error.message}`);\n        if (error.cause && typeof error.cause === \"object\" && \"err\" in error.cause && error.cause.err instanceof Error) {\n            const { err, ...data } = error.cause;\n            console.error(`${red}[auth][cause]${reset}:`, err.stack);\n            if (data) console.error(`${red}[auth][details]${reset}:`, JSON.stringify(data, null, 2));\n        } else if (error.stack) {\n            console.error(error.stack.replace(/.*/, \"\").substring(1));\n        }\n    },\n    warn (code) {\n        const url = `https://warnings.authjs.dev#${code}`;\n        console.warn(`${yellow}[auth][warn][${code}]${reset}`, `Read more: ${url}`);\n    },\n    debug (message, metadata) {\n        console.log(`${grey}[auth][debug]:${reset} ${message}`, JSON.stringify(metadata, null, 2));\n    }\n};\n/**\n * Override the built-in logger with user's implementation.\n * Any `undefined` level will use the default logger.\n */ function setLogger(newLogger = {}, debug) {\n    // Turn off debug logging if `debug` isn't set to `true`\n    if (!debug) logger.debug = ()=>{};\n    if (newLogger.error) logger.error = newLogger.error;\n    if (newLogger.warn) logger.warn = newLogger.warn;\n    if (newLogger.debug) logger.debug = newLogger.debug;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF1dGgvY29yZS9saWIvdXRpbHMvbG9nZ2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE0QztBQUM1QyxNQUFNQyxNQUFNO0FBQ1osTUFBTUMsU0FBUztBQUNmLE1BQU1DLE9BQU87QUFDYixNQUFNQyxRQUFRO0FBQ1AsTUFBTUMsU0FBUztJQUNsQkMsT0FBTUEsS0FBSztRQUNQLE1BQU1DLE9BQU9ELGlCQUFpQk4saURBQVNBLEdBQUdNLE1BQU1FLElBQUksR0FBR0YsTUFBTUMsSUFBSTtRQUNqRUUsUUFBUUgsS0FBSyxDQUFDLENBQUMsRUFBRUwsSUFBSSxhQUFhLEVBQUVHLE1BQU0sQ0FBQyxFQUFFRyxLQUFLLEVBQUUsRUFBRUQsTUFBTUksT0FBTyxDQUFDLENBQUM7UUFDckUsSUFBSUosTUFBTUssS0FBSyxJQUNYLE9BQU9MLE1BQU1LLEtBQUssS0FBSyxZQUN2QixTQUFTTCxNQUFNSyxLQUFLLElBQ3BCTCxNQUFNSyxLQUFLLENBQUNDLEdBQUcsWUFBWUMsT0FBTztZQUNsQyxNQUFNLEVBQUVELEdBQUcsRUFBRSxHQUFHRSxNQUFNLEdBQUdSLE1BQU1LLEtBQUs7WUFDcENGLFFBQVFILEtBQUssQ0FBQyxDQUFDLEVBQUVMLElBQUksYUFBYSxFQUFFRyxNQUFNLENBQUMsQ0FBQyxFQUFFUSxJQUFJRyxLQUFLO1lBQ3ZELElBQUlELE1BQ0FMLFFBQVFILEtBQUssQ0FBQyxDQUFDLEVBQUVMLElBQUksZUFBZSxFQUFFRyxNQUFNLENBQUMsQ0FBQyxFQUFFWSxLQUFLQyxTQUFTLENBQUNILE1BQU0sTUFBTTtRQUNuRixPQUNLLElBQUlSLE1BQU1TLEtBQUssRUFBRTtZQUNsQk4sUUFBUUgsS0FBSyxDQUFDQSxNQUFNUyxLQUFLLENBQUNHLE9BQU8sQ0FBQyxNQUFNLElBQUlDLFNBQVMsQ0FBQztRQUMxRDtJQUNKO0lBQ0FDLE1BQUtDLElBQUk7UUFDTCxNQUFNQyxNQUFNLENBQUMsNEJBQTRCLEVBQUVELEtBQUssQ0FBQztRQUNqRFosUUFBUVcsSUFBSSxDQUFDLENBQUMsRUFBRWxCLE9BQU8sYUFBYSxFQUFFbUIsS0FBSyxDQUFDLEVBQUVqQixNQUFNLENBQUMsRUFBRSxDQUFDLFdBQVcsRUFBRWtCLElBQUksQ0FBQztJQUM5RTtJQUNBQyxPQUFNYixPQUFPLEVBQUVjLFFBQVE7UUFDbkJmLFFBQVFnQixHQUFHLENBQUMsQ0FBQyxFQUFFdEIsS0FBSyxjQUFjLEVBQUVDLE1BQU0sQ0FBQyxFQUFFTSxRQUFRLENBQUMsRUFBRU0sS0FBS0MsU0FBUyxDQUFDTyxVQUFVLE1BQU07SUFDM0Y7QUFDSixFQUFFO0FBQ0Y7OztDQUdDLEdBQ00sU0FBU0UsVUFBVUMsWUFBWSxDQUFDLENBQUMsRUFBRUosS0FBSztJQUMzQyx3REFBd0Q7SUFDeEQsSUFBSSxDQUFDQSxPQUNEbEIsT0FBT2tCLEtBQUssR0FBRyxLQUFRO0lBQzNCLElBQUlJLFVBQVVyQixLQUFLLEVBQ2ZELE9BQU9DLEtBQUssR0FBR3FCLFVBQVVyQixLQUFLO0lBQ2xDLElBQUlxQixVQUFVUCxJQUFJLEVBQ2RmLE9BQU9lLElBQUksR0FBR08sVUFBVVAsSUFBSTtJQUNoQyxJQUFJTyxVQUFVSixLQUFLLEVBQ2ZsQixPQUFPa0IsS0FBSyxHQUFHSSxVQUFVSixLQUFLO0FBQ3RDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BhdXRoL2NvcmUvbGliL3V0aWxzL2xvZ2dlci5qcz9kOTRiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEF1dGhFcnJvciB9IGZyb20gXCIuLi8uLi9lcnJvcnMuanNcIjtcbmNvbnN0IHJlZCA9IFwiXFx4MWJbMzFtXCI7XG5jb25zdCB5ZWxsb3cgPSBcIlxceDFiWzMzbVwiO1xuY29uc3QgZ3JleSA9IFwiXFx4MWJbOTBtXCI7XG5jb25zdCByZXNldCA9IFwiXFx4MWJbMG1cIjtcbmV4cG9ydCBjb25zdCBsb2dnZXIgPSB7XG4gICAgZXJyb3IoZXJyb3IpIHtcbiAgICAgICAgY29uc3QgbmFtZSA9IGVycm9yIGluc3RhbmNlb2YgQXV0aEVycm9yID8gZXJyb3IudHlwZSA6IGVycm9yLm5hbWU7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoYCR7cmVkfVthdXRoXVtlcnJvcl0ke3Jlc2V0fSAke25hbWV9OiAke2Vycm9yLm1lc3NhZ2V9YCk7XG4gICAgICAgIGlmIChlcnJvci5jYXVzZSAmJlxuICAgICAgICAgICAgdHlwZW9mIGVycm9yLmNhdXNlID09PSBcIm9iamVjdFwiICYmXG4gICAgICAgICAgICBcImVyclwiIGluIGVycm9yLmNhdXNlICYmXG4gICAgICAgICAgICBlcnJvci5jYXVzZS5lcnIgaW5zdGFuY2VvZiBFcnJvcikge1xuICAgICAgICAgICAgY29uc3QgeyBlcnIsIC4uLmRhdGEgfSA9IGVycm9yLmNhdXNlO1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihgJHtyZWR9W2F1dGhdW2NhdXNlXSR7cmVzZXR9OmAsIGVyci5zdGFjayk7XG4gICAgICAgICAgICBpZiAoZGF0YSlcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGAke3JlZH1bYXV0aF1bZGV0YWlsc10ke3Jlc2V0fTpgLCBKU09OLnN0cmluZ2lmeShkYXRhLCBudWxsLCAyKSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoZXJyb3Iuc3RhY2spIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3Iuc3RhY2sucmVwbGFjZSgvLiovLCBcIlwiKS5zdWJzdHJpbmcoMSkpO1xuICAgICAgICB9XG4gICAgfSxcbiAgICB3YXJuKGNvZGUpIHtcbiAgICAgICAgY29uc3QgdXJsID0gYGh0dHBzOi8vd2FybmluZ3MuYXV0aGpzLmRldiMke2NvZGV9YDtcbiAgICAgICAgY29uc29sZS53YXJuKGAke3llbGxvd31bYXV0aF1bd2Fybl1bJHtjb2RlfV0ke3Jlc2V0fWAsIGBSZWFkIG1vcmU6ICR7dXJsfWApO1xuICAgIH0sXG4gICAgZGVidWcobWVzc2FnZSwgbWV0YWRhdGEpIHtcbiAgICAgICAgY29uc29sZS5sb2coYCR7Z3JleX1bYXV0aF1bZGVidWddOiR7cmVzZXR9ICR7bWVzc2FnZX1gLCBKU09OLnN0cmluZ2lmeShtZXRhZGF0YSwgbnVsbCwgMikpO1xuICAgIH0sXG59O1xuLyoqXG4gKiBPdmVycmlkZSB0aGUgYnVpbHQtaW4gbG9nZ2VyIHdpdGggdXNlcidzIGltcGxlbWVudGF0aW9uLlxuICogQW55IGB1bmRlZmluZWRgIGxldmVsIHdpbGwgdXNlIHRoZSBkZWZhdWx0IGxvZ2dlci5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNldExvZ2dlcihuZXdMb2dnZXIgPSB7fSwgZGVidWcpIHtcbiAgICAvLyBUdXJuIG9mZiBkZWJ1ZyBsb2dnaW5nIGlmIGBkZWJ1Z2AgaXNuJ3Qgc2V0IHRvIGB0cnVlYFxuICAgIGlmICghZGVidWcpXG4gICAgICAgIGxvZ2dlci5kZWJ1ZyA9ICgpID0+IHsgfTtcbiAgICBpZiAobmV3TG9nZ2VyLmVycm9yKVxuICAgICAgICBsb2dnZXIuZXJyb3IgPSBuZXdMb2dnZXIuZXJyb3I7XG4gICAgaWYgKG5ld0xvZ2dlci53YXJuKVxuICAgICAgICBsb2dnZXIud2FybiA9IG5ld0xvZ2dlci53YXJuO1xuICAgIGlmIChuZXdMb2dnZXIuZGVidWcpXG4gICAgICAgIGxvZ2dlci5kZWJ1ZyA9IG5ld0xvZ2dlci5kZWJ1Zztcbn1cbiJdLCJuYW1lcyI6WyJBdXRoRXJyb3IiLCJyZWQiLCJ5ZWxsb3ciLCJncmV5IiwicmVzZXQiLCJsb2dnZXIiLCJlcnJvciIsIm5hbWUiLCJ0eXBlIiwiY29uc29sZSIsIm1lc3NhZ2UiLCJjYXVzZSIsImVyciIsIkVycm9yIiwiZGF0YSIsInN0YWNrIiwiSlNPTiIsInN0cmluZ2lmeSIsInJlcGxhY2UiLCJzdWJzdHJpbmciLCJ3YXJuIiwiY29kZSIsInVybCIsImRlYnVnIiwibWV0YWRhdGEiLCJsb2ciLCJzZXRMb2dnZXIiLCJuZXdMb2dnZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@auth/core/lib/utils/logger.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@auth/core/lib/utils/merge.js":
/*!****************************************************!*\
  !*** ./node_modules/@auth/core/lib/utils/merge.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   merge: () => (/* binding */ merge)\n/* harmony export */ });\n// Source: https://stackoverflow.com/a/34749873/5364135\n/** Simple object check */ function isObject(item) {\n    return item && typeof item === \"object\" && !Array.isArray(item);\n}\n/** Deep merge two objects */ function merge(target, ...sources) {\n    if (!sources.length) return target;\n    const source = sources.shift();\n    if (isObject(target) && isObject(source)) {\n        for(const key in source){\n            if (isObject(source[key])) {\n                if (!target[key]) Object.assign(target, {\n                    [key]: {}\n                });\n                merge(target[key], source[key]);\n            } else {\n                Object.assign(target, {\n                    [key]: source[key]\n                });\n            }\n        }\n    }\n    return merge(target, ...sources);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF1dGgvY29yZS9saWIvdXRpbHMvbWVyZ2UuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLHVEQUF1RDtBQUN2RCx3QkFBd0IsR0FDeEIsU0FBU0EsU0FBU0MsSUFBSTtJQUNsQixPQUFPQSxRQUFRLE9BQU9BLFNBQVMsWUFBWSxDQUFDQyxNQUFNQyxPQUFPLENBQUNGO0FBQzlEO0FBQ0EsMkJBQTJCLEdBQ3BCLFNBQVNHLE1BQU1DLE1BQU0sRUFBRSxHQUFHQyxPQUFPO0lBQ3BDLElBQUksQ0FBQ0EsUUFBUUMsTUFBTSxFQUNmLE9BQU9GO0lBQ1gsTUFBTUcsU0FBU0YsUUFBUUcsS0FBSztJQUM1QixJQUFJVCxTQUFTSyxXQUFXTCxTQUFTUSxTQUFTO1FBQ3RDLElBQUssTUFBTUUsT0FBT0YsT0FBUTtZQUN0QixJQUFJUixTQUFTUSxNQUFNLENBQUNFLElBQUksR0FBRztnQkFDdkIsSUFBSSxDQUFDTCxNQUFNLENBQUNLLElBQUksRUFDWkMsT0FBT0MsTUFBTSxDQUFDUCxRQUFRO29CQUFFLENBQUNLLElBQUksRUFBRSxDQUFDO2dCQUFFO2dCQUN0Q04sTUFBTUMsTUFBTSxDQUFDSyxJQUFJLEVBQUVGLE1BQU0sQ0FBQ0UsSUFBSTtZQUNsQyxPQUNLO2dCQUNEQyxPQUFPQyxNQUFNLENBQUNQLFFBQVE7b0JBQUUsQ0FBQ0ssSUFBSSxFQUFFRixNQUFNLENBQUNFLElBQUk7Z0JBQUM7WUFDL0M7UUFDSjtJQUNKO0lBQ0EsT0FBT04sTUFBTUMsV0FBV0M7QUFDNUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGF1dGgvY29yZS9saWIvdXRpbHMvbWVyZ2UuanM/OTI3YSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBTb3VyY2U6IGh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vYS8zNDc0OTg3My81MzY0MTM1XG4vKiogU2ltcGxlIG9iamVjdCBjaGVjayAqL1xuZnVuY3Rpb24gaXNPYmplY3QoaXRlbSkge1xuICAgIHJldHVybiBpdGVtICYmIHR5cGVvZiBpdGVtID09PSBcIm9iamVjdFwiICYmICFBcnJheS5pc0FycmF5KGl0ZW0pO1xufVxuLyoqIERlZXAgbWVyZ2UgdHdvIG9iamVjdHMgKi9cbmV4cG9ydCBmdW5jdGlvbiBtZXJnZSh0YXJnZXQsIC4uLnNvdXJjZXMpIHtcbiAgICBpZiAoIXNvdXJjZXMubGVuZ3RoKVxuICAgICAgICByZXR1cm4gdGFyZ2V0O1xuICAgIGNvbnN0IHNvdXJjZSA9IHNvdXJjZXMuc2hpZnQoKTtcbiAgICBpZiAoaXNPYmplY3QodGFyZ2V0KSAmJiBpc09iamVjdChzb3VyY2UpKSB7XG4gICAgICAgIGZvciAoY29uc3Qga2V5IGluIHNvdXJjZSkge1xuICAgICAgICAgICAgaWYgKGlzT2JqZWN0KHNvdXJjZVtrZXldKSkge1xuICAgICAgICAgICAgICAgIGlmICghdGFyZ2V0W2tleV0pXG4gICAgICAgICAgICAgICAgICAgIE9iamVjdC5hc3NpZ24odGFyZ2V0LCB7IFtrZXldOiB7fSB9KTtcbiAgICAgICAgICAgICAgICBtZXJnZSh0YXJnZXRba2V5XSwgc291cmNlW2tleV0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgT2JqZWN0LmFzc2lnbih0YXJnZXQsIHsgW2tleV06IHNvdXJjZVtrZXldIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBtZXJnZSh0YXJnZXQsIC4uLnNvdXJjZXMpO1xufVxuIl0sIm5hbWVzIjpbImlzT2JqZWN0IiwiaXRlbSIsIkFycmF5IiwiaXNBcnJheSIsIm1lcmdlIiwidGFyZ2V0Iiwic291cmNlcyIsImxlbmd0aCIsInNvdXJjZSIsInNoaWZ0Iiwia2V5IiwiT2JqZWN0IiwiYXNzaWduIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@auth/core/lib/utils/merge.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@auth/core/lib/utils/providers.js":
/*!********************************************************!*\
  !*** ./node_modules/@auth/core/lib/utils/providers.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ parseProviders)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors.js */ \"(rsc)/./node_modules/@auth/core/errors.js\");\n/* harmony import */ var _merge_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./merge.js */ \"(rsc)/./node_modules/@auth/core/lib/utils/merge.js\");\n\n\n/**\n * Adds `signinUrl` and `callbackUrl` to each provider\n * and deep merge user-defined options.\n */ function parseProviders(params) {\n    const { url, providerId, options } = params;\n    const providers = params.providers.map((p)=>{\n        const provider = typeof p === \"function\" ? p() : p;\n        const { options: userOptions, ...defaults } = provider;\n        const id = userOptions?.id ?? defaults.id;\n        const merged = (0,_merge_js__WEBPACK_IMPORTED_MODULE_1__.merge)(defaults, userOptions, {\n            signinUrl: `${url}/signin/${id}`,\n            callbackUrl: `${url}/callback/${id}`\n        });\n        if (provider.type === \"oauth\" || provider.type === \"oidc\") {\n            merged.redirectProxyUrl ?? (merged.redirectProxyUrl = options.redirectProxyUrl);\n            return normalizeOAuth(merged);\n        }\n        return merged;\n    });\n    return {\n        providers,\n        provider: providers.find(({ id })=>id === providerId)\n    };\n}\n// TODO: Also add discovery here, if some endpoints/config are missing.\n// We should return both a client and authorization server config.\nfunction normalizeOAuth(c) {\n    if (c.issuer) c.wellKnown ?? (c.wellKnown = `${c.issuer}/.well-known/openid-configuration`);\n    const authorization = normalizeEndpoint(c.authorization, c.issuer);\n    if (authorization && !authorization.url?.searchParams.has(\"scope\")) {\n        authorization.url.searchParams.set(\"scope\", \"openid profile email\");\n    }\n    const token = normalizeEndpoint(c.token, c.issuer);\n    const userinfo = normalizeEndpoint(c.userinfo, c.issuer);\n    const checks = c.checks ?? [\n        \"pkce\"\n    ];\n    if (c.redirectProxyUrl) {\n        if (!checks.includes(\"state\")) checks.push(\"state\");\n        c.redirectProxyUrl = `${c.redirectProxyUrl}/callback/${c.id}`;\n    }\n    return {\n        ...c,\n        authorization,\n        token,\n        checks,\n        userinfo,\n        profile: c.profile ?? defaultProfile,\n        account: c.account ?? defaultAccount\n    };\n}\n/**\n * Returns basic user profile from the userinfo response/`id_token` claims.\n * @see https://authjs.dev/reference/core/adapters#user\n * @see https://openid.net/specs/openid-connect-core-1_0.html#IDToken\n * @see https://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n */ const defaultProfile = (profile)=>{\n    const id = profile.sub ?? profile.id;\n    if (!id) throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.OAuthProfileParseError(\"Missing user id\");\n    return stripUndefined({\n        id: id.toString(),\n        name: profile.name ?? profile.nickname ?? profile.preferred_username,\n        email: profile.email,\n        image: profile.picture\n    });\n};\n/**\n * Returns basic OAuth/OIDC values from the token response.\n * @see https://www.ietf.org/rfc/rfc6749.html#section-5.1\n * @see https://openid.net/specs/openid-connect-core-1_0.html#TokenResponse\n * @see https://authjs.dev/reference/core/adapters#account\n */ const defaultAccount = (account)=>{\n    return stripUndefined({\n        access_token: account.access_token,\n        id_token: account.id_token,\n        refresh_token: account.refresh_token,\n        expires_at: account.expires_at,\n        scope: account.scope,\n        token_type: account.token_type,\n        session_state: account.session_state\n    });\n};\nfunction stripUndefined(o) {\n    const result = {};\n    for (let [k, v] of Object.entries(o))v !== undefined && (result[k] = v);\n    return result;\n}\nfunction normalizeEndpoint(e, issuer) {\n    if (!e && issuer) return;\n    if (typeof e === \"string\") {\n        return {\n            url: new URL(e)\n        };\n    }\n    // If e.url is undefined, it's because the provider config\n    // assumes that we will use the issuer endpoint.\n    // The existence of either e.url or provider.issuer is checked in\n    // assert.ts. We fallback to \"https://authjs.dev\" to be able to pass around\n    // a valid URL even if the user only provided params.\n    // NOTE: This need to be checked when constructing the URL\n    // for the authorization, token and userinfo endpoints.\n    const url = new URL(e?.url ?? \"https://authjs.dev\");\n    if (e?.params != null) {\n        for (let [key, value] of Object.entries(e.params)){\n            if (key === \"claims\") value = JSON.stringify(value);\n            url.searchParams.set(key, String(value));\n        }\n    }\n    return {\n        url,\n        request: e?.request,\n        conform: e?.conform\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF1dGgvY29yZS9saWIvdXRpbHMvcHJvdmlkZXJzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF5RDtBQUN0QjtBQUNuQzs7O0NBR0MsR0FDYyxTQUFTRSxlQUFlQyxNQUFNO0lBQ3pDLE1BQU0sRUFBRUMsR0FBRyxFQUFFQyxVQUFVLEVBQUVDLE9BQU8sRUFBRSxHQUFHSDtJQUNyQyxNQUFNSSxZQUFZSixPQUFPSSxTQUFTLENBQUNDLEdBQUcsQ0FBQyxDQUFDQztRQUNwQyxNQUFNQyxXQUFXLE9BQU9ELE1BQU0sYUFBYUEsTUFBTUE7UUFDakQsTUFBTSxFQUFFSCxTQUFTSyxXQUFXLEVBQUUsR0FBR0MsVUFBVSxHQUFHRjtRQUM5QyxNQUFNRyxLQUFNRixhQUFhRSxNQUFNRCxTQUFTQyxFQUFFO1FBQzFDLE1BQU1DLFNBQVNiLGdEQUFLQSxDQUFDVyxVQUFVRCxhQUFhO1lBQ3hDSSxXQUFXLENBQUMsRUFBRVgsSUFBSSxRQUFRLEVBQUVTLEdBQUcsQ0FBQztZQUNoQ0csYUFBYSxDQUFDLEVBQUVaLElBQUksVUFBVSxFQUFFUyxHQUFHLENBQUM7UUFDeEM7UUFDQSxJQUFJSCxTQUFTTyxJQUFJLEtBQUssV0FBV1AsU0FBU08sSUFBSSxLQUFLLFFBQVE7WUFDdkRILE9BQU9JLGdCQUFnQixJQUFLSixDQUFBQSxPQUFPSSxnQkFBZ0IsR0FBR1osUUFBUVksZ0JBQWdCO1lBQzlFLE9BQU9DLGVBQWVMO1FBQzFCO1FBQ0EsT0FBT0E7SUFDWDtJQUNBLE9BQU87UUFDSFA7UUFDQUcsVUFBVUgsVUFBVWEsSUFBSSxDQUFDLENBQUMsRUFBRVAsRUFBRSxFQUFFLEdBQUtBLE9BQU9SO0lBQ2hEO0FBQ0o7QUFDQSx1RUFBdUU7QUFDdkUsa0VBQWtFO0FBQ2xFLFNBQVNjLGVBQWVFLENBQUM7SUFDckIsSUFBSUEsRUFBRUMsTUFBTSxFQUNSRCxFQUFFRSxTQUFTLElBQUtGLENBQUFBLEVBQUVFLFNBQVMsR0FBRyxDQUFDLEVBQUVGLEVBQUVDLE1BQU0sQ0FBQyxpQ0FBaUMsQ0FBQztJQUNoRixNQUFNRSxnQkFBZ0JDLGtCQUFrQkosRUFBRUcsYUFBYSxFQUFFSCxFQUFFQyxNQUFNO0lBQ2pFLElBQUlFLGlCQUFpQixDQUFDQSxjQUFjcEIsR0FBRyxFQUFFc0IsYUFBYUMsSUFBSSxVQUFVO1FBQ2hFSCxjQUFjcEIsR0FBRyxDQUFDc0IsWUFBWSxDQUFDRSxHQUFHLENBQUMsU0FBUztJQUNoRDtJQUNBLE1BQU1DLFFBQVFKLGtCQUFrQkosRUFBRVEsS0FBSyxFQUFFUixFQUFFQyxNQUFNO0lBQ2pELE1BQU1RLFdBQVdMLGtCQUFrQkosRUFBRVMsUUFBUSxFQUFFVCxFQUFFQyxNQUFNO0lBQ3ZELE1BQU1TLFNBQVNWLEVBQUVVLE1BQU0sSUFBSTtRQUFDO0tBQU87SUFDbkMsSUFBSVYsRUFBRUgsZ0JBQWdCLEVBQUU7UUFDcEIsSUFBSSxDQUFDYSxPQUFPQyxRQUFRLENBQUMsVUFDakJELE9BQU9FLElBQUksQ0FBQztRQUNoQlosRUFBRUgsZ0JBQWdCLEdBQUcsQ0FBQyxFQUFFRyxFQUFFSCxnQkFBZ0IsQ0FBQyxVQUFVLEVBQUVHLEVBQUVSLEVBQUUsQ0FBQyxDQUFDO0lBQ2pFO0lBQ0EsT0FBTztRQUNILEdBQUdRLENBQUM7UUFDSkc7UUFDQUs7UUFDQUU7UUFDQUQ7UUFDQUksU0FBU2IsRUFBRWEsT0FBTyxJQUFJQztRQUN0QkMsU0FBU2YsRUFBRWUsT0FBTyxJQUFJQztJQUMxQjtBQUNKO0FBQ0E7Ozs7O0NBS0MsR0FDRCxNQUFNRixpQkFBaUIsQ0FBQ0Q7SUFDcEIsTUFBTXJCLEtBQUtxQixRQUFRSSxHQUFHLElBQUlKLFFBQVFyQixFQUFFO0lBQ3BDLElBQUksQ0FBQ0EsSUFDRCxNQUFNLElBQUliLDhEQUFzQkEsQ0FBQztJQUNyQyxPQUFPdUMsZUFBZTtRQUNsQjFCLElBQUlBLEdBQUcyQixRQUFRO1FBQ2ZDLE1BQU1QLFFBQVFPLElBQUksSUFBSVAsUUFBUVEsUUFBUSxJQUFJUixRQUFRUyxrQkFBa0I7UUFDcEVDLE9BQU9WLFFBQVFVLEtBQUs7UUFDcEJDLE9BQU9YLFFBQVFZLE9BQU87SUFDMUI7QUFDSjtBQUNBOzs7OztDQUtDLEdBQ0QsTUFBTVQsaUJBQWlCLENBQUNEO0lBQ3BCLE9BQU9HLGVBQWU7UUFDbEJRLGNBQWNYLFFBQVFXLFlBQVk7UUFDbENDLFVBQVVaLFFBQVFZLFFBQVE7UUFDMUJDLGVBQWViLFFBQVFhLGFBQWE7UUFDcENDLFlBQVlkLFFBQVFjLFVBQVU7UUFDOUJDLE9BQU9mLFFBQVFlLEtBQUs7UUFDcEJDLFlBQVloQixRQUFRZ0IsVUFBVTtRQUM5QkMsZUFBZWpCLFFBQVFpQixhQUFhO0lBQ3hDO0FBQ0o7QUFDQSxTQUFTZCxlQUFlZSxDQUFDO0lBQ3JCLE1BQU1DLFNBQVMsQ0FBQztJQUNoQixLQUFLLElBQUksQ0FBQ0MsR0FBR0MsRUFBRSxJQUFJQyxPQUFPQyxPQUFPLENBQUNMLEdBQzlCRyxNQUFNRyxhQUFjTCxDQUFBQSxNQUFNLENBQUNDLEVBQUUsR0FBR0MsQ0FBQUE7SUFDcEMsT0FBT0Y7QUFDWDtBQUNBLFNBQVM5QixrQkFBa0JvQyxDQUFDLEVBQUV2QyxNQUFNO0lBQ2hDLElBQUksQ0FBQ3VDLEtBQUt2QyxRQUNOO0lBQ0osSUFBSSxPQUFPdUMsTUFBTSxVQUFVO1FBQ3ZCLE9BQU87WUFBRXpELEtBQUssSUFBSTBELElBQUlEO1FBQUc7SUFDN0I7SUFDQSwwREFBMEQ7SUFDMUQsZ0RBQWdEO0lBQ2hELGlFQUFpRTtJQUNqRSwyRUFBMkU7SUFDM0UscURBQXFEO0lBQ3JELDBEQUEwRDtJQUMxRCx1REFBdUQ7SUFDdkQsTUFBTXpELE1BQU0sSUFBSTBELElBQUlELEdBQUd6RCxPQUFPO0lBQzlCLElBQUl5RCxHQUFHMUQsVUFBVSxNQUFNO1FBQ25CLEtBQUssSUFBSSxDQUFDNEQsS0FBS0MsTUFBTSxJQUFJTixPQUFPQyxPQUFPLENBQUNFLEVBQUUxRCxNQUFNLEVBQUc7WUFDL0MsSUFBSTRELFFBQVEsVUFDUkMsUUFBUUMsS0FBS0MsU0FBUyxDQUFDRjtZQUMzQjVELElBQUlzQixZQUFZLENBQUNFLEdBQUcsQ0FBQ21DLEtBQUtJLE9BQU9IO1FBQ3JDO0lBQ0o7SUFDQSxPQUFPO1FBQUU1RDtRQUFLZ0UsU0FBU1AsR0FBR087UUFBU0MsU0FBU1IsR0FBR1E7SUFBUTtBQUMzRCIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL2xpYi91dGlscy9wcm92aWRlcnMuanM/ZGRiZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPQXV0aFByb2ZpbGVQYXJzZUVycm9yIH0gZnJvbSBcIi4uLy4uL2Vycm9ycy5qc1wiO1xuaW1wb3J0IHsgbWVyZ2UgfSBmcm9tIFwiLi9tZXJnZS5qc1wiO1xuLyoqXG4gKiBBZGRzIGBzaWduaW5VcmxgIGFuZCBgY2FsbGJhY2tVcmxgIHRvIGVhY2ggcHJvdmlkZXJcbiAqIGFuZCBkZWVwIG1lcmdlIHVzZXItZGVmaW5lZCBvcHRpb25zLlxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBwYXJzZVByb3ZpZGVycyhwYXJhbXMpIHtcbiAgICBjb25zdCB7IHVybCwgcHJvdmlkZXJJZCwgb3B0aW9ucyB9ID0gcGFyYW1zO1xuICAgIGNvbnN0IHByb3ZpZGVycyA9IHBhcmFtcy5wcm92aWRlcnMubWFwKChwKSA9PiB7XG4gICAgICAgIGNvbnN0IHByb3ZpZGVyID0gdHlwZW9mIHAgPT09IFwiZnVuY3Rpb25cIiA/IHAoKSA6IHA7XG4gICAgICAgIGNvbnN0IHsgb3B0aW9uczogdXNlck9wdGlvbnMsIC4uLmRlZmF1bHRzIH0gPSBwcm92aWRlcjtcbiAgICAgICAgY29uc3QgaWQgPSAodXNlck9wdGlvbnM/LmlkID8/IGRlZmF1bHRzLmlkKTtcbiAgICAgICAgY29uc3QgbWVyZ2VkID0gbWVyZ2UoZGVmYXVsdHMsIHVzZXJPcHRpb25zLCB7XG4gICAgICAgICAgICBzaWduaW5Vcmw6IGAke3VybH0vc2lnbmluLyR7aWR9YCxcbiAgICAgICAgICAgIGNhbGxiYWNrVXJsOiBgJHt1cmx9L2NhbGxiYWNrLyR7aWR9YCxcbiAgICAgICAgfSk7XG4gICAgICAgIGlmIChwcm92aWRlci50eXBlID09PSBcIm9hdXRoXCIgfHwgcHJvdmlkZXIudHlwZSA9PT0gXCJvaWRjXCIpIHtcbiAgICAgICAgICAgIG1lcmdlZC5yZWRpcmVjdFByb3h5VXJsID8/IChtZXJnZWQucmVkaXJlY3RQcm94eVVybCA9IG9wdGlvbnMucmVkaXJlY3RQcm94eVVybCk7XG4gICAgICAgICAgICByZXR1cm4gbm9ybWFsaXplT0F1dGgobWVyZ2VkKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbWVyZ2VkO1xuICAgIH0pO1xuICAgIHJldHVybiB7XG4gICAgICAgIHByb3ZpZGVycyxcbiAgICAgICAgcHJvdmlkZXI6IHByb3ZpZGVycy5maW5kKCh7IGlkIH0pID0+IGlkID09PSBwcm92aWRlcklkKSxcbiAgICB9O1xufVxuLy8gVE9ETzogQWxzbyBhZGQgZGlzY292ZXJ5IGhlcmUsIGlmIHNvbWUgZW5kcG9pbnRzL2NvbmZpZyBhcmUgbWlzc2luZy5cbi8vIFdlIHNob3VsZCByZXR1cm4gYm90aCBhIGNsaWVudCBhbmQgYXV0aG9yaXphdGlvbiBzZXJ2ZXIgY29uZmlnLlxuZnVuY3Rpb24gbm9ybWFsaXplT0F1dGgoYykge1xuICAgIGlmIChjLmlzc3VlcilcbiAgICAgICAgYy53ZWxsS25vd24gPz8gKGMud2VsbEtub3duID0gYCR7Yy5pc3N1ZXJ9Ly53ZWxsLWtub3duL29wZW5pZC1jb25maWd1cmF0aW9uYCk7XG4gICAgY29uc3QgYXV0aG9yaXphdGlvbiA9IG5vcm1hbGl6ZUVuZHBvaW50KGMuYXV0aG9yaXphdGlvbiwgYy5pc3N1ZXIpO1xuICAgIGlmIChhdXRob3JpemF0aW9uICYmICFhdXRob3JpemF0aW9uLnVybD8uc2VhcmNoUGFyYW1zLmhhcyhcInNjb3BlXCIpKSB7XG4gICAgICAgIGF1dGhvcml6YXRpb24udXJsLnNlYXJjaFBhcmFtcy5zZXQoXCJzY29wZVwiLCBcIm9wZW5pZCBwcm9maWxlIGVtYWlsXCIpO1xuICAgIH1cbiAgICBjb25zdCB0b2tlbiA9IG5vcm1hbGl6ZUVuZHBvaW50KGMudG9rZW4sIGMuaXNzdWVyKTtcbiAgICBjb25zdCB1c2VyaW5mbyA9IG5vcm1hbGl6ZUVuZHBvaW50KGMudXNlcmluZm8sIGMuaXNzdWVyKTtcbiAgICBjb25zdCBjaGVja3MgPSBjLmNoZWNrcyA/PyBbXCJwa2NlXCJdO1xuICAgIGlmIChjLnJlZGlyZWN0UHJveHlVcmwpIHtcbiAgICAgICAgaWYgKCFjaGVja3MuaW5jbHVkZXMoXCJzdGF0ZVwiKSlcbiAgICAgICAgICAgIGNoZWNrcy5wdXNoKFwic3RhdGVcIik7XG4gICAgICAgIGMucmVkaXJlY3RQcm94eVVybCA9IGAke2MucmVkaXJlY3RQcm94eVVybH0vY2FsbGJhY2svJHtjLmlkfWA7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIC4uLmMsXG4gICAgICAgIGF1dGhvcml6YXRpb24sXG4gICAgICAgIHRva2VuLFxuICAgICAgICBjaGVja3MsXG4gICAgICAgIHVzZXJpbmZvLFxuICAgICAgICBwcm9maWxlOiBjLnByb2ZpbGUgPz8gZGVmYXVsdFByb2ZpbGUsXG4gICAgICAgIGFjY291bnQ6IGMuYWNjb3VudCA/PyBkZWZhdWx0QWNjb3VudCxcbiAgICB9O1xufVxuLyoqXG4gKiBSZXR1cm5zIGJhc2ljIHVzZXIgcHJvZmlsZSBmcm9tIHRoZSB1c2VyaW5mbyByZXNwb25zZS9gaWRfdG9rZW5gIGNsYWltcy5cbiAqIEBzZWUgaHR0cHM6Ly9hdXRoanMuZGV2L3JlZmVyZW5jZS9jb3JlL2FkYXB0ZXJzI3VzZXJcbiAqIEBzZWUgaHR0cHM6Ly9vcGVuaWQubmV0L3NwZWNzL29wZW5pZC1jb25uZWN0LWNvcmUtMV8wLmh0bWwjSURUb2tlblxuICogQHNlZSBodHRwczovL29wZW5pZC5uZXQvc3BlY3Mvb3BlbmlkLWNvbm5lY3QtY29yZS0xXzAuaHRtbCNVc2VySW5mb1xuICovXG5jb25zdCBkZWZhdWx0UHJvZmlsZSA9IChwcm9maWxlKSA9PiB7XG4gICAgY29uc3QgaWQgPSBwcm9maWxlLnN1YiA/PyBwcm9maWxlLmlkO1xuICAgIGlmICghaWQpXG4gICAgICAgIHRocm93IG5ldyBPQXV0aFByb2ZpbGVQYXJzZUVycm9yKFwiTWlzc2luZyB1c2VyIGlkXCIpO1xuICAgIHJldHVybiBzdHJpcFVuZGVmaW5lZCh7XG4gICAgICAgIGlkOiBpZC50b1N0cmluZygpLFxuICAgICAgICBuYW1lOiBwcm9maWxlLm5hbWUgPz8gcHJvZmlsZS5uaWNrbmFtZSA/PyBwcm9maWxlLnByZWZlcnJlZF91c2VybmFtZSxcbiAgICAgICAgZW1haWw6IHByb2ZpbGUuZW1haWwsXG4gICAgICAgIGltYWdlOiBwcm9maWxlLnBpY3R1cmUsXG4gICAgfSk7XG59O1xuLyoqXG4gKiBSZXR1cm5zIGJhc2ljIE9BdXRoL09JREMgdmFsdWVzIGZyb20gdGhlIHRva2VuIHJlc3BvbnNlLlxuICogQHNlZSBodHRwczovL3d3dy5pZXRmLm9yZy9yZmMvcmZjNjc0OS5odG1sI3NlY3Rpb24tNS4xXG4gKiBAc2VlIGh0dHBzOi8vb3BlbmlkLm5ldC9zcGVjcy9vcGVuaWQtY29ubmVjdC1jb3JlLTFfMC5odG1sI1Rva2VuUmVzcG9uc2VcbiAqIEBzZWUgaHR0cHM6Ly9hdXRoanMuZGV2L3JlZmVyZW5jZS9jb3JlL2FkYXB0ZXJzI2FjY291bnRcbiAqL1xuY29uc3QgZGVmYXVsdEFjY291bnQgPSAoYWNjb3VudCkgPT4ge1xuICAgIHJldHVybiBzdHJpcFVuZGVmaW5lZCh7XG4gICAgICAgIGFjY2Vzc190b2tlbjogYWNjb3VudC5hY2Nlc3NfdG9rZW4sXG4gICAgICAgIGlkX3Rva2VuOiBhY2NvdW50LmlkX3Rva2VuLFxuICAgICAgICByZWZyZXNoX3Rva2VuOiBhY2NvdW50LnJlZnJlc2hfdG9rZW4sXG4gICAgICAgIGV4cGlyZXNfYXQ6IGFjY291bnQuZXhwaXJlc19hdCxcbiAgICAgICAgc2NvcGU6IGFjY291bnQuc2NvcGUsXG4gICAgICAgIHRva2VuX3R5cGU6IGFjY291bnQudG9rZW5fdHlwZSxcbiAgICAgICAgc2Vzc2lvbl9zdGF0ZTogYWNjb3VudC5zZXNzaW9uX3N0YXRlLFxuICAgIH0pO1xufTtcbmZ1bmN0aW9uIHN0cmlwVW5kZWZpbmVkKG8pIHtcbiAgICBjb25zdCByZXN1bHQgPSB7fTtcbiAgICBmb3IgKGxldCBbaywgdl0gb2YgT2JqZWN0LmVudHJpZXMobykpXG4gICAgICAgIHYgIT09IHVuZGVmaW5lZCAmJiAocmVzdWx0W2tdID0gdik7XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIG5vcm1hbGl6ZUVuZHBvaW50KGUsIGlzc3Vlcikge1xuICAgIGlmICghZSAmJiBpc3N1ZXIpXG4gICAgICAgIHJldHVybjtcbiAgICBpZiAodHlwZW9mIGUgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgcmV0dXJuIHsgdXJsOiBuZXcgVVJMKGUpIH07XG4gICAgfVxuICAgIC8vIElmIGUudXJsIGlzIHVuZGVmaW5lZCwgaXQncyBiZWNhdXNlIHRoZSBwcm92aWRlciBjb25maWdcbiAgICAvLyBhc3N1bWVzIHRoYXQgd2Ugd2lsbCB1c2UgdGhlIGlzc3VlciBlbmRwb2ludC5cbiAgICAvLyBUaGUgZXhpc3RlbmNlIG9mIGVpdGhlciBlLnVybCBvciBwcm92aWRlci5pc3N1ZXIgaXMgY2hlY2tlZCBpblxuICAgIC8vIGFzc2VydC50cy4gV2UgZmFsbGJhY2sgdG8gXCJodHRwczovL2F1dGhqcy5kZXZcIiB0byBiZSBhYmxlIHRvIHBhc3MgYXJvdW5kXG4gICAgLy8gYSB2YWxpZCBVUkwgZXZlbiBpZiB0aGUgdXNlciBvbmx5IHByb3ZpZGVkIHBhcmFtcy5cbiAgICAvLyBOT1RFOiBUaGlzIG5lZWQgdG8gYmUgY2hlY2tlZCB3aGVuIGNvbnN0cnVjdGluZyB0aGUgVVJMXG4gICAgLy8gZm9yIHRoZSBhdXRob3JpemF0aW9uLCB0b2tlbiBhbmQgdXNlcmluZm8gZW5kcG9pbnRzLlxuICAgIGNvbnN0IHVybCA9IG5ldyBVUkwoZT8udXJsID8/IFwiaHR0cHM6Ly9hdXRoanMuZGV2XCIpO1xuICAgIGlmIChlPy5wYXJhbXMgIT0gbnVsbCkge1xuICAgICAgICBmb3IgKGxldCBba2V5LCB2YWx1ZV0gb2YgT2JqZWN0LmVudHJpZXMoZS5wYXJhbXMpKSB7XG4gICAgICAgICAgICBpZiAoa2V5ID09PSBcImNsYWltc1wiKVxuICAgICAgICAgICAgICAgIHZhbHVlID0gSlNPTi5zdHJpbmdpZnkodmFsdWUpO1xuICAgICAgICAgICAgdXJsLnNlYXJjaFBhcmFtcy5zZXQoa2V5LCBTdHJpbmcodmFsdWUpKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4geyB1cmwsIHJlcXVlc3Q6IGU/LnJlcXVlc3QsIGNvbmZvcm06IGU/LmNvbmZvcm0gfTtcbn1cbiJdLCJuYW1lcyI6WyJPQXV0aFByb2ZpbGVQYXJzZUVycm9yIiwibWVyZ2UiLCJwYXJzZVByb3ZpZGVycyIsInBhcmFtcyIsInVybCIsInByb3ZpZGVySWQiLCJvcHRpb25zIiwicHJvdmlkZXJzIiwibWFwIiwicCIsInByb3ZpZGVyIiwidXNlck9wdGlvbnMiLCJkZWZhdWx0cyIsImlkIiwibWVyZ2VkIiwic2lnbmluVXJsIiwiY2FsbGJhY2tVcmwiLCJ0eXBlIiwicmVkaXJlY3RQcm94eVVybCIsIm5vcm1hbGl6ZU9BdXRoIiwiZmluZCIsImMiLCJpc3N1ZXIiLCJ3ZWxsS25vd24iLCJhdXRob3JpemF0aW9uIiwibm9ybWFsaXplRW5kcG9pbnQiLCJzZWFyY2hQYXJhbXMiLCJoYXMiLCJzZXQiLCJ0b2tlbiIsInVzZXJpbmZvIiwiY2hlY2tzIiwiaW5jbHVkZXMiLCJwdXNoIiwicHJvZmlsZSIsImRlZmF1bHRQcm9maWxlIiwiYWNjb3VudCIsImRlZmF1bHRBY2NvdW50Iiwic3ViIiwic3RyaXBVbmRlZmluZWQiLCJ0b1N0cmluZyIsIm5hbWUiLCJuaWNrbmFtZSIsInByZWZlcnJlZF91c2VybmFtZSIsImVtYWlsIiwiaW1hZ2UiLCJwaWN0dXJlIiwiYWNjZXNzX3Rva2VuIiwiaWRfdG9rZW4iLCJyZWZyZXNoX3Rva2VuIiwiZXhwaXJlc19hdCIsInNjb3BlIiwidG9rZW5fdHlwZSIsInNlc3Npb25fc3RhdGUiLCJvIiwicmVzdWx0IiwiayIsInYiLCJPYmplY3QiLCJlbnRyaWVzIiwidW5kZWZpbmVkIiwiZSIsIlVSTCIsImtleSIsInZhbHVlIiwiSlNPTiIsInN0cmluZ2lmeSIsIlN0cmluZyIsInJlcXVlc3QiLCJjb25mb3JtIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@auth/core/lib/utils/providers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@auth/core/lib/utils/web.js":
/*!**************************************************!*\
  !*** ./node_modules/@auth/core/lib/utils/web.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createHash: () => (/* binding */ createHash),\n/* harmony export */   randomString: () => (/* binding */ randomString),\n/* harmony export */   toInternalRequest: () => (/* binding */ toInternalRequest),\n/* harmony export */   toRequest: () => (/* binding */ toRequest),\n/* harmony export */   toResponse: () => (/* binding */ toResponse)\n/* harmony export */ });\n/* harmony import */ var cookie__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cookie */ \"(rsc)/./node_modules/cookie/index.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../errors.js */ \"(rsc)/./node_modules/@auth/core/errors.js\");\n\n\nasync function getBody(req) {\n    if (!(\"body\" in req) || !req.body || req.method !== \"POST\") return;\n    const contentType = req.headers.get(\"content-type\");\n    if (contentType?.includes(\"application/json\")) {\n        return await req.json();\n    } else if (contentType?.includes(\"application/x-www-form-urlencoded\")) {\n        const params = new URLSearchParams(await req.text());\n        return Object.fromEntries(params);\n    }\n}\nconst actions = [\n    \"providers\",\n    \"session\",\n    \"csrf\",\n    \"signin\",\n    \"signout\",\n    \"callback\",\n    \"verify-request\",\n    \"error\"\n];\nasync function toInternalRequest(req) {\n    try {\n        let originalUrl = new URL(req.url.replace(/\\/$/, \"\"));\n        let url = new URL(originalUrl);\n        const pathname = url.pathname.replace(/\\/$/, \"\");\n        const action = actions.find((a)=>pathname.includes(a));\n        if (!action) {\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.UnknownAction(`Cannot detect action in pathname (${pathname}).`);\n        }\n        // Remove anything after the basepath\n        const re = new RegExp(`/${action}.*`);\n        url = new URL(url.href.replace(re, \"\"));\n        if (req.method !== \"GET\" && req.method !== \"POST\") {\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.UnknownAction(\"Only GET and POST requests are supported.\");\n        }\n        const providerIdOrAction = pathname.split(\"/\").pop();\n        let providerId;\n        if (providerIdOrAction && !action.includes(providerIdOrAction) && [\n            \"signin\",\n            \"callback\"\n        ].includes(action)) {\n            providerId = providerIdOrAction;\n        }\n        return {\n            url,\n            action,\n            providerId,\n            method: req.method,\n            headers: Object.fromEntries(req.headers),\n            body: req.body ? await getBody(req) : undefined,\n            cookies: (0,cookie__WEBPACK_IMPORTED_MODULE_0__.parse)(req.headers.get(\"cookie\") ?? \"\") ?? {},\n            error: originalUrl.searchParams.get(\"error\") ?? undefined,\n            query: Object.fromEntries(originalUrl.searchParams)\n        };\n    } catch (e) {\n        return e;\n    }\n}\nfunction toRequest(request) {\n    return new Request(request.url, {\n        headers: request.headers,\n        method: request.method,\n        body: request.method === \"POST\" ? JSON.stringify(request.body ?? {}) : undefined\n    });\n}\nfunction toResponse(res) {\n    const headers = new Headers(res.headers);\n    res.cookies?.forEach((cookie)=>{\n        const { name, value, options } = cookie;\n        const cookieHeader = (0,cookie__WEBPACK_IMPORTED_MODULE_0__.serialize)(name, value, options);\n        if (headers.has(\"Set-Cookie\")) headers.append(\"Set-Cookie\", cookieHeader);\n        else headers.set(\"Set-Cookie\", cookieHeader);\n    });\n    let body = res.body;\n    if (headers.get(\"content-type\") === \"application/json\") body = JSON.stringify(res.body);\n    else if (headers.get(\"content-type\") === \"application/x-www-form-urlencoded\") body = new URLSearchParams(res.body).toString();\n    const status = res.redirect ? 302 : res.status ?? 200;\n    const response = new Response(body, {\n        headers,\n        status\n    });\n    if (res.redirect) response.headers.set(\"Location\", res.redirect);\n    return response;\n}\n/** Web compatible method to create a hash, using SHA256 */ async function createHash(message) {\n    const data = new TextEncoder().encode(message);\n    const hash = await crypto.subtle.digest(\"SHA-256\", data);\n    return Array.from(new Uint8Array(hash)).map((b)=>b.toString(16).padStart(2, \"0\")).join(\"\").toString();\n}\n/** Web compatible method to create a random string of a given length */ function randomString(size) {\n    const i2hex = (i)=>(\"0\" + i.toString(16)).slice(-2);\n    const r = (a, i)=>a + i2hex(i);\n    const bytes = crypto.getRandomValues(new Uint8Array(size));\n    return Array.from(bytes).reduce(r, \"\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@auth/core/lib/utils/web.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@auth/core/providers/credentials.js":
/*!**********************************************************!*\
  !*** ./node_modules/@auth/core/providers/credentials.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Credentials)\n/* harmony export */ });\n/**\n * The Credentials provider allows you to handle signing in with arbitrary credentials,\n * such as a username and password, domain, or two factor authentication or hardware device (e.g. YubiKey U2F / FIDO).\n *\n * It is intended to support use cases where you have an existing system you need to authenticate users against.\n *\n * It comes with the constraint that users authenticated in this manner are not persisted in the database,\n * and consequently that the Credentials provider can only be used if JSON Web Tokens are enabled for sessions.\n *\n * :::caution\n * The functionality provided for credentials-based authentication is intentionally limited to discourage the use of passwords due to the inherent security risks of the username-password model.\n *\n * OAuth providers spend significant amounts of money, time, and engineering effort to build:\n *\n * - abuse detection (bot-protection, rate-limiting)\n * - password management (password reset, credential stuffing, rotation)\n * - data security (encryption/salting, strength validation)\n *\n * and much more for authentication solutions. It is likely that your application would benefit from leveraging these battle-tested solutions rather than try to rebuild them from scratch.\n *\n * If you'd still like to build password-based authentication for your application despite these risks, Auth.js gives you full control to do so.\n *\n * :::\n *\n * See the [callbacks documentation](/reference/core#authconfig#callbacks) for more information on how to interact with the token. For example, you can add additional information to the token by returning an object from the `jwt()` callback:\n *\n * ```js\n * callbacks: {\n *   async jwt({ token, user, account, profile, isNewUser }) {\n *     if (user) {\n *       token.id = user.id\n *     }\n *     return token\n *   }\n * }\n * ```\n *\n * @example\n * ```js\n * import Auth from \"@auth/core\"\n * import Credentials from \"@auth/core/providers/credentials\"\n *\n * const request = new Request(\"https://example.com\")\n * const response = await AuthHandler(request, {\n *   providers: [\n *     Credentials({\n *       credentials: {\n *         username: { label: \"Username\" },\n *         password: {  label: \"Password\", type: \"password\" }\n *       },\n *       async authorize({ request }) {\n *         const response = await fetch(request)\n *         if(!response.ok) return null\n *         return await response.json() ?? null\n *       }\n *     })\n *   ],\n *   secret: \"...\",\n *   trustHost: true,\n * })\n * ```\n * @see [Username/Password Example](https://authjs.dev/guides/providers/credentials#example---username--password)\n * @see [Web3/Signin With Ethereum Example](https://authjs.dev/guides/providers/credentials#example---web3--signin-with-ethereum)\n */ function Credentials(config) {\n    return {\n        id: \"credentials\",\n        name: \"Credentials\",\n        type: \"credentials\",\n        credentials: {},\n        authorize: ()=>null,\n        // @ts-expect-error\n        options: config\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF1dGgvY29yZS9wcm92aWRlcnMvY3JlZGVudGlhbHMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Q0ErREMsR0FDYyxTQUFTQSxZQUFZQyxNQUFNO0lBQ3RDLE9BQU87UUFDSEMsSUFBSTtRQUNKQyxNQUFNO1FBQ05DLE1BQU07UUFDTkMsYUFBYSxDQUFDO1FBQ2RDLFdBQVcsSUFBTTtRQUNqQixtQkFBbUI7UUFDbkJDLFNBQVNOO0lBQ2I7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYXV0aC9jb3JlL3Byb3ZpZGVycy9jcmVkZW50aWFscy5qcz8yNmIzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGhlIENyZWRlbnRpYWxzIHByb3ZpZGVyIGFsbG93cyB5b3UgdG8gaGFuZGxlIHNpZ25pbmcgaW4gd2l0aCBhcmJpdHJhcnkgY3JlZGVudGlhbHMsXG4gKiBzdWNoIGFzIGEgdXNlcm5hbWUgYW5kIHBhc3N3b3JkLCBkb21haW4sIG9yIHR3byBmYWN0b3IgYXV0aGVudGljYXRpb24gb3IgaGFyZHdhcmUgZGV2aWNlIChlLmcuIFl1YmlLZXkgVTJGIC8gRklETykuXG4gKlxuICogSXQgaXMgaW50ZW5kZWQgdG8gc3VwcG9ydCB1c2UgY2FzZXMgd2hlcmUgeW91IGhhdmUgYW4gZXhpc3Rpbmcgc3lzdGVtIHlvdSBuZWVkIHRvIGF1dGhlbnRpY2F0ZSB1c2VycyBhZ2FpbnN0LlxuICpcbiAqIEl0IGNvbWVzIHdpdGggdGhlIGNvbnN0cmFpbnQgdGhhdCB1c2VycyBhdXRoZW50aWNhdGVkIGluIHRoaXMgbWFubmVyIGFyZSBub3QgcGVyc2lzdGVkIGluIHRoZSBkYXRhYmFzZSxcbiAqIGFuZCBjb25zZXF1ZW50bHkgdGhhdCB0aGUgQ3JlZGVudGlhbHMgcHJvdmlkZXIgY2FuIG9ubHkgYmUgdXNlZCBpZiBKU09OIFdlYiBUb2tlbnMgYXJlIGVuYWJsZWQgZm9yIHNlc3Npb25zLlxuICpcbiAqIDo6OmNhdXRpb25cbiAqIFRoZSBmdW5jdGlvbmFsaXR5IHByb3ZpZGVkIGZvciBjcmVkZW50aWFscy1iYXNlZCBhdXRoZW50aWNhdGlvbiBpcyBpbnRlbnRpb25hbGx5IGxpbWl0ZWQgdG8gZGlzY291cmFnZSB0aGUgdXNlIG9mIHBhc3N3b3JkcyBkdWUgdG8gdGhlIGluaGVyZW50IHNlY3VyaXR5IHJpc2tzIG9mIHRoZSB1c2VybmFtZS1wYXNzd29yZCBtb2RlbC5cbiAqXG4gKiBPQXV0aCBwcm92aWRlcnMgc3BlbmQgc2lnbmlmaWNhbnQgYW1vdW50cyBvZiBtb25leSwgdGltZSwgYW5kIGVuZ2luZWVyaW5nIGVmZm9ydCB0byBidWlsZDpcbiAqXG4gKiAtIGFidXNlIGRldGVjdGlvbiAoYm90LXByb3RlY3Rpb24sIHJhdGUtbGltaXRpbmcpXG4gKiAtIHBhc3N3b3JkIG1hbmFnZW1lbnQgKHBhc3N3b3JkIHJlc2V0LCBjcmVkZW50aWFsIHN0dWZmaW5nLCByb3RhdGlvbilcbiAqIC0gZGF0YSBzZWN1cml0eSAoZW5jcnlwdGlvbi9zYWx0aW5nLCBzdHJlbmd0aCB2YWxpZGF0aW9uKVxuICpcbiAqIGFuZCBtdWNoIG1vcmUgZm9yIGF1dGhlbnRpY2F0aW9uIHNvbHV0aW9ucy4gSXQgaXMgbGlrZWx5IHRoYXQgeW91ciBhcHBsaWNhdGlvbiB3b3VsZCBiZW5lZml0IGZyb20gbGV2ZXJhZ2luZyB0aGVzZSBiYXR0bGUtdGVzdGVkIHNvbHV0aW9ucyByYXRoZXIgdGhhbiB0cnkgdG8gcmVidWlsZCB0aGVtIGZyb20gc2NyYXRjaC5cbiAqXG4gKiBJZiB5b3UnZCBzdGlsbCBsaWtlIHRvIGJ1aWxkIHBhc3N3b3JkLWJhc2VkIGF1dGhlbnRpY2F0aW9uIGZvciB5b3VyIGFwcGxpY2F0aW9uIGRlc3BpdGUgdGhlc2Ugcmlza3MsIEF1dGguanMgZ2l2ZXMgeW91IGZ1bGwgY29udHJvbCB0byBkbyBzby5cbiAqXG4gKiA6OjpcbiAqXG4gKiBTZWUgdGhlIFtjYWxsYmFja3MgZG9jdW1lbnRhdGlvbl0oL3JlZmVyZW5jZS9jb3JlI2F1dGhjb25maWcjY2FsbGJhY2tzKSBmb3IgbW9yZSBpbmZvcm1hdGlvbiBvbiBob3cgdG8gaW50ZXJhY3Qgd2l0aCB0aGUgdG9rZW4uIEZvciBleGFtcGxlLCB5b3UgY2FuIGFkZCBhZGRpdGlvbmFsIGluZm9ybWF0aW9uIHRvIHRoZSB0b2tlbiBieSByZXR1cm5pbmcgYW4gb2JqZWN0IGZyb20gdGhlIGBqd3QoKWAgY2FsbGJhY2s6XG4gKlxuICogYGBganNcbiAqIGNhbGxiYWNrczoge1xuICogICBhc3luYyBqd3QoeyB0b2tlbiwgdXNlciwgYWNjb3VudCwgcHJvZmlsZSwgaXNOZXdVc2VyIH0pIHtcbiAqICAgICBpZiAodXNlcikge1xuICogICAgICAgdG9rZW4uaWQgPSB1c2VyLmlkXG4gKiAgICAgfVxuICogICAgIHJldHVybiB0b2tlblxuICogICB9XG4gKiB9XG4gKiBgYGBcbiAqXG4gKiBAZXhhbXBsZVxuICogYGBganNcbiAqIGltcG9ydCBBdXRoIGZyb20gXCJAYXV0aC9jb3JlXCJcbiAqIGltcG9ydCBDcmVkZW50aWFscyBmcm9tIFwiQGF1dGgvY29yZS9wcm92aWRlcnMvY3JlZGVudGlhbHNcIlxuICpcbiAqIGNvbnN0IHJlcXVlc3QgPSBuZXcgUmVxdWVzdChcImh0dHBzOi8vZXhhbXBsZS5jb21cIilcbiAqIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgQXV0aEhhbmRsZXIocmVxdWVzdCwge1xuICogICBwcm92aWRlcnM6IFtcbiAqICAgICBDcmVkZW50aWFscyh7XG4gKiAgICAgICBjcmVkZW50aWFsczoge1xuICogICAgICAgICB1c2VybmFtZTogeyBsYWJlbDogXCJVc2VybmFtZVwiIH0sXG4gKiAgICAgICAgIHBhc3N3b3JkOiB7ICBsYWJlbDogXCJQYXNzd29yZFwiLCB0eXBlOiBcInBhc3N3b3JkXCIgfVxuICogICAgICAgfSxcbiAqICAgICAgIGFzeW5jIGF1dGhvcml6ZSh7IHJlcXVlc3QgfSkge1xuICogICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKHJlcXVlc3QpXG4gKiAgICAgICAgIGlmKCFyZXNwb25zZS5vaykgcmV0dXJuIG51bGxcbiAqICAgICAgICAgcmV0dXJuIGF3YWl0IHJlc3BvbnNlLmpzb24oKSA/PyBudWxsXG4gKiAgICAgICB9XG4gKiAgICAgfSlcbiAqICAgXSxcbiAqICAgc2VjcmV0OiBcIi4uLlwiLFxuICogICB0cnVzdEhvc3Q6IHRydWUsXG4gKiB9KVxuICogYGBgXG4gKiBAc2VlIFtVc2VybmFtZS9QYXNzd29yZCBFeGFtcGxlXShodHRwczovL2F1dGhqcy5kZXYvZ3VpZGVzL3Byb3ZpZGVycy9jcmVkZW50aWFscyNleGFtcGxlLS0tdXNlcm5hbWUtLXBhc3N3b3JkKVxuICogQHNlZSBbV2ViMy9TaWduaW4gV2l0aCBFdGhlcmV1bSBFeGFtcGxlXShodHRwczovL2F1dGhqcy5kZXYvZ3VpZGVzL3Byb3ZpZGVycy9jcmVkZW50aWFscyNleGFtcGxlLS0td2ViMy0tc2lnbmluLXdpdGgtZXRoZXJldW0pXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIENyZWRlbnRpYWxzKGNvbmZpZykge1xuICAgIHJldHVybiB7XG4gICAgICAgIGlkOiBcImNyZWRlbnRpYWxzXCIsXG4gICAgICAgIG5hbWU6IFwiQ3JlZGVudGlhbHNcIixcbiAgICAgICAgdHlwZTogXCJjcmVkZW50aWFsc1wiLFxuICAgICAgICBjcmVkZW50aWFsczoge30sXG4gICAgICAgIGF1dGhvcml6ZTogKCkgPT4gbnVsbCxcbiAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvclxuICAgICAgICBvcHRpb25zOiBjb25maWcsXG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6WyJDcmVkZW50aWFscyIsImNvbmZpZyIsImlkIiwibmFtZSIsInR5cGUiLCJjcmVkZW50aWFscyIsImF1dGhvcml6ZSIsIm9wdGlvbnMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@auth/core/providers/credentials.js\n");

/***/ })

};
;